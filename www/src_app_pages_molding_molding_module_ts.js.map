{"version":3,"file":"src_app_pages_molding_molding_module_ts.js","mappings":";;;;;;;;;;;;;;;;;AAA2C;AAEM;IAMpC,WAAW,SAAX,WAAW;IAGtB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAC1C,CAAC;IAED,YAAY,CAAC,cAAsB;QACjC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,cAAc,CAAC;iBACvC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACjB,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,EACC,GAAG,EAAE;gBACH,MAAM,EAAE,CAAC;YACX,CAAC,CACF,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAxBQ,yDAAU;;AAMN,WAAW;IAHvB,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAkBvB;AAlBuB;;;;;;;;;;;;;;;;;;;;ACRiB;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;IACD;QACE,IAAI,EAAE,qBAAqB;QAC3B,YAAY,EAAE,GAAG,EAAE,CAAC,0OAA0D,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,2BAA2B,CAAC;KACzH;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACpBI;AACM;AACF;AAEA;AACuB;AAEvB;AAC4D;IAY5F,iBAAiB,SAAjB,iBAAiB;CAAI;AAArB,iBAAiB;IAV7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;YACxB,mHAAsB;SACvB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBwE;AAC7C;AAC6E;AAItE;AACY;AACa;AACvB;AACC;AACE;IAOxD,WAAW,SAAX,WAAW;IAQtB,YACS,WAAwB,EACxB,cAA8B,EAC9B,kBAAsC,EACtC,eAAgC,EAChC,UAAsB,EACtB,MAAc,EACd,OAAsB,EACrB,iBAAoC,EACpC,WAAyB,EACzB,cAA8B,EAC9B,eAAgC,EACjC,WAAwB;QAXxB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,oBAAe,GAAf,eAAe,CAAiB;QAChC,eAAU,GAAV,UAAU,CAAY;QACtB,WAAM,GAAN,MAAM,CAAQ;QACd,YAAO,GAAP,OAAO,CAAe;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAc;QACzB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,oBAAe,GAAf,eAAe,CAAiB;QACjC,gBAAW,GAAX,WAAW,CAAa;QAE/B,IAAI,CAAC,OAAO;YACZ;gBACE,EAAE,EAAE,IAAI;gBACR,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,IAAI,IAAI,EAAE;gBACtB,SAAS,EAAE,IAAI;gBACf,WAAW,EAAE,IAAI;aAClB,CAAC;QAEF,MAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC;YACxC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC;SACpC;IAEH,CAAC;IAEK,eAAe,CAAC,SAAiB;;YACrC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAClD,QAAQ,EAAE,iBAAiB;gBAC3B,OAAO,EAAE,4CAA4C;aACtD,CAAC,CAAC;YACH,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,SAAS,CAAC;iBAC1C,IAAI,CAAC,CAAC,OAAgB,EAAE,EAAE;gBACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;gBACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC1B,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAED,eAAe;QACb,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;IACrC,CAAC;IAED,QAAQ;IACR,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAClC,CAAC;IAGK,wBAAwB;;YAC5B,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,kCAAkC;gBAC1C,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,YAAY;wBAClB,IAAI,EAAE,MAAM;wBACZ,WAAW,EAAE,sBAAsB;wBACnC,QAAQ,EAAE,CAAC;wBACX,EAAE,EAAE,iBAAiB;qBACtB;iBACF;gBACD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,SAAS;wBACf,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,qBAAqB;wBAC/B,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;4BAChB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;wBACtC,CAAC;qBACF,EAAE;wBACD,IAAI,EAAE,SAAS;wBACf,QAAQ,EAAE,CAAC,mBAAmB,EAAE,QAAQ,EAAE,cAAc,CAAC;wBACzD,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;4BAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACtC,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC9B,MAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;gBACnE,IAAI,eAAe,EAAE;oBACnB,eAAe,CAAC,KAAK,EAAE,CAAC;iBACzB;YACH,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAGD,aAAa,CAAC,UAAkB;QAC9B,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,UAAU,CAAC;aACpD,IAAI,CAAC,CAAC,IAAiB,EAAE,EAAE;YAC1B,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,eAAe;QACb,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;QACzD,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;YAC9B,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;SAC3B;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC;QACjC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;IACrC,CAAC;IACD,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC;QAClC,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;IACpC,CAAC;IAGK,eAAe;;YACnB,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAClD,QAAQ,EAAE,iBAAiB;gBAC3B,OAAO,EAAE,wCAAwC;aAClD,CAAC,CAAC;YACH,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;iBAC3D,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBACxD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAC5B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9C,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;iBACnC;qBAAM;oBACL,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC;oBAC9C,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;iBAC/B;YACH,CAAC,CAAC;iBACD,KAAK,CAAC,GAAG,EAAE;gBACV,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC1B,OAAO,CAAC,KAAK,CAAC,yCAAyC,CAAC,CAAC;YAC3D,CAAC,CAAC;iBACD,OAAO,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC1B,OAAO,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;YACL,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,OAAO,CAAC,YAAY,EAAE,CAAC;YACpD,qCAAqC;QACvC,CAAC;KAAA;IAED,SAAS,CAAC,KAAa;QACrB,IAAI;YACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,eAAe,KAAK,EAAE,CAAC,CAAC;YACpC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC/C;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACtB;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,EAAE;aACf,IAAI,CAAC,GAAG,EAAE;YACT,wCAAwC;YACxC,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC,CAAC;YACtD,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,EACC,GAAG,EAAE;YACH,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACT,CAAC;IAED,WAAW;QACT,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC3C,IAAI,CAAC,iBAAiB,EAAE;iBACrB,IAAI,CAAC,CAAC,kBAAkB,EAAE,EAAE;gBAC3B,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,kBAAkB,CAAC,CAAC;gBAC7D,IAAI,kBAAkB,EAAE;oBACtB,2CAA2C;oBAC3C,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;oBACrD,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,IAAI,EAAE;wBAC5B,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BACrE,IAAI,CAAC,CAAC,eAAwB,EAAE,EAAE;4BACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,4BAA4B,CAAC,eAAe,CAAC,CAAC;4BACjF,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;4BACnE,OAAO,EAAE,CAAC;wBACZ,CAAC,EACC,GAAG,EAAE;4BACH,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;4BAC1D,MAAM,EAAE,CAAC;wBACX,CAAC,CAAC,CAAC;qBACR;yBAAM;wBACL,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;6BACvE,IAAI,CAAC,CAAC,eAAwB,EAAE,EAAE;4BACjC,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC;4BAC/B,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;4BACrD,OAAO,EAAE,CAAC;wBACZ,CAAC,EACC,GAAG,EAAE;4BACH,OAAO,CAAC,KAAK,CAAC,wDAAwD,CAAC,CAAC;4BACxE,MAAM,EAAE,CAAC;wBACX,CAAC,CAAC,CAAC;qBACR;iBACF;qBAAM;oBACL,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;oBACvC,MAAM,EAAE,CAAC;iBACV;YACH,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,OAAO,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,KAAK,IAAI,EAAE;gBACnC,OAAO,CAAC,GAAG,CAAC,kFAAkF,CAAC,CAAC;gBAChG,IAAI,CAAC,uBAAuB,EAAE;qBAC3B,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;oBACjB,IAAI,QAAQ,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,QAAQ,CAAC,CAAC;wBACtE,qCAAqC;wBACrC,OAAO,CAAC,IAAI,CAAC,CAAC;qBACf;yBAAM;wBACL,OAAO,CAAC,GAAG,CAAC,qDAAqD,EAAE,QAAQ,CAAC,CAAC;wBAC7E,OAAO,CAAC,KAAK,CAAC,CAAC;qBAChB;gBACH,CAAC,EACC,CAAC,QAAQ,EAAE,EAAE;oBACX,MAAM,OAAO,GAAG,4FAA4F,CAAC;oBAC7G,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;oBAC/B,MAAM,CAAC,OAAO,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;aACR;iBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;gBACzC,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;gBAChD,OAAO,CAAC,KAAK,CAAC,CAAC;aAChB;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,CAAC;aACf;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAEK,mBAAmB;;YACvB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,yBAAyB;gBACjC,OAAO,EAAE,iCAAiC;gBAC1C,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,CAAC,mBAAmB,EAAE,YAAY,CAAC;wBAC7C,EAAE,EAAE,eAAe;wBACnB,OAAO,EAAE,GAAG,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;wBACtC,CAAC;qBACF,EAAE;wBACD,IAAI,EAAE,KAAK;wBACX,EAAE,EAAE,gBAAgB;wBACpB,QAAQ,EAAE,kBAAkB;wBAC5B,OAAO,EAAE,GAAG,EAAE;4BACZ,IAAI,CAAC,YAAY,EAAE,CAAC;wBACtB,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;IAED,uBAAuB;QACrB,OAAO,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9C,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC1B,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,QAAQ;gBAChB,OAAO,EAAE,oFAAoF;gBAC7F,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,KAAK;wBACX,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,CAAC,mBAAmB,EAAE,YAAY,CAAC;wBAC7C,EAAE,EAAE,eAAe;wBACnB,OAAO,EAAE,GAAG,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;4BAC9B,OAAO,CAAC,KAAK,CAAC,CAAC;wBACjB,CAAC;qBACF,EAAE;wBACD,IAAI,EAAE,KAAK;wBACX,EAAE,EAAE,gBAAgB;wBACpB,QAAQ,EAAE,kBAAkB;wBAC5B,OAAO,EAAE,GAAG,EAAE;4BACZ,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;4BAC7B,OAAO,CAAC,IAAI,CAAC,CAAC;wBAChB,CAAC;qBACF;iBACF;aACF,CAAC;iBACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBACd,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,YAAY;QACV,8CAA8C;QAC9C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,WAAW,EAAE;aACf,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAEK,kBAAkB;;YACtB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,YAAY;gBACpB,SAAS,EAAE,kBAAkB;gBAC7B,OAAO,EAAE,0FAA0F;gBACnG,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YAEtB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,YAAY,EAAE,CAAC;YAC5C,wDAAwD;QAC1D,CAAC;KAAA;IAEK,qBAAqB;;YACzB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,sBAAsB;gBAC9B,SAAS,EAAE,oCAAoC;gBAC/C,OAAO,EAAE,qBAAqB;gBAC9B,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;YAEtB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,CAAC,YAAY,EAAE,CAAC;YAC5C,wDAAwD;QAC1D,CAAC;KAAA;IAEK,YAAY,CAAC,OAAe;;YAChC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,OAAO;gBACP,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,IAAI;gBACjB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,CAAC;KAAA;IAEK,cAAc;;YAClB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,QAAQ,EAAE,iBAAiB;gBAC3B,MAAM,EAAE,gBAAgB;gBACxB,MAAM,EAAE;oBACN;wBACE,IAAI,EAAE,WAAW;wBACjB,IAAI,EAAE,MAAM;wBACZ,WAAW,EAAE,gBAAgB;wBAC7B,QAAQ,EAAE,CAAC;wBACX,EAAE,EAAE,gBAAgB;qBACrB;iBACF;gBACD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,SAAS;wBACf,IAAI,EAAE,QAAQ;wBACd,QAAQ,EAAE,qBAAqB;wBAC/B,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;4BAChB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;wBACtC,CAAC;qBACF,EAAE;wBACD,IAAI,EAAE,SAAS;wBACf,QAAQ,EAAE,CAAC,mBAAmB,EAAE,QAAQ,EAAE,cAAc,CAAC;wBACzD,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;4BAChB,IAAI,CAAC,eAAe,EAAE,CAAC;wBACzB,CAAC;qBACF;iBACF;aACF,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC9B,MAAM,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;gBACnE,IAAI,eAAe,EAAE;oBACnB,eAAe,CAAC,KAAK,EAAE,CAAC;iBACzB;YACH,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;CACF;;YApaQ,2EAAW;YAFX,qFAAc;YACd,kGAAkB;YANL,2DAAe;YAI5B,yEAAU;YALM,oDAAM;YACgD,yDAAa;YAAhC,6DAAiB;YASpE,8EAAY;YAVZ,4DAAc;YACuE,2DAAe;YAQpG,4EAAW;;;wBASjB,qDAAS,SAAC,WAAW;yBACrB,qDAAS,SAAC,YAAY;;AAFZ,WAAW;IALvB,yDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,4LAAkC;;KAEnC,CAAC;GACW,WAAW,CA2ZvB;AA3ZuB;;;;;;;;;;;;;;;AClBxB,iEAAe,6YAA6Y,gBAAgB,k4BAAk4B,0EAA0E,mBAAmB,iJAAiJ,oBAAoB,qIAAqI,sDAAsD,2HAA2H,4CAA4C,2HAA2H,4CAA4C,+pCAA+pC,mCAAmC,2DAA2D,mDAAmD,0DAA0D,kDAAkD,ioBAAioB","sources":["./src/app/_services/scan/scan.service.ts","./src/app/pages/molding/molding-routing.module.ts","./src/app/pages/molding/molding.module.ts","./src/app/pages/molding/molding.page.ts","./src/app/pages/molding/molding.page.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Kit } from 'src/app/_interface/kit';\nimport { KitService } from '../kits/kit.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScanService {\n\n  public scanState: boolean;\n  constructor(private kitService: KitService) {\n  }\n\n  getScanInput(scanInputValue: string) {\n    return new Promise((resolve, reject) => {\n      this.kitService.getKitById(scanInputValue)\n        .then((kit: Kit) => {\n          resolve(kit);\n        },\n          () => {\n            reject();\n          }\n        );\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MoldingPage } from './molding.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MoldingPage\n  },\n  {\n    path: 'print-molding-sheet',\n    loadChildren: () => import('./print-molding-sheet/print-molding-sheet.module').then( m => m.PrintMoldingSheetPageModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MoldingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { MoldingPageRoutingModule } from './molding-routing.module';\n\nimport { MoldingPage } from './molding.page';\nimport { SharedUserHeaderModule } from 'src/app/composants/shared-user-header/shared-user-header.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MoldingPageRoutingModule,\n    SharedUserHeaderModule,\n  ],\n  declarations: [MoldingPage]\n})\nexport class MoldingPageModule { }\n","import { AfterViewInit, Component, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertButton, AlertController, IonButton, IonInput, LoadingController, NavController, ToastController } from '@ionic/angular';\nimport { Kit } from 'src/app/_interface/kit';\nimport { Molding } from 'src/app/_interface/molding';\nimport { MoldingTool } from 'src/app/_interface/molding-tool';\nimport { KitService } from 'src/app/_services/kits/kit.service';\nimport { MoldingService } from 'src/app/_services/moldings/molding.service';\nimport { MoldingToolService } from 'src/app/_services/moldingTools/molding-tool.service';\nimport { ScanService } from 'src/app/_services/scan/scan.service';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { UsersService } from 'src/app/_services/users/users.service';\n\n@Component({\n  selector: 'app-molding',\n  templateUrl: './molding.page.html',\n  styleUrls: ['./molding.page.scss'],\n})\nexport class MoldingPage implements OnInit, AfterViewInit {\n  @ViewChild('scanInput') scanInput: IonInput;\n  @ViewChild('scanButton') scanButton: IonButton;\n\n  public pageTitle: string;\n  public scanButtonText: string;\n  public molding: Molding;\n\n  constructor(\n    public scanService: ScanService,\n    public moldingService: MoldingService,\n    public moldingToolService: MoldingToolService,\n    public alertController: AlertController,\n    public kitService: KitService,\n    public router: Router,\n    public navCtrl: NavController,\n    private loadingController: LoadingController,\n    private userService: UsersService,\n    private activatedRoute: ActivatedRoute,\n    private toastController: ToastController,\n    public authService: AuthService,\n  ) {\n    this.molding =\n    {\n      id: null,\n      kits: [],\n      moldingDay: new Date(),\n      outillage: null,\n      moldingUser: null\n    };\n\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\n    if (id) {\n      this.pageTitle = 'Modification moulage';\n      this.loadMoldingData(id);\n    } else {\n      this.pageTitle = 'Nouveau moulage';\n    }\n\n  }\n\n  async loadMoldingData(moldingId: string) {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Patienter pendant le chargement du moulage',\n    });\n    this.moldingService.getMoldingById(moldingId)\n      .then((molding: Molding) => {\n        this.molding = molding;\n        this.molding.updatedAt = new Date();\n        console.log(this.molding);\n        loading.dismiss();\n      });\n  }\n\n  ngAfterViewInit(): void {\n    this.scanButtonText = 'SCAN INACTIF';\n    this.scanButton.color = 'danger';\n    this.scanService.scanState = false;\n  }\n\n  ngOnInit() {\n  }\n\n  associateToolClick() {\n    this.associateToolAlertPrompt();\n  }\n\n\n  async associateToolAlertPrompt() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Associer l\\'outillage de moulage',\n      inputs: [\n        {\n          name: 'toolNumber',\n          type: 'text',\n          placeholder: 'Scannez l\\'outillage',\n          tabindex: 1,\n          id: 'toolNumberInput',\n        }\n      ],\n      buttons: [\n        {\n          text: 'Annuler',\n          role: 'cancel',\n          cssClass: 'ion-color-secondary',\n          handler: (data) => {\n            console.log('Confirm Cancel', data);\n          }\n        }, {\n          text: 'Valider',\n          cssClass: ['ion-color-primary', 'button', 'button-solid'],\n          handler: (data) => {\n            this.setLinkedTool(data.toolNumber);\n          }\n        }\n      ]\n    });\n\n    await alert.present().then(() => {\n      const toolNumberInput = document.getElementById('toolNumberInput');\n      if (toolNumberInput) {\n        toolNumberInput.focus();\n      }\n    });\n  }\n\n\n  setLinkedTool(toolNumber: string) {\n    console.log(toolNumber);\n    this.moldingToolService.getToolByToolNumber(toolNumber)\n      .then((tool: MoldingTool) => {\n        this.molding.outillage = tool;\n        this.presentToast('Outillage associé !');\n      });\n  }\n\n  switchScanState() {\n    this.scanService.scanState = !this.scanService.scanState;\n    if (this.scanService.scanState) {\n      this.scanInput.setFocus();\n    }\n  }\n\n  inputOnBlur() {\n    this.scanButton.color = 'danger';\n    this.scanButtonText = 'SCAN INACTIF';\n    this.scanService.scanState = false;\n  }\n  inputOnFocus() {\n    this.scanButton.color = 'success';\n    this.scanButtonText = 'SCAN ACTIF';\n    this.scanService.scanState = true;\n  }\n\n\n  async scanInputAction() {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Patienter pendant le chargement du kit',\n    });\n    await loading.present();\n    this.scanService.getScanInput(this.scanInput.value.toString())\n      .then((kit: Kit) => {\n        if (!this.kitService.kitIsInKits(kit, this.molding.kits)) {\n          this.molding.kits.push(kit);\n          this.moldingService.updateDates(this.molding);\n          this.presentToast('Kit ajouté !');\n        } else {\n          this.presentToast('Le kit a déjà été scanné');\n          console.log('kit en doublon');\n        }\n      })\n      .catch(() => {\n        this.wrongKitInputAlert();\n        console.error('Le kit scanné ne semble pas être un kit');\n      })\n      .finally(() => {\n        this.scanInput.value = '';\n        loading.dismiss();\n      });\n    const { role, data } = await loading.onDidDismiss();\n    // console.log('Loading dismissed!');\n  }\n\n  removeKit(index: number) {\n    try {\n      this.molding.kits.splice(index, 1);\n      console.log(`Kit removed ${index}`);\n      this.moldingService.updateDates(this.molding);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  saveMoldingClick() {\n    this.saveMolding()\n      .then(() => {\n        // On demande si on veut imprimer ou non\n        console.log('Kit sauvegardé. Voulez-vous imprimer ?');\n        this.presentAlertConfirm();\n      },\n        () => {\n          this.saveMoldingErrorAlert();\n        });\n  }\n\n  saveMolding() {\n    return new Promise<void>((resolve, reject) => {\n      this.checkMoldingDatas()\n        .then((moldingDatasStatus) => {\n          console.log('le moulage à le statut : ', moldingDatasStatus);\n          if (moldingDatasStatus) {\n            // sauvegarder le moulage en base de donnée\n            this.molding.moldingUser = this.authService.authUser;\n            if (this.molding.id === null) {\n              this.moldingService.saveMolding(this.moldingService.toIri(this.molding))\n                .then((responseMolding: Molding) => {\n                  this.molding = this.moldingService.moldingServerToMoldingObject(responseMolding);\n                  console.log('tout est OK le moulage est sauvegardé', this.molding);\n                  resolve();\n                },\n                  () => {\n                    console.log('tout n\\'est pas Ok la sauvegarde a échouée');\n                    reject();\n                  });\n            } else {\n              this.moldingService.updateMolding(this.moldingService.toIri(this.molding))\n                .then((responseMolding: Molding) => {\n                  this.molding = responseMolding;\n                  console.log('tout est OK le moulage est mis à jour');\n                  resolve();\n                },\n                  () => {\n                    console.error('tout n\\'est pas Ok la mise à jour du moulage a échouée');\n                    reject();\n                  });\n            }\n          } else {\n            console.error('sauvegarde abandonnée');\n            reject();\n          }\n        });\n    });\n  }\n\n  checkMoldingDatas() {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.molding.outillage === null) {\n        console.log('le moulage n\\'a pas d\\'outillage associé. Voulez-vous continuer sans outillage ?');\n        this.presentAlertToolMissing()\n          .then((response) => {\n            if (response) {\n              console.log('onResolve : Je veux continuer sans outillage', response);\n              // console.error('erreur', response);\n              resolve(true);\n            } else {\n              console.log('onResolve : Je ne veux pas continuer sans outillage', response);\n              resolve(false);\n            }\n          },\n            (response) => {\n              const message = 'Les données n\\ont pas pu être contrôlées. OU Il n\\'y a pas eu de réponse de l\\'utilisateur';\n              console.log(message, response);\n              reject(message);\n            });\n      } else if (this.molding.kits.length === 0) {\n        console.log('onResolve : Il n\\'y a pas de kit');\n        resolve(false);\n      } else {\n        resolve(true);\n      }\n    });\n\n  }\n\n  async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Enregistrement effectué',\n      message: 'Voulez-vous imprimer la fiche ?',\n      buttons: [\n        {\n          text: 'Non',\n          role: 'cancel',\n          cssClass: ['ion-color-primary', 'ion-button'],\n          id: 'cancel-button',\n          handler: () => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Oui',\n          id: 'confirm-button',\n          cssClass: 'ion-color-danger',\n          handler: () => {\n            this.printMolding();\n          },\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  presentAlertToolMissing() {\n    return new Promise<boolean>((resolve, reject) => {\n      this.alertController.create({\n        cssClass: 'my-custom-class',\n        header: 'Alerte',\n        message: 'L\\'outillage de moulage n\\'est pas associé. voulez-vous continuer sans outillage ?',\n        buttons: [\n          {\n            text: 'Non',\n            role: 'cancel',\n            cssClass: ['ion-color-primary', 'ion-button'],\n            id: 'cancel-button',\n            handler: () => {\n              console.log('Response false');\n              resolve(false);\n            }\n          }, {\n            text: 'Oui',\n            id: 'confirm-button',\n            cssClass: 'ion-color-danger',\n            handler: () => {\n              console.log('Response true');\n              resolve(true);\n            },\n          }\n        ]\n      })\n        .then((alert) => {\n          alert.present();\n        });\n    });\n\n  }\n\n  printMolding() {\n    // this.moldingService.molding = this.molding;\n    console.log(this.molding);\n    this.router.navigate(['/printMolding', this.molding.id]);\n  }\n\n  printMoldingClick() {\n    this.saveMolding()\n      .then(() => {\n        this.printMolding();\n      });\n  }\n\n  async wrongKitInputAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Erreur Kit',\n      subHeader: 'Kit non conforme',\n      message: 'Il semble y avoir un problème avec le kit scanné. Vérifier le kit et essayer de nouveau.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    // console.log('onDidDismiss resolved with role', role);\n  }\n\n  async saveMoldingErrorAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Erreur de sauvegarde',\n      subHeader: 'Le moulage n\\'a pas été sauvegardé',\n      message: 'Veuillez ré-essayer',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    // console.log('onDidDismiss resolved with role', role);\n  }\n\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message,\n      duration: 2000,\n      position: 'bottom',\n      translucent: true,\n      animated: true,\n    });\n    toast.present();\n  }\n\n  async kitAlertPrompt() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Scannez un kit',\n      inputs: [\n        {\n          name: 'kitnumber',\n          type: 'text',\n          placeholder: 'Scannez le kit',\n          tabindex: 1,\n          id: 'kitNumberInput',\n        }\n      ],\n      buttons: [\n        {\n          text: 'Annuler',\n          role: 'cancel',\n          cssClass: 'ion-color-secondary',\n          handler: (data) => {\n            console.log('Confirm Cancel', data);\n          }\n        }, {\n          text: 'Valider',\n          cssClass: ['ion-color-primary', 'button', 'button-solid'],\n          handler: (data) => {\n            this.scanInputAction();\n          }\n        }\n      ]\n    });\n\n    await alert.present().then(() => {\n      const toolNumberInput = document.getElementById('toolNumberInput');\n      if (toolNumberInput) {\n        toolNumberInput.focus();\n      }\n    });\n  }\n}\n","export default \"<app-shared-user-header [page]=\\\"pageTitle\\\"></app-shared-user-header>\\n<ion-content>\\n    <ion-toolbar color=light class=\\\"ion-hide-md-down\\\">\\n        <ion-buttons slot=\\\"start\\\" collapse=\\\"true\\\">\\n            <ion-button #scanButton fill=solid size=default (click)=\\\"switchScanState()\\\">\\n                <!-- <ion-icon slot=\\\"start\\\" name=\\\"scan-outline\\\"></ion-icon> -->\\n                {{scanButtonText}}\\n            </ion-button>\\n            <ion-input lines=true #scanInput type=\\\"text\\\" placeholder=\\\"Id du kit\\\" (change)=\\\"scanInputAction()\\\" (focusout)=\\\"inputOnBlur()\\\" (focusin)=\\\"inputOnFocus()\\\"></ion-input>\\n            <ion-button (click)=\\\"associateToolClick()\\\" fill=clear size=default>\\n                <ion-icon slot=\\\"start\\\" name=\\\"link-outline\\\"></ion-icon>\\n                OUTILLAGE\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n\\n\\n    <ion-list *ngIf=\\\"molding?.kits\\\">\\n        <ion-item>\\n            <ion-label class=\\\"ion-hide-md-down\\\">Référence Sap</ion-label>\\n            <ion-label>Désignation</ion-label>\\n            <ion-label>Péremption à -18°C</ion-label>\\n            <ion-label>A draper avant le</ion-label>\\n            <ion-label>A cuire avant le</ion-label>\\n        </ion-item>\\n        <ion-item *ngFor=\\\"let kit of molding.kits; let index = index\\\">\\n            <ion-label class=\\\"ion-hide-md-down\\\">{{kit.referenceSAP}} <span *ngIf=\\\"kit === molding.matDrap\\\">(Drap)</span><span *ngIf=\\\"kit === molding.matPolym\\\">(Pol)</span></ion-label>\\n            <ion-label>{{kit.designationSAP}}</ion-label>\\n            <ion-label [color]=\\\"kitService.isPerim(kit.peremptionMoins18, molding.moldingDay) ? 'danger' : 'dark'\\\">{{kit.peremptionMoins18 | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n            <ion-label [color]=\\\"kitService.isPerim(kit.aDrapAv, molding.moldingDay) ? 'danger' : 'dark'\\\">{{kit.aDrapAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n            <ion-label [color]=\\\"kitService.isPerim(kit.aCuirAv, molding.moldingDay) ? 'danger' : 'dark'\\\">{{kit.aCuirAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n            <ion-button class=\\\"ion-hide-md-down\\\" (click)=\\\"removeKit(index)\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ion-list>\\n</ion-content>\\n\\n<ion-tab-bar slot=\\\"bottom\\\" class=\\\"ion-hide-md-up\\\">\\n    <ion-tab-button tab=\\\"schedule\\\">\\n        <ion-icon name=\\\"link\\\"></ion-icon>\\n        <ion-label>Outillage</ion-label>\\n        <ion-badge>6</ion-badge>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"speakers\\\" (click)=\\\"kitAlertPrompt()\\\">\\n        <ion-icon name=\\\"scan\\\"></ion-icon>\\n        <ion-label>Scan kit</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"map\\\">\\n        <ion-icon name=\\\"print\\\"></ion-icon>\\n        <ion-label>Imprimer</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"about\\\" (click)=\\\"saveMoldingClick()\\\">\\n        <ion-icon name=\\\"save\\\"></ion-icon>\\n        <ion-label>Sauvegarder</ion-label>\\n    </ion-tab-button>\\n</ion-tab-bar>\\n\\n<ion-footer class=\\\"ion-hide-md-down\\\">\\n    <ion-toolbar class=\\\"ion-space-between\\\">\\n        <ion-item lines=\\\"none\\\">\\n            <ion-label>Outillage : {{molding?.outillage?.sapToolNumber}}</ion-label>\\n            <ion-label>A draper avant le : {{molding?.aDraperAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n            <ion-label>A cuire avant le : {{molding?.aCuireAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n        </ion-item>\\n    </ion-toolbar>\\n    <ion-toolbar color=light>\\n        <ion-buttons slot=\\\"end\\\" collapse=\\\"true\\\">\\n            <ion-button slot=end (click)=\\\"saveMoldingClick()\\\" fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                SAUVEGARDER\\n            </ion-button>\\n            <ion-button slot=end (click)=\\\"printMoldingClick()\\\" fill=\\\"solid\\\" color=primary>\\n                <ion-icon slot=\\\"start\\\" name=\\\"print-outline\\\"></ion-icon>\\n                IMPRIMER\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n\\n</ion-footer>\\n\";"],"names":[],"sourceRoot":"webpack:///"}