{"version":3,"file":"src_app_pages_molding_molding_module_ts.js","mappings":"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","sources":["./src/app/pages/molding/molding-routing.module.ts","./src/app/pages/molding/molding.module.ts","./src/app/pages/molding/molding.page.ts","./src/app/pages/molding/molding.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/_services/users/auth.guard';\nimport { MoldingPage } from './molding.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MoldingPage,\n    canActivate: [AuthGuard],\n    children: [\n      // {\n      //   path: '',\n      //   redirectTo: 'create-molding',\n      //   pathMatch: 'full'\n      // },\n      {\n        path: 'print-molding-sheet',\n        canActivate: [AuthGuard],\n        loadChildren: () => import('../../pages/molding/print-molding-sheet/print-molding-sheet.module')\n          .then(m => m.PrintMoldingSheetPageModule)\n      },\n      {\n        path: 'create-molding',\n        canActivate: [AuthGuard],\n        loadChildren: () => import('../../pages/molding/create-molding/create-molding.module')\n          .then(m => m.CreateMoldingPageModule)\n      },\n      {\n        path: 'create-molding/:id',\n        canActivate: [AuthGuard],\n        loadChildren: () => import('../../pages/molding/create-molding/create-molding.module')\n          .then(m => m.CreateMoldingPageModule),\n      },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MoldingPageRoutingModule {\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { MoldingPageRoutingModule } from './molding-routing.module';\r\nimport { MoldingPage } from './molding.page';\r\nimport { SharedUserHeaderModule } from 'src/app/composants/shared-user-header/shared-user-header.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MenuModule } from 'src/app/composants/menu/menu.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    MoldingPageRoutingModule,\r\n    SharedUserHeaderModule,\r\n    MenuModule,\r\n    RouterModule\r\n  ],\r\n  declarations: [MoldingPage]\r\n})\r\nexport class MoldingPageModule { }\r\n","import { AfterViewChecked, AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IonInput, IonMenu, NavController } from '@ionic/angular';\r\n@Component({\r\n  selector: 'app-molding',\r\n  templateUrl: './molding.page.html',\r\n  styleUrls: ['./molding.page.scss'],\r\n})\r\nexport class MoldingPage implements OnInit, AfterViewInit, AfterViewChecked {\r\n  @ViewChild('inputIdMolding') inputIdMolding: IonInput;\r\n  @ViewChild('menu') menu: IonMenu;\r\n  public page: any;\r\n  constructor(\r\n    public router: Router,\r\n    public navCtrl: NavController,\r\n  ) {\r\n  }\r\n  ngAfterViewChecked(): void {\r\n    // console.log('after view checked molding page');\r\n    this.page = {\r\n      pageTitle: 'MODULE MOULAGE',\r\n      menuTitle: 'Menu Moulage',\r\n      contentId: 'molding-content'\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    console.log('after view INIT molding page');\r\n  }\r\n  ngOnInit(): void {\r\n    console.log('INIT molding page');\r\n    this.page = {\r\n      pageTitle: 'MODULE MOULAGE',\r\n      menuTitle: 'Menu Moulage',\r\n      contentId: 'molding-content'\r\n    };\r\n  }\r\n\r\n\r\n  idMoldingInputChange() {\r\n    if (this.inputIdMolding.value !== '') {\r\n      console.log(this.inputIdMolding.value);\r\n      this.menu.close();\r\n      this.router.navigate([`molding/create-molding`, this.inputIdMolding.value]);\r\n    }\r\n  }\r\n  navigate(url: string) {\r\n    this.navCtrl.navigateRoot(url);\r\n  }\r\n\r\n}\r\n","export default \"<app-shared-user-header [pageTitle]=\\\"page.pageTitle\\\"></app-shared-user-header>\\r\\n<ion-content [fullscreen]=\\\"false\\\" color=medium>\\r\\n    <ion-menu open=true #menu side=\\\"start\\\" type=\\\"push\\\" [contentId]=\\\"page.contentId\\\">\\r\\n        <ion-header>\\r\\n            <ion-toolbar color=\\\"succes\\\">\\r\\n                <ion-title>\\r\\n                    {{page.menuTitle}}\\r\\n                </ion-title>\\r\\n            </ion-toolbar>\\r\\n        </ion-header>\\r\\n        <ion-content>\\r\\n            <ion-list>\\r\\n                <ion-menu-toggle auto-hide=\\\"true\\\">\\r\\n                    <ion-item [button]=\\\"true\\\" (click)=\\\"navigate('molding/create-molding')\\\">\\r\\n                        <ion-label>\\r\\n                            Nouveau moulage\\r\\n                        </ion-label>\\r\\n                    </ion-item>\\r\\n                </ion-menu-toggle>\\r\\n                <ion-item [button]=\\\"false\\\">\\r\\n                    <ion-label>\\r\\n                        Modifier moulage\\r\\n                    </ion-label>\\r\\n                    <ion-input #inputIdMolding type=\\\"text\\\" placeholder=\\\"\\\" (change)=\\\"idMoldingInputChange()\\\"></ion-input>\\r\\n                    <ion-note slot=helper>Entrer un numéro d'ID ou scanner le code barre de la feuille de moulage</ion-note>\\r\\n                </ion-item>\\r\\n            </ion-list>\\r\\n        </ion-content>\\r\\n    </ion-menu>\\r\\n    <!-- <ion-menu #menu side=\\\"start\\\" type=\\\"push\\\" contentId=\\\"molding-content\\\">\\r\\n        <ion-header>\\r\\n            <ion-toolbar color=\\\"succes\\\">\\r\\n                <ion-title>Menu moulage</ion-title>\\r\\n            </ion-toolbar>\\r\\n        </ion-header>\\r\\n        <ion-content>\\r\\n            <ion-list>\\r\\n                <ion-item-group>\\r\\n                    <ion-item-divider>\\r\\n                        <ion-label>Nouveau moulage</ion-label>\\r\\n                    </ion-item-divider>\\r\\n                    <ion-item [routerLink]=\\\"['create-molding']\\\">\\r\\n                        <ion-label>Création outillage</ion-label>\\r\\n                    </ion-item>\\r\\n                    <ion-item>Modification</ion-item>\\r\\n                    <ion-item [routerLink]=\\\"['molding-list']\\\">Mes moulages</ion-item>\\r\\n                </ion-item-group>\\r\\n                <ion-item-group>\\r\\n                    <ion-item-divider>\\r\\n                        <ion-label>Consulter</ion-label>\\r\\n                    </ion-item-divider>\\r\\n                    <ion-item [routerLink]=\\\"['molding-list']\\\">\\r\\n                        <ion-label>Liste des moulages</ion-label>\\r\\n                    </ion-item>\\r\\n                    <ion-item routerLink=\\\"\\\">Entretien B15 - Frekote</ion-item>\\r\\n                </ion-item-group>\\r\\n            </ion-list>\\r\\n        </ion-content>\\r\\n    </ion-menu> -->\\r\\n    <!-- <ion-card class=\\\"menu-item-card\\\" [button]=\\\"(menuItem.type === 'button')\\\" *ngFor=\\\"let menuItem of page.menuItems\\\" [routerLink]=\\\"(menuItem.type ==='button') ? menuItem.path : null\\\">\\r\\n        <ion-card-header>\\r\\n            <ion-card-title>\\r\\n                <ion-icon *ngIf=\\\"menuItem.options?.qualityOnly\\\" name=\\\"shield-half-outline\\\"></ion-icon>\\r\\n                {{menuItem.title}}\\r\\n            </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content *ngIf=\\\"menuItem.options?.input\\\">\\r\\n            <ion-item shape=round>\\r\\n                <ion-label>Id Moulage</ion-label>\\r\\n                <ion-input #inputIdMolding type=\\\"text\\\" placeholder=\\\"\\\" (change)=\\\"idMoldingInputChange()\\\"></ion-input>\\r\\n                <ion-note slot=helper>Entrer un numéro d'ID ou scanner le code barre de la feuille de moulage</ion-note>\\r\\n            </ion-item>\\r\\n        </ion-card-content>\\r\\n    </ion-card> -->\\r\\n    <ion-router-outlet id=\\\"molding-content\\\"></ion-router-outlet>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}