{"version":3,"file":"default-src_app_pages_molding_create-molding_create-molding_module_ts.js","mappings":"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","sources":["./src/app/_services/core/core.service.ts","./src/app/_services/divers/alert.service.ts","./src/app/_services/divers/loading.service.ts","./src/app/_services/scan/scan.service.ts","./src/app/pages/molding/create-molding/create-molding-routing.module.ts","./src/app/pages/molding/create-molding/create-molding.module.ts","./src/app/pages/molding/create-molding/create-molding.page.ts","./src/app/pages/molding/create-molding/create-molding.page.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Core } from 'src/app/_interface/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n\r\n  constructor() { }\r\n  getCoreByBatchNumber(batchNumber: string) {\r\n    return new Promise<Core>((resolve, reject) => {\r\n      let returnBatchNumber: any = batchNumber.substring(5,).split('~');\r\n      console.log(returnBatchNumber);\r\n      returnBatchNumber = {\r\n        partNumber: returnBatchNumber[0],\r\n        batch1: returnBatchNumber[1],\r\n        batch2: returnBatchNumber[2],\r\n      };\r\n      const core: Core = {\r\n        idCore: 1,\r\n        batchNumber: returnBatchNumber\r\n      };\r\n      console.log(core);\r\n      resolve(core);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(\n    private alertController: AlertController\n  ) { }\n\n  async simpleAlert(header: string, subHeader: string, message: string) {\n    const alert = await this.alertController.create({\n      cssClass: 'simple-alert',\n      header,\n      subHeader,\n      message,\n      buttons: [\n        {\n          text: 'Fermer',\n          role: 'cancel',\n          id: 'cancel-button',\n        }\n      ]\n    });\n    await alert.present();\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n  public loading: any;\r\n  constructor(private loadingController: LoadingController) {\r\n  }\r\n\r\n  startLoading() {\r\n    this.loadingController.create({\r\n      cssClass: 'my-custom-class',\r\n      message: 'Patienter pendant le chargement du kit',\r\n    })\r\n      .then((response) => {\r\n        response.present();\r\n      });\r\n  }\r\n\r\n  async stopLoading() {\r\n    setTimeout(() => {\r\n      this.loadingController.dismiss();\r\n    }, 100);\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Core } from 'src/app/_interface/core';\r\nimport { Kit } from 'src/app/_interface/kit';\r\nimport { Tool } from 'src/app/_interface/tool';\r\nimport { CoreService } from '../core/core.service';\r\nimport { AlertService } from '../divers/alert.service';\r\nimport { LoadingService } from '../divers/loading.service';\r\nimport { KitService } from '../kits/kit.service';\r\nimport { ToolService } from '../tools/tool.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScanService {\r\n\r\n  public scanState: boolean;\r\n  constructor(\r\n    private kitService: KitService,\r\n    private toolService: ToolService,\r\n    private coreService: CoreService) {\r\n  }\r\n\r\n  getScanInput(scanInputValue: string) {\r\n    console.log(scanInputValue);\r\n\r\n    return new Promise<Kit | Tool | Core>((resolve, reject) => {\r\n      // test de la valeur dans le scan. Identifier puis lancer la bonne fonction\r\n      const regexKit = new RegExp('^([0-9]){8}-[0-9]$');\r\n      const regexSapToolNumber = new RegExp('^OT([0-9]){6}$');\r\n      const regexNidaHexcel = new RegExp('^]C201');\r\n      if (scanInputValue.match(regexKit)) {\r\n        console.log('kit');\r\n        this.kitService.getKitById(scanInputValue)\r\n          .then((kit: Kit) => {\r\n            resolve(kit);\r\n          },\r\n            () => {\r\n              reject();\r\n            }\r\n          );\r\n      } else if (scanInputValue.match(regexSapToolNumber)) {\r\n        console.log('tool');\r\n        if (scanInputValue.startsWith('OT0')) {\r\n          scanInputValue = scanInputValue.substr(3);\r\n        }\r\n        this.toolService.getToolByToolNumber(scanInputValue)\r\n          .then((tool: Tool) => {\r\n            resolve(tool);\r\n          },\r\n            () => {\r\n              reject();\r\n            })\r\n          .catch(() => {\r\n            console.error('catch get molding Tool ');\r\n          });\r\n\r\n      } else if (scanInputValue.match(regexNidaHexcel)) {\r\n        this.coreService.getCoreByBatchNumber(scanInputValue)\r\n          .then((core: Core) => {\r\n            resolve(core);\r\n          });\r\n      } else {\r\n        reject();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from 'src/app/_services/users/auth.guard';\nimport { CreateMoldingPage } from './create-molding.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateMoldingPage,\n    canActivate: [AuthGuard]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CreateMoldingPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { CreateMoldingPageRoutingModule } from './create-molding-routing.module';\nimport { CreateMoldingPage } from './create-molding.page';\nimport { SharedUserHeaderModule } from 'src/app/composants/shared-user-header/shared-user-header.module';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CreateMoldingPageRoutingModule,\n    SharedUserHeaderModule,\n    MatExpansionModule,\n  ],\n  declarations: [CreateMoldingPage]\n})\nexport class CreateMoldingPageModule { }\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { MatAccordion, MatExpansionPanel } from '@angular/material/expansion';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertController, IonInput, LoadingController, NavController, ToastController } from '@ionic/angular';\nimport { Molding } from 'src/app/_interface/molding';\nimport { AlertService } from 'src/app/_services/divers/alert.service';\nimport { LoadingService } from 'src/app/_services/divers/loading.service';\nimport { KitService } from 'src/app/_services/kits/kit.service';\nimport { MoldingService } from 'src/app/_services/moldings/molding.service';\nimport { ScanService } from 'src/app/_services/scan/scan.service';\nimport { AuthService } from 'src/app/_services/users/auth.service';\n\n@Component({\n  selector: 'app-create-molding',\n  templateUrl: './create-molding.page.html',\n  styleUrls: ['./create-molding.page.scss'],\n})\nexport class CreateMoldingPage implements OnInit, AfterViewInit {\n  @ViewChild('scanInput') scanInput: IonInput;\n  @ViewChild('scanButton') scanButton: IonInput;\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n  @ViewChild('kitPanel') kitPanel: MatExpansionPanel;\n  public expanded = false;\n  public scanButtonText: string;\n  public molding: Molding;\n\n  constructor(\n    public scanService: ScanService,\n    public moldingService: MoldingService,\n    public alertController: AlertController,\n    public kitService: KitService,\n    public router: Router,\n    public navCtrl: NavController,\n    private loadingService: LoadingService,\n    private loadingController: LoadingController,\n    private activatedRoute: ActivatedRoute,\n    private toastController: ToastController,\n    public authService: AuthService,\n    private alertService: AlertService,\n  ) {\n    this.molding =\n    {\n      id: null,\n      cores: [],\n      kits: [],\n      moldingDay: new Date(),\n      outillage: null,\n      createdBy: null\n    };\n    console.log('test');\n    const id = this.activatedRoute.snapshot.paramMap.get('id');\n    if (id) {\n      // this.pageTitle = 'Modification moulage';\n      this.loadMoldingData(id);\n    } else {\n      // this.pageTitle = 'Nouveau moulage';\n    }\n  }\n\n  async loadMoldingData(moldingId: string) {\n    const loading = await this.loadingController.create({\n      cssClass: 'my-custom-class',\n      message: 'Patienter pendant le chargement du moulage',\n    });\n    this.moldingService.getMoldingById(moldingId)\n      .then((molding: Molding) => {\n        this.molding = molding;\n        this.moldingService.updateDates(this.molding);\n        this.molding.updatedAt = new Date();\n        console.log(this.molding);\n        loading.dismiss();\n      });\n  }\n\n  ngAfterViewInit(): void {\n    this.scanButtonText = 'SCAN INACTIF';\n    this.scanButton.color = 'danger';\n    this.scanService.scanState = false;\n    console.log('after view init', this.scanButton);\n  }\n\n  ngOnInit() {\n    console.log('init');\n  }\n\n  associateToolClick() {\n    this.associateToolAlertPrompt();\n  }\n\n  associateCoreClick() {\n    this.alertService.simpleAlert(\n      'Message d\\'information',\n      'Fonction inactive',\n      'La fonction permettra de lier un nida au moulage'\n    );\n  }\n\n\n  async associateToolAlertPrompt() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Associer l\\'outillage de moulage',\n      inputs: [\n        {\n          name: 'toolNumber',\n          type: 'text',\n          placeholder: 'Scannez l\\'outillage',\n          tabindex: 1,\n          id: 'toolNumberInput',\n        }\n      ],\n      buttons: [\n        {\n          text: 'Annuler',\n          role: 'cancel',\n          cssClass: 'ion-color-secondary',\n          handler: (data) => {\n            console.log('Confirm Cancel', data);\n          }\n        }, {\n          text: 'Valider',\n          cssClass: ['ion-color-primary', 'button', 'button-solid'],\n          handler: (data) => {\n            // this.setLinkedTool(data.toolNumber);\n          }\n        }\n      ]\n    });\n\n    await alert.present().then(() => {\n      const toolNumberInput = document.getElementById('toolNumberInput');\n      if (toolNumberInput) {\n        toolNumberInput.focus();\n      }\n    });\n  }\n\n\n  switchScanState() {\n    this.scanService.scanState = !this.scanService.scanState;\n    if (this.scanService.scanState) {\n      this.scanInput.setFocus();\n    }\n  }\n\n  inputOnBlur() {\n    this.scanButton.color = 'danger';\n    this.scanButtonText = 'SCAN INACTIF';\n    this.scanService.scanState = false;\n  }\n  inputOnFocus() {\n    this.scanButton.color = 'success';\n    this.scanButtonText = 'SCAN ACTIF';\n    this.scanService.scanState = true;\n  }\n\n  onInputChange(inputValue: string) {\n    this.loadingService.startLoading();\n    this.scanService.getScanInput(inputValue)\n      .then((data: any) => {\n        console.log(data);\n        if (Object.getOwnPropertyNames(data).includes('idMM')) {\n          if (!this.kitService.kitIsInKits(data, this.molding.kits)) {\n            this.molding.kits.unshift(data);\n            this.moldingService.updateDates(this.molding);\n            // this.presentToast('Kit ajouté !');\n          } else {\n            this.presentToast('Le kit a déjà été scanné');\n            console.log('kit en doublon');\n          }\n        } else if (Object.getOwnPropertyNames(data).includes('sapToolNumber')) {\n          this.molding.outillage = data;\n          this.presentToast('Outillage associé !');\n        } else if (Object.getOwnPropertyNames(data).includes('idCore')) {\n          this.presentToast('Nida Ajouté !');\n          this.molding.cores.unshift(data);\n        }\n      })\n      .catch(() => {\n        console.error('Catch get scan input');\n      })\n      .finally(() => {\n        this.loadingService.stopLoading()\n          .then(() => {\n            setTimeout(() => {\n              this.switchScanState();\n              this.scanInput.value = '';\n            }, 1000);\n          });\n      });\n  }\n\n  removeKit(index: number) {\n    try {\n      this.molding.kits.splice(index, 1);\n      console.log(`Kit removed ${index}`);\n      this.moldingService.updateDates(this.molding);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n\n  saveMoldingClick() {\n    this.saveMolding()\n      .then(() => {\n        // On demande si on veut imprimer ou non\n        console.log('Kit sauvegardé. Voulez-vous imprimer ?');\n        this.presentAlertConfirm();\n      },\n        () => {\n          this.saveMoldingErrorAlert();\n        });\n  }\n\n\n  saveMolding() {\n    return new Promise<void>((resolve, reject) => {\n      this.checkMoldingDatas()\n        .then((moldingDatasStatus) => {\n          console.log('le moulage à le statut : ', moldingDatasStatus);\n          if (moldingDatasStatus) {\n            // sauvegarder le moulage en base de donnée\n            this.molding.createdBy = this.authService.authUser;\n            if (this.molding.id === null) {\n              this.moldingService.saveMolding(this.moldingService.toIri(this.molding))\n                .then((responseMolding: Molding) => {\n                  this.molding = this.moldingService.moldingServerToMoldingObject(responseMolding);\n                  console.log('tout est OK le moulage est sauvegardé', this.molding);\n                  resolve();\n                },\n                  () => {\n                    console.log('tout n\\'est pas Ok la sauvegarde a échouée');\n                    reject();\n                  });\n            } else {\n              this.moldingService.updateMolding(this.moldingService.toIri(this.molding))\n                .then((responseMolding: Molding) => {\n                  this.molding = responseMolding;\n                  console.log('tout est OK le moulage est mis à jour');\n                  resolve();\n                },\n                  () => {\n                    this.alertService.simpleAlert(\n                      'Message d\\'erreur',\n                      'Sauvegarde échouée !',\n                      'La sauvegarde ne sest pas correctement effectuée. Veuillez recommencer');\n                    console.error('tout n\\'est pas Ok la mise à jour du moulage a échouée');\n                    reject();\n                  });\n            }\n          } else {\n            console.error('sauvegarde abandonnée');\n            reject();\n          }\n        });\n    });\n  }\n\n  checkMoldingDatas() {\n    return new Promise<boolean>((resolve, reject) => {\n      if (this.molding.outillage === null) {\n        console.log('le moulage n\\'a pas d\\'outillage associé. Voulez-vous continuer sans outillage ?');\n        this.presentAlertToolMissing()\n          .then((response) => {\n            if (response) {\n              console.log('onResolve : Je veux continuer sans outillage', response);\n              // console.error('erreur', response);\n              resolve(true);\n            } else {\n              console.log('onResolve : Je ne veux pas continuer sans outillage', response);\n              resolve(false);\n            }\n          },\n            (response) => {\n              const message = 'Les données n\\ont pas pu être contrôlées. OU Il n\\'y a pas eu de réponse de l\\'utilisateur';\n              console.log(message, response);\n              reject(message);\n            });\n      } else if (this.molding.kits.length === 0) {\n        console.log('onResolve : Il n\\'y a pas de kit');\n        resolve(false);\n      } else {\n        resolve(true);\n      }\n    });\n\n  }\n\n  async presentAlertConfirm() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Enregistrement effectué',\n      message: 'Voulez-vous imprimer la fiche ?',\n      buttons: [\n        {\n          text: 'Non',\n          role: 'cancel',\n          cssClass: ['ion-color-primary', 'ion-button'],\n          id: 'cancel-button',\n          handler: () => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'Oui',\n          id: 'confirm-button',\n          cssClass: 'ion-color-danger',\n          handler: () => {\n            this.printMolding();\n          },\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  presentAlertToolMissing() {\n    return new Promise<boolean>((resolve, reject) => {\n      this.alertController.create({\n        cssClass: 'my-custom-class',\n        header: 'Alerte',\n        message: 'L\\'outillage de moulage n\\'est pas associé. voulez-vous continuer sans outillage ?',\n        buttons: [\n          {\n            text: 'Non',\n            role: 'cancel',\n            cssClass: ['ion-color-primary', 'ion-button'],\n            id: 'cancel-button',\n            handler: () => {\n              console.log('Response false');\n              resolve(false);\n            }\n          }, {\n            text: 'Oui',\n            id: 'confirm-button',\n            cssClass: 'ion-color-danger',\n            handler: () => {\n              console.log('Response true');\n              resolve(true);\n            },\n          }\n        ]\n      })\n        .then((alert) => {\n          alert.present();\n        });\n    });\n\n  }\n\n  printMolding() {\n    // this.moldingService.molding = this.molding;\n    console.log(this.molding);\n    this.router.navigate(['/printMolding', this.molding.id]);\n  }\n\n  printMoldingClick() {\n    this.saveMolding()\n      .then(() => {\n        this.printMolding();\n      });\n  }\n\n  async wrongKitInputAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Erreur Kit',\n      subHeader: 'Kit non conforme',\n      message: 'Il semble y avoir un problème avec le kit scanné. Vérifier le kit et essayer de nouveau.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    // console.log('onDidDismiss resolved with role', role);\n  }\n\n  async saveMoldingErrorAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Erreur de sauvegarde',\n      subHeader: 'Le moulage n\\'a pas été sauvegardé',\n      message: 'Veuillez ré-essayer',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n\n    const { role } = await alert.onDidDismiss();\n    // console.log('onDidDismiss resolved with role', role);\n  }\n\n  async presentToast(message: string) {\n    const toast = await this.toastController.create({\n      message,\n      duration: 1000,\n      position: 'bottom',\n      translucent: true,\n      animated: true,\n    });\n    toast.present();\n  }\n\n  async kitAlertPrompt() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Scannez un kit',\n      inputs: [\n        {\n          name: 'kitnumber',\n          type: 'text',\n          placeholder: 'Scannez le kit',\n          tabindex: 1,\n          id: 'kitNumberInput',\n        }\n      ],\n      buttons: [\n        {\n          text: 'Annuler',\n          role: 'cancel',\n          cssClass: 'ion-color-secondary',\n          handler: (data) => {\n            console.log('Confirm Cancel', data);\n          }\n        }, {\n          text: 'Valider',\n          cssClass: ['ion-color-primary', 'button', 'button-solid'],\n          handler: (data) => {\n            // if (data.kitnumber !== '') { this.scanInputAction(data.kitnumber, 'test'); };\n          }\n        }\n      ]\n    });\n\n    await alert.present().then(() => {\n    });\n  }\n\n}\n","export default \"<!-- <app-shared-user-header [page]=\\\"pageTitle\\\"></app-shared-user-header> -->\\n<ion-content color=medium [fullscreen]=\\\"true\\\">\\n    <ion-toolbar color=light class=\\\"ion-hide-md-down\\\">\\n        <ion-button slot=start size=small #scanButton fill=solid size=default (click)=\\\"switchScanState()\\\">\\n            <!-- <ion-icon slot=\\\"start\\\" name=\\\"scan-outline\\\"></ion-icon> -->\\n            {{scanButtonText}}\\n        </ion-button>\\n        <ion-input slot=start #scanInput type=\\\"text\\\" placeholder=\\\"Id du composant\\\" (change)=\\\"onInputChange(scanInput.value.toString())\\\" (focusout)=\\\"inputOnBlur()\\\" (focusin)=\\\"inputOnFocus()\\\"></ion-input>\\n        <ion-button size=small slot=start (click)=\\\"associateToolClick()\\\" fill=clear size=default>\\n            <ion-icon slot=\\\"start\\\" name=\\\"link-outline\\\"></ion-icon>\\n            OUTILLAGE\\n        </ion-button>\\n        <ion-button size=small slot=start disabled=\\\"false\\\" (click)=\\\"associateCoreClick()\\\" fill=clear size=default>\\n            <ion-icon slot=\\\"start\\\" name=\\\"link-outline\\\"></ion-icon>\\n            NIDA\\n        </ion-button>\\n\\n        <ion-button size=small slot=end (click)=\\\"(expanded = !expanded) ? accordion.openAll() : accordion.closeAll()\\\">{{(!expanded) ? 'Développer tout' : 'Replier tout'}}</ion-button>\\n    </ion-toolbar>\\n\\n    <mat-accordion class=\\\"example-headers-align\\\" multi>\\n        <mat-expansion-panel #kitPanel *ngIf=\\\"molding.kits?.length >0\\\" [expanded]=\\\"(molding.kits.length >0)\\\">\\n            <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    <ion-title color=primary> List des Kits</ion-title>\\n                </mat-panel-title>\\n\\n                <mat-panel-description>\\n\\n                </mat-panel-description>\\n            </mat-expansion-panel-header>\\n\\n            <ion-list *ngIf=\\\"molding?.kits\\\" class=\\\"ion-no-padding\\\">\\n                <ion-list-header lines=\\\"inset\\\" color=light>\\n                    <ion-label class=\\\"ion-hide-md-down\\\">Référence Sap</ion-label>\\n                    <ion-label class=\\\"ion-hide-md-down\\\">ID-MM</ion-label>\\n                    <ion-label>Désignation</ion-label>\\n                    <ion-label>Péremption à -18°C</ion-label>\\n                    <ion-label>A draper avant le</ion-label>\\n                    <ion-label>A cuire avant le</ion-label>\\n                </ion-list-header>\\n                <ion-item *ngFor=\\\"let kit of molding.kits; let index = index\\\">\\n                    <ion-label class=\\\"ion-hide-md-down\\\">{{kit.referenceSAP}}\\n                        <ion-text class=\\\"strong\\\" *ngIf=\\\"kit === molding.matDrap\\\">(Drap)</ion-text>\\n                        <ion-text class=\\\"strong\\\" *ngIf=\\\"kit === molding.matPolym\\\">(Pol)</ion-text>\\n                    </ion-label>\\n                    <ion-label class=\\\"ion-hide-md-down\\\">{{kit.idMM}}</ion-label>\\n                    <ion-label>{{kit.designationSAP}}</ion-label>\\n                    <ion-label [color]=\\\"kitService.isPerim(kit.peremptionMoins18, molding.moldingDay) ? 'danger' : 'dark'\\\">{{kit.peremptionMoins18 | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n                    <ion-label [color]=\\\"kitService.isPerim(kit.aDrapAv, molding.moldingDay) ? 'danger' : 'dark'\\\">{{kit.aDrapAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n                    <ion-label [color]=\\\"kitService.isPerim(kit.aCuirAv, molding.moldingDay) ? 'danger' : 'dark'\\\">{{kit.aCuirAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n                    <ion-button class=\\\"ion-hide-md-down\\\" (click)=\\\"removeKit(index)\\\">\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n                    </ion-button>\\n                </ion-item>\\n            </ion-list>\\n        </mat-expansion-panel>\\n\\n        <mat-expansion-panel *ngIf=\\\"molding.cores?.length >0\\\">\\n            <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    Liste des nidas\\n                </mat-panel-title>\\n                <mat-panel-description>\\n                    Liste des nidas\\n                </mat-panel-description>\\n            </mat-expansion-panel-header>\\n            <ion-list>\\n                <ion-item>\\n                    <ion-label *ngFor=\\\"let core of molding.cores\\\">\\n                        {{core.batchNumber.batch2}}\\n                    </ion-label>\\n                </ion-item>\\n            </ion-list>\\n        </mat-expansion-panel>\\n    </mat-accordion>\\n\\n    <!-- <ion-list *ngIf=\\\"molding?.kits\\\">\\n        <ion-list-header lines=\\\"inset\\\" color=light>\\n            <ion-label class=\\\"ion-hide-md-down\\\">Référence Sap</ion-label>\\n            <ion-label>Désignation</ion-label>\\n            <ion-label>Péremption à -18°C</ion-label>\\n            <ion-label>A draper avant le</ion-label>\\n            <ion-label>A cuire avant le</ion-label>\\n        </ion-list-header>\\n        <ion-item *ngFor=\\\"let kit of molding.kits; let index = index\\\">\\n            <ion-label class=\\\"ion-hide-md-down\\\">{{kit.referenceSAP}}\\n                <ion-text class=\\\"strong\\\" *ngIf=\\\"kit === molding.matDrap\\\">(Drap)</ion-text>\\n                <ion-text class=\\\"strong\\\" *ngIf=\\\"kit === molding.matPolym\\\">(Pol)</ion-text>\\n            </ion-label>\\n            <ion-label>{{kit.designationSAP}}</ion-label>\\n            <ion-label [color]=\\\"kitService.isPerim(kit.peremptionMoins18, molding.moldingDay) ? 'danger' : 'dark'\\\">{{kit.peremptionMoins18 | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n            <ion-label [color]=\\\"kitService.isPerim(kit.aDrapAv, molding.moldingDay) ? 'danger' : 'dark'\\\">{{kit.aDrapAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n            <ion-label [color]=\\\"kitService.isPerim(kit.aCuirAv, molding.moldingDay) ? 'danger' : 'dark'\\\">{{kit.aCuirAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n            <ion-button class=\\\"ion-hide-md-down\\\" (click)=\\\"removeKit(index)\\\">\\n                <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n        <ion-list-header lines=\\\"inset\\\" color=light>\\n            <ion-label>Liste des nidas</ion-label>\\n            <ion-label>Numéro de lot</ion-label>\\n        </ion-list-header>\\n        <ion-item>\\n            <ion-label>\\n                ]C201W028551~1020M0225104~5220M0225104001\\n            </ion-label>\\n        </ion-item>\\n    </ion-list> -->\\n</ion-content>\\n\\n<!-- footer -->\\n<ion-tab-bar slot=\\\"bottom\\\" class=\\\"ion-hide-md-up\\\">\\n    <ion-tab-button tab=\\\"schedule\\\">\\n        <ion-icon name=\\\"link\\\"></ion-icon>\\n        <ion-label>Outillage</ion-label>\\n        <ion-badge>6</ion-badge>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"speakers\\\" (click)=\\\"kitAlertPrompt()\\\">\\n        <ion-icon name=\\\"scan\\\"></ion-icon>\\n        <ion-label>Scan kit</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"map\\\">\\n        <ion-icon name=\\\"print\\\"></ion-icon>\\n        <ion-label>Imprimer</ion-label>\\n    </ion-tab-button>\\n\\n    <ion-tab-button tab=\\\"about\\\" (click)=\\\"saveMoldingClick()\\\">\\n        <ion-icon name=\\\"save\\\"></ion-icon>\\n        <ion-label>Sauvegarder</ion-label>\\n    </ion-tab-button>\\n</ion-tab-bar>\\n<ion-footer class=\\\"ion-hide-md-down\\\">\\n    <ion-toolbar class=\\\"ion-space-between\\\">\\n        <ion-item lines=\\\"none\\\">\\n            <ion-label>Outillage : {{molding?.outillage?.sapToolNumber}}</ion-label>\\n            <ion-label class=\\\"strong\\\">A draper avant le : {{molding?.aDraperAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n            <ion-label class=\\\"strong\\\">A cuire avant le : {{molding?.aCuireAv | date: \\\"dd/MM/yyyy à HH:mm\\\"}}</ion-label>\\n        </ion-item>\\n    </ion-toolbar>\\n    <ion-toolbar color=light>\\n        <ion-buttons slot=\\\"end\\\" collapse=\\\"true\\\">\\n            <ion-button slot=end (click)=\\\"saveMoldingClick()\\\" fill=\\\"clear\\\">\\n                <ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                SAUVEGARDER\\n            </ion-button>\\n            <ion-button slot=end (click)=\\\"printMoldingClick()\\\" fill=\\\"solid\\\" color=primary>\\n                <ion-icon slot=\\\"start\\\" name=\\\"print-outline\\\"></ion-icon>\\n                IMPRIMER\\n            </ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-footer>\";"],"names":[],"sourceRoot":"webpack:///"}