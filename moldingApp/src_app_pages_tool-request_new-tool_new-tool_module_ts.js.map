{"version":3,"file":"src_app_pages_tool-request_new-tool_new-tool_module_ts.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iEAAe,UAAU,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClIqG;AAC3E;AACsC;;AAE1F;AACA;AACA;AACA,+BAA+B;AAC/B,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA,wDAAwD,iEAAU;AAClE,0BAA0B;AAC1B,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,qCAAqC,yEAA0B;AAC/D,kBAAkB,kEAAW,+CAA+C,0DAAW;AACvF;AACA;AACA;AACA,qDAAqD,iEAAkB;AACvE,0BAA0B,mEAAoB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;;AAEA;AACA,SAAS,MAAM;AACf,4BAA4B;AAC5B,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA,mFAAmF;AACnF;AACA;AACA;AACA,gBAAgB,yEAA0B,UAAU;AACpD;AACA,MAAM,+BAA+B,mEAAoB;AACzD;AACA;;AAEA;AACA,0CAA0C,6BAA6B,QAAQ;AAC/E,6BAA6B;AAC7B,4CAA4C;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;;AAEA;AACA,eAAe;;AAEf;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA,sCAAsC,yEAA0B;AAChE,kBAAkB,kEAAW,+CAA+C,0DAAW;AACvF;AACA;AACA;AACA,sDAAsD,iEAAkB;AACxE,0BAA0B,mEAAoB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,gBAAgB,yEAA0B,UAAU;AACpD;AACA,MAAM,+BAA+B,mEAAoB;AACzD;AACA;;AAEA;AACA,0CAA0C,6BAA6B,QAAQ;AAC/E;AACA,iDAAiD;AACjD,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sDAAsD,4DAAa;AACnE;AACA,iCAAiC,8DAAO,yBAAyB;AACjE;AACA,IAAI;AACJ,YAAY,gEAAS;AACrB,yBAAyB;AACzB;AACA;AACA;AACA,mBAAmB,gBAAgB,mEAAoB;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4DAAa;AAClC,iCAAiC,8DAAO,uBAAuB;AAC/D;AACA,IAAI;AACJ,YAAY,gEAAS;AACrB,yBAAyB;AACzB;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iEAAU;AACjE,wBAAwB;AACxB,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,kBAAkB;AAClB;AACA;;AAEA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,mDAAmD;AACnD;AACA;AACA,oBAAoB,6DAAc;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2DAAY,8DAA8D;AAC/F;AACA,oCAAoC;AACpC;AACA;AACA;AACA,oBAAoB,mEAAoB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,QAAQ,+DAAQ;AAChB,sBAAsB;AACtB;AACA;AACA;AACA,sDAAsD,iEAAU;AAChE,wBAAwB;AACxB,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4DAAa;AAC9C,gCAAgC,+DAAQ,0BAA0B;AAClE,oBAAoB;AACpB;AACA;;AAEA,+BAA+B;;AAE/B;AACA;AACA;AACA,mCAAmC,4DAAa,+BAA+B,2DAAY,IAAI;AAC/F;AACA,mCAAmC,YAAY;AAC/C,cAAc,+DAAQ;AACtB,0BAA0B,+DAAQ,kDAAkD,YAAY;AAChG,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,kBAAkB,+BAA+B,mEAAoB;AACrE;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,mCAAmC,2DAAY;AACjE;AACA;;AAEA;AACA;AACA,yEAAyE;AACzE;AACA,oBAAoB;AACpB;AACA;AACA,0EAA0E,8DAAO;AACjF,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iEAAiE;AACjE,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA,kDAAkD,6DAAc;AAChE,oCAAoC,QAAQ;AAC5C,UAAU,OAAO,4DAAa;AAC9B,aAAa,4DAAa;AAC1B,iCAAiC,oEAAiB,uCAAuC,oDAAK;AAC9F;AACA,UAAU,8DAAO,oBAAoB;AACrC;AACA;AACA;AACA;;AAEA,iBAAiB,iEAAkB;AACnC,qFAAqF,iEAAU;AAC/F;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,WAAW,wBAAwB,oCAAoC;AACvE;AACA;AACA,oBAAoB,6DAAc;AAClC,0CAA0C,UAAU,SAAS,QAAQ,4DAAa;AAClF,qCAAqC,oEAAiB;AACtD;AACA,yDAAyD,oDAAK;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,yCAAyC;AACzC;AACA,QAAQ,+BAA+B,mEAAoB;AAC3D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,mEAAY;AACvE,qBAAqB;AACrB,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,kEAAkE;AAClE;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL,uBAAuB;AACvB,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,KAAK;AACL,eAAe,SAAS;AACxB;;AAEA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ,QAAQ;AACR;AACA,wBAAwB,2BAA2B;AACnD;AACA;AACA;AACA;AACA;AACA,0BAA0B,qBAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA,oBAAoB,4BAA4B;AAChD;AACA,sBAAsB,mBAAmB;AACzC,UAAU;AACV,gDAAgD,+BAA+B;AAC/E;;AAEA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA,8EAA8E,WAAW;AACzF;AACA,sBAAsB;AACtB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD,wCAAwC,UAAU;AAClD,UAAU,8DAAO,2BAA2B;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,qBAAqB;AACzC,QAAQ,0CAA0C;AAClD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAE+X;;;;;;;;;;;;;;;;;;;;;;;;ACltBtV;AACO;AACM;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA,UAAU;AACV;AACA,0BAA0B,OAAO;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,0DAAO;AACxB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,8BAA8B;AAC9B,iEAAiE,uBAAuB;AACxF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;;AAEA;AACA;AACA;AACA,uCAAuC,sBAAsB,iBAAiB;;AAE9E;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA,6BAA6B,cAAc;AAC3C,MAAM;AACN;AACA;;AAEA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,uCAAuC,kBAAkB,YAAY;AACrE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,MAAM;AACN;AACA;AACA,iBAAiB;AACjB;AACA;AACA,yBAAyB;AACzB;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH,oBAAoB,0DAAiB;AACrC;;AAEA,0BAA0B,2DAAkB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB,qCAAqC;;AAErC;;AAEA;AACA;AACA,IAAI;AACJ;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB,+BAA+B;AAC/B;AACA;AACA,oBAAoB,uBAAuB;AAC3C,QAAQ;AACR,UAAU;AACV,GAAG;AACH;AACA;;AAEA;AACA;AACA,gDAAgD,+BAA+B;AAC/E;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,kBAAkB,mBAAmB;AACrC;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;;AAEA;AACA,sEAAsE,kCAAkC;AACxG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,wDAAS;AAC9B,0BAA0B,wDAAS;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,aAAa,qDAAM;AACnB;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEiF;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtctC;AACmB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,qDAAM;AACzB;AACA,8BAA8B,aAAa;AAC3C;AACA;AACA,sBAAsB;AACtB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,WAAW;AACX;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA,qCAAqC;AACrC;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA,eAAe;AACf,sCAAsC,8CAA8C;AACpF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA,8CAA8C,QAAQ;AACtD,YAAY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,mEAAY;AACrG,qBAAqB;AACrB;AACA;AACA,6CAA6C,8DAAO;AACpD;AACA,QAAQ;AACR;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA,GAAG;AACH;;AAEgM;;;;;;;;;;;;;;;;;;AC/KpJ;AACD;;AAE3C;;AAEA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA,kBAAkB,sBAAsB;AACxC;AACA,uCAAuC;AACvC,sCAAsC;AACtC,gDAAgD;AAChD,wCAAwC;AACxC,mCAAmC,WAAW,eAAe,OAAO;AACpE,WAAW;AACX;AACA,aAAa;AACb,cAAc;AACd,cAAc;AACd,eAAe;AACf;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA,sBAAsB;AACtB,uBAAuB;AACvB,uBAAuB;AACvB,2CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qDAAM,EAAE,QAAQ,yCAAyC;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAO;AACtB;AACA,6DAA6D;AAC7D;AACA,oBAAoB,6CAAI;AACxB;AACA;AACA;AACA;AACA;AACA,mEAAmE;AACnE,MAAM;AACN;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;;AAEkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGE;;AAEpC;AACA,mBAAmB;AACnB;AACA,QAAQ;;AAER;AACA,4BAA4B,wBAAwB;;AAEpD,sCAAsC;;AAEtC;AACA,sBAAsB,kCAAkC;AACxD,UAAU;AACV;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA,QAAQ,0BAA0B;;AAElC;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA,sCAAsC,QAAQ;;AAE9C;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA,cAAc;AACd;AACA;AACA;AACA,mBAAmB;AACnB;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB,oBAAoB;AAC1D,MAAM;AACN;;AAEA,2BAA2B,cAAc,oBAAoB,cAAc,oBAAoB,eAAe;;AAE9G;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B,OAAO;AAC1C;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB,sCAAsC;AACtC;AACA,mBAAmB,yBAAyB,UAAU;AACtD;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,gDAAgD;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD,kBAAkB,yBAAyB;AAC3C,MAAM,6CAA6C;AACnD;AACA;;AAEA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB,0BAA0B;AAC1B,oCAAoC;AACpC,+BAA+B;AAC/B;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;;AAErD,+DAA+D;;AAE/D;AACA;AACA;AACA,+DAA+D,oBAAoB;AACnF;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA,qBAAqB;AACrB;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,mCAAmC;AACnC,8BAA8B;AAC9B,qBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA,sCAAsC;AACtC;AACA,mCAAmC;AACnC;AACA,gCAAgC;AAChC,oBAAoB,cAAc,OAAO,gCAAgC;AACzE,IAAI;AACJ,uBAAuB,6CAA6C;AACpE,yBAAyB,mBAAmB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA,0BAA0B;AAC1B;AACA,mBAAmB;AACnB,MAAM;AACN;AACA,MAAM;AACN;AACA,qBAAqB;AACrB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,eAAe;AACf,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC,MAAM;AACN,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC,MAAM,uBAAuB;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB,8BAA8B;AAC9B,kBAAkB,cAAc;AAChC,MAAM,sBAAsB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,+BAA+B;AAC/B;AACA,8BAA8B,mCAAmC;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,QAAQ;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B,cAAc;AACd,4BAA4B;AAC5B,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,6DAA6D,oBAAoB;AACrH,qCAAqC,mEAAmE,uBAAuB;AAC/H;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI,6FAA6F;AACjG;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,2BAA2B,cAAc,OAAO;AAChD;AACA,MAAM;AACN;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC,MAAM;AACN,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,UAAU,oBAAoB,QAAQ,oBAAoB,eAAe,oBAAoB,cAAc,oBAAoB,eAAe;;AAE3K;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW,OAAO;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA,eAAe,gBAAgB,cAAc;;AAE7C;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC,MAAM;AACN,QAAQ;;AAER;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA,kBAAkB,kBAAkB;AACpC,MAAM;AACN,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C,MAAM,0DAA0D;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B,0FAA0F,QAAQ;AAClG,MAAM;AACN,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,iBAAiB;AACnC,MAAM;AACN;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,yBAAyB;AAC3C;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,SAAS,oBAAoB,QAAQ,oBAAoB,WAAW,oBAAoB,eAAe,oBAAoB,aAAa;;AAEvK;AACA,iDAAiD;AACjD;AACA,+CAA+C;;AAE/C;AACA,kDAAkD;AAClD;AACA,sDAAsD;AACtD;AACA,oDAAoD;;AAEpD;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,YAAY,oBAAoB,eAAe,oBAAoB,gBAAgB,oBAAoB,eAAe,oBAAoB,cAAc,oBAAoB,YAAY,oBAAoB,gBAAgB,oBAAoB,kBAAkB,oBAAoB,aAAa,oBAAoB,WAAW,oBAAoB,WAAW,oBAAoB,WAAW;;AAE7Z;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA,0DAA0D;;AAE1D;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,wCAAwC;AACxC;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,kDAAkD;;AAElD,gEAAgE;;AAEhE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,oCAAoC;AACpC;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B,sBAAsB,SAAS,OAAO,0DAA0D;AAChG;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,kBAAkB,uBAAuB,OAAO;AAChD;AACA,MAAM,yHAAyH,qBAAqB;AACpJ,yCAAyC,sBAAsB;AAC/D;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM,0CAA0C,oBAAoB;AACpE;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,eAAe,oBAAoB,aAAa;;AAE/E;AACA,wCAAwC;AACxC;AACA;;AAEA,uDAAuD;;AAEvD,qEAAqE;;AAErE,oDAAoD;;AAEpD;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C;AAC/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA,iCAAiC,QAAQ;AACzC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,iBAAiB,oBAAoB,gBAAgB,oBAAoB,cAAc;;AAEpH;AACA;AACA,6BAA6B;AAC7B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC,MAAM,4BAA4B;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,gBAAgB;AACtC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA,qDAAqD;AACrD;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC,MAAM,gBAAgB,uBAAuB;AAC7C,QAAQ,qCAAqC;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,+CAA+C,4BAA4B;;AAEnF,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C,MAAM,mCAAmC;AACzC;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,mCAAmC;AAChF;AACA;AACA;AACA;AACA,8BAA8B,UAAU;AACxC,UAAU;AACV;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC,QAAQ,qCAAqC;AAC7C;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C,QAAQ;AACR;AACA,GAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,8BAA8B;AAC9B;;AAEA,+BAA+B,QAAQ;;AAEvC,gDAAgD;;AAEhD,iDAAiD;;AAEjD,iDAAiD;;AAEjD;;AAEA;AACA;AACA,OAAO;AACP;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA,OAAO;AACP;AACA,yCAAyC;AACzC;;AAEA;AACA;AACA,SAAS;AACT;AACA,QAAQ,QAAQ;AAChB;AACA,QAAQ,QAAQ;AAChB;AACA,QAAQ,QAAQ;AAChB,0BAA0B;AAC1B,QAAQ;AACR,WAAW;AACX;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B,WAAW;AACX;AACA,oBAAoB,MAAM;AAC1B,UAAU;AACV;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,IAAI;AACJ;AACA,mCAAmC;AACnC,iDAAiD;AACjD,cAAc;AACd,KAAK;AACL;AACA,2CAA2C;AAC3C,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,gCAAgC,sBAAsB;;AAEtF;AACA;AACA,sDAAsD,yCAAyC;AAC/F,MAAM;AACN,uBAAuB;AACvB;AACA,0CAA0C;AAC1C;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,iCAAiC,gBAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;AAC/C;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA,SAAS,uBAAuB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA,sBAAsB;AACtB,yCAAyC;AACzC,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,iBAAiB;AACnD;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA,+DAA+D;AAC/D,sCAAsC;AACtC;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,YAAY,oBAAoB,gBAAgB,oBAAoB,WAAW,oBAAoB,WAAW,oBAAoB,eAAe;;AAE9K;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA,qDAAqD;;AAErD;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,8BAA8B,gCAAgC;AAC9D;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,kBAAkB,wBAAwB;AAC1C,MAAM,iDAAiD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B,kBAAkB,kBAAkB,OAAO,2CAA2C;AACtF;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,kBAAkB,kBAAkB;AACpC;AACA,mBAAmB;AACnB,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,yDAAyD;;AAEjG;AACA,0BAA0B;AAC1B,sBAAsB;AACtB,qCAAqC;;AAErC;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,cAAc;;AAE7C;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA,wCAAwC,iEAAiE;AACzG;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB,OAAO;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC,MAAM,2BAA2B;AACjoBAAoB,uDAAe;AACnC,oBAAoB,uDAAe;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,+BAA+B;AACvoBAAoB;AACpB,2BAA2B;AAC3B,GAAG;;AAEH;AACA;AACA,gDAAgD;AAChD;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,sBAAsB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,wBAAwB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA,qCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;;AAEhB;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;AAC3C;AACA;AACA,6CAA6C;AAC7C,aAAa;AACb;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,2CAA2C,QAAQ;AACnD,MAAM,mCAAmC;AACzC;;AAEA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,OAAO,oBAAoB,eAAe;;AAEvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,yBAAyB,gBAAgB,kBAAkB,OAAO;AAClE;AACA,yBAAyB,kBAAkB,oBAAoB,SAAS;AACxE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,iBAAiB;AACjB;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oCAAoC;AACpC,2CAA2C;AAC3C;AACA;AACA;AACA,uBAAuB;AACvB,MAAM;AACN;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C,2BAA2B;AAC3B;AACA,mBAAmB;AACnB,yBAAyB;AACzB;AACA,sCAAsC;AACtC,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,uEAAuE,iCAAiC;AACxG,IAAI;AACJ;AACA,yCAAyC;AACzC,gDAAgD;AAChD,uBAAuB;AACvB;AACA;AACA;AACA,cAAc,oBAAoB;AAClC,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA,kBAAkB,kBAAkB;AACpC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,oBAAoB,uBAAuB;AAC3C,QAAQ;AACR,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe,OAAO;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,QAAQ,OAAO;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA,qCAAqC,QAAQ;AAC7C,QAAQ;AACR,aAAa;AACb;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB,sBAAsB;AACzD;AACA,QAAQ;AACR;AACA;;AAEA;AACA,mBAAmB,gBAAgB,sBAAsB;AACzD;AACA,QAAQ;AACR;AACA;;AAEA;AACA,wCAAwC,gBAAgB,sBAAsB;AAC9E;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB,sBAAsB;AACzD;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA,+CAA+C;AAC/C,eAAe,mBAAmB;AAClC,YAAY,2BAA2B;AACvC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,6BAA6B,QAAQ;AACvD;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,iDAAiD;AACjD;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA,yBAAyB;AACzB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAkC;AAClC,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA,gCAAgC;AAChC,oDAAoD;AACpD;AACA;AACA,qCAAqC,SAAS;AAC9C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,gBAAgB;AAClC,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA;AACA,eAAe,6BAA6B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,6CAA6C,YAAY;AACzD,2EAA2E;AAC3E,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,QAAQ;AACd;AACA,MAAM,QAAQ;AACd;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,yBAAyB;AACzB,aAAa;AACb;AACA;AACA,sBAAsB,sBAAsB;AAC5C;AACA;AACA;AACA,UAAU;AACV,cAAc;AACd,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEiJ;;;;;;;;;;;;;;;;;;;;;;;;ACr5GnD;AAC/B;;AAE/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,QAAQ,YAAY;AAC9B,cAAc;AACd,YAAY;AACZ,IAAI;AACJ;AACA,mDAAmD,wBAAwB;AAC3E;AACA;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA,cAAc,UAAU;AACxB,4BAA4B,cAAc;AAC1C;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wCAAwC;AAC5E,kCAAkC,wCAAwC;AAC1E,8BAA8B,qBAAqB;AACnD,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,uBAAuB,wDAAS;AAChC;AACA,UAAU,YAAY,wDAAS;AAC/B;AACA;AACA,eAAe,mEAAY;AAC3B,iBAAiB;AACjB,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,gBAAgB,6DAAc;AAC9B,oCAAoC,QAAQ;AAC5C,MAAM,UAAU,4DAAa;;AAE7B,cAAc,oEAAiB;AAC/B,oCAAoC,oDAAK;;AAEzC;AACA,oBAAoB,uBAAuB,SAAS,sCAAsC;AAC1F;;AAEA;AACA,qEAAqE,SAAS;AAC9E,kBAAkB,+DAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,mBAAmB,6DAAc;AACjC;AACA;AACA;AACA,gDAAgD,sBAAsB;AACtE,YAAY,OAAO,4DAAa;AAChC;AACA;AACA;AACA,2BAA2B,4DAAa;AACxC;AACA,yEAAyE,oDAAK;AAC9E;AACA;AACA,0BAA0B;AAC1B,4DAA4D;AAC5D,SAAS;AACT,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,eAAe;AACnD,SAAS,+DAAQ,iCAAiC;AAClD,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,6DAA6D;AACrH,kBAAkB;AAClB,qBAAqB;AACrB;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oEAAiB;AACjC,sCAAsC,oDAAK,CAAC,4DAAa;AACzD,gBAAgB,wDAAS;AACzB;AACA,0BAA0B,iEAAU;AACpC;AACA;;AAEA;AACA;AACA;AACA,0EAA0E,OAAO;AACjF;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA,qDAAqD,6DAAc,GAAG,4DAAa;AACnF,MAAM;AACN;AACA;AACA;AACA;AACA,cAAc,oEAAiB;AAC/B,oCAAoC,oDAAK,YAAY,6DAAc,GAAG,4DAAa,WAAW,6DAAc;AAC5G,0DAA0D,6DAAc,GAAG,4DAAa,WAAW,6DAAc;AACjH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,6DAA6D;AACrH,kBAAkB;AAClB;AACA,2BAA2B;AAC3B;AACA,uCAAuC;;AAEvC;AACA;AACA,kBAAkB,4DAAa;AAC/B,sBAAsB,oDAAK,CAAC,4DAAa,uBAAuB,4DAAa;AAC7E;AACA;AACA,iCAAiC,oEAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEkH;;;;;;;;;;;;;;;;;;;;;;;;;AC3PlD;AACkB;;AAElF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,UAAU,oBAAoB,SAAS,oBAAoB,SAAS,oBAAoB,OAAO,oBAAoB,UAAU,oBAAoB,QAAQ,oBAAoB,UAAU;;AAElN;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC,MAAM,gDAAgD;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC,0DAAW;;AAEnD;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;;AAEA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA,wEAAwE,0DAAW;AACnF;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf,mCAAmC,YAAY;AAC/C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,WAAW;;AAE1C;AACA;AACA;AACA,mDAAmD;;AAEnD;AACA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA,wCAAwC,0DAAW;;AAEnD;AACA,mBAAmB,0DAAW;AAC9B;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,mBAAmB;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,uDAAuD;AACvD;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA,eAAe,oDAAK,CAAC,4DAAa;AAClC;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA,kEAAkE;;AAElE;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,0DAAW;;AAEnD,mBAAmB,0DAAW;AAC9B;AACA;AACA,mCAAmC;AACnC,MAAM;AACN;AACA;AACA;;AAEA,uDAAuD,QAAQ;;AAE/D,oDAAoD;;AAEpD,oDAAoD;;AAEpD,oDAAoD;;AAEpD,iEAAiE;;AAEjE;AACA,CAAC;;AAED;;AAEA;AACA,wBAAwB,aAAa;AACrC,mCAAmC;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA,mBAAmB;AACnB,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA,wBAAwB,8DAAW,oBAAoB,oEAAiB,KAAK;AAC7E;AACA,uDAAuD,mBAAmB,gBAAgB;AAC1F;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,aAAa,oBAAoB,iBAAiB,oBAAoB,mBAAmB,oBAAoB,cAAc,oBAAoB,qBAAqB;;AAEjM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,2DAAY;AACrB,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iIAAiI,wDAAS;AAClJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;AACA,MAAM;AACN,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC,CAAC,4DAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,gEAAgE;AAClG,gCAAgC;AAChC,GAAG;;AAEH;AACA,4CAA4C,4DAA4D;AACxG,gCAAgC;AAChC,GAAG;;AAEH;AACA,kCAAkC,mCAAmC;AACrE,qDAAqD;AACrD,GAAG;;AAEH;AACA,4BAA4B,UAAU;AACtC,sCAAsC;AACtC,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,UAAU,oBAAoB,YAAY,oBAAoB,OAAO;;AAElG;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,gCAAgC,OAAO;AACzD;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;;AAEjD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,gCAAgC;AAC5D,gBAAgB,mBAAmB,gCAAgC,GAAG,kBAAkB;AACxF;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA,oBAAoB,6BAA6B,SAAS;AAC1D;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2BAA2B;AAC7C,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,0BAA0B,yDAAyD,oBAAoB;AACvG,yDAAyD;AACzD;AACA,QAAQ;AACR;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,wBAAwB;AACxB;AACA;AACA;AACA;AACA,qBAAqB,4DAAa;AAClC,MAAM;AACN;AACA,MAAM;AACN,8BAA8B;AAC9B,MAAM;AACN,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC,0CAA0C,6BAA6B;AACvE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA,2DAA2D;;AAEmE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5mClD;;AAE5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sCAAsC;AACtC,+BAA+B;AAC/B,gCAAgC;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,gBAAgB,WAAW;AACnD,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA,uBAAuB;AACvB;AACA,wCAAwC;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B,wBAAwB;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,yBAAyB;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB,wBAAwB;AAC7D,MAAM,2BAA2B;AACjC;;AAEA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA,4FAA4F,QAAQ;AACpG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB,0BAA0B,aAAa;AACvC,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B,aAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,UAAU,oBAAoB,eAAe;;AAExE;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0BAA0B;;AAE1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,qBAAqB,2DAAY,IAAI;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;;AAEA;AACA,gFAAgF;;AAEhF;AACA,4DAA4D,0DAAW;AACvE,gBAAgB,oDAAK;AACrB;AACA,MAAM;AACN,8DAA8D,0DAAW;AACzE,gBAAgB,oDAAK;AACrB;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB,2BAA2B;AAC3B,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA,QAAQ;AACR,+CAA+C,6DAAc;AAC7D;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;;AAER;AACA;AACA,QAAQ;AACR;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA,2BAA2B;AAC3B,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA,iCAAiC,6DAAc;AAC/C;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,QAAQ;AACR,oFAAoF;AACpF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,6DAAc;AAC7B,yCAAyC,YAAY;AACrD,MAAM;AACN;AACA,eAAe,4DAAa;AAC5B;AACA,MAAM;AACN;AACA;AACA,cAAc,6DAAc;AAC5B,6CAA6C,cAAc;AAC3D,MAAM;AACN;AACA,cAAc,4DAAa;AAC3B;AACA,MAAM;AACN;AACA;;AAEA;AACA,6CAA6C,oDAAK;AAClD;AACA;;AAEA,sDAAsD,+BAA+B;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB,uCAAuC,6BAA6B;AACpE;;AAEA,2BAA2B,QAAQ;;AAEnC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2BAA2B,4BAA4B;AACvD,MAAM;AACN,6CAA6C;AAC7C;AACA;;AAEA,oBAAoB,+BAA+B;AACnD;AACA;AACA;AACA;AACA,gBAAgB,6DAAc;AAC9B,oCAAoC,QAAQ;AAC5C;AACA;AACA;AACA,UAAU;AACV;AACA,cAAc,4DAAa;AAC3B;;AAEA;AACA,qEAAqE,oDAAK;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,oDAAK,CAAC,4DAAa;AAC7D;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,eAAe;AACf;AACA;AACA,MAAM;;AAEN;AACA,MAAM;;AAEN;AACA,6CAA6C,oDAAK,CAAC,4DAAa;AAChE;;AAEA,iCAAiC,+BAA+B;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,8CAA8C,UAAU;AACxD;AACA,oCAAoC;AACpC;AACA;AACA,yBAAyB;AACzB;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,+BAA+B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C,6DAAc,UAAU,6DAAc;AACnF,kEAAkE,OAAO;AACzE,aAAa,4DAAa;AAC1B;AACA,YAAY,4DAAa;AACzB;AACA,iDAAiD,oDAAK;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,qDAAqD;AACrD,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,0DAAW;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;;AAE1E;AACA,MAAM,6BAA6B,QAAQ;AAC3C;AACA,iEAAiE;AACjE,uBAAuB;AACvB;AACA;AACA,MAAM,+BAA+B,UAAU;AAC/C;AACA,uEAAuE;AACvE,iDAAiD;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,kBAAkB,qBAAqB,OAAO;AAC9C,qBAAqB,sDAAsD;AAC3E,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA,8BAA8B;AAC9B,0BAA0B;AAC1B;AACA;AACA,SAAS,iEAAkB;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,oDAAK;AACzB,2EAA2E;AAC3E;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAoB,oDAAK;AACzB;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA,sBAAsB,kBAAkB;AACxC;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;;AAEA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,GAAG;;AAEH,iCAAiC,wBAAwB;AACzD,+BAA+B,wBAAwB;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,wBAAwB,uDAAQ;AAChC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,sCAAsC;AACtC,MAAM;AACN;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA,wBAAwB,oBAAoB;AAC5C;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA,UAAU;AACV,wBAAwB,6DAA6D;AACrF;AACA;AACA;AACA,GAAG;AACH,iCAAiC,gEAAgE;AACjG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA,8CAA8C,0DAAW;AACzD,MAAM;AACN;AACA,sBAAsB,wBAAwB,OAAO;AACrD,UAAU;AACV;AACA;AACA;AACA;AACA,gCAAgC,6DAAc;AAC9C,+BAA+B,oDAAK;AACpC;AACA,sCAAsC,UAAU,SAAS;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAW;;AAE7C,mCAAmC;;AAEnC;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAW;;AAE7C;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,oDAAK,CAAC,4DAAa;AACvD;;AAEA;AACA;AACA;AACA,gCAAgC,0DAAW;AAC3C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,gBAAgB,6DAAc;AAC9B,8BAA8B,SAAS;AACvC,MAAM,cAAc,4DAAa;AACjC;;AAEA,6BAA6B,SAAS;;AAEtC,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA,4DAA4D;AAC5D;AACA,iBAAiB;AACjB;AACA,kBAAkB,oDAAK;AACvB;AACA,MAAM;AACN;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC,mDAAmD,iBAAiB;AACpE;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,2CAA2C,oBAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,4DAAa;AACzG;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,sBAAsB,oDAAK;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,oDAAK;AAC7B;AACA,IAAI;AACJ,wBAAwB,oDAAK;AAC7B;AACA;;AAEA,OAAO,+FAA+F;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC,cAAc,gBAAgB,iBAAiB,OAAO;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB,0DAA0D,4DAAa;AACvE;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA,oCAAoC,oBAAoB;AACxD;AACA,wBAAwB,6DAA6D;AACrF;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,oDAAK;AACpC,wBAAwB,0DAAW;AACnC,UAAU,oDAAK;AACf;AACA;;AAEA;AACA,wEAAwE;AACxE;AACA;AACA,gHAAgH;;AAEhH;AACA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,wBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA,gBAAgB;;AAEhB,qCAAqC;AACrC,8BAA8B;AAC9B;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD,4DAAa;AACpE,sBAAsB,qCAAqC;AAC3D;;AAEA;AACA;AACA,kCAAkC,6DAAc;AAChD,wBAAwB;AACxB;;AAEA;;AAEA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA,kBAAkB,WAAW,OAAO;AACpC;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA,MAAM;AACN;AACA;AACA,wBAAwB,yEAAyE,6DAAc;AAC/G;AACA;AACA;;AAEA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;;AAEA;AACA,sBAAsB,yBAAyB;AAC/C,MAAM,kDAAkD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,MAAM;;AAEN;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA,2CAA2C;AAC3C,wCAAwC;AACxC,uCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;;AAEN,gCAAgC,QAAQ;AACxC;AACA;AACA,mBAAmB;AACnB,sBAAsB,2BAA2B;AACjD;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA,UAAU;AACV,gCAAgC,oDAAK;AACrC;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA,0CAA0C;AAC1C;AACA,qBAAqB;AACrB,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,6DAAc;AAChF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,oDAAK,CAAC,4DAAa;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,oBAAoB;AACtC;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,kBAAkB,oCAAoC;AACtD;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAE8O;;;;;;;;;;;;;;;;;;;;;;;AC9pDpJ;AACN;AAClC;;AAElD;;AAEA;AACA;AACA;AACA,sCAAsC,GAAG;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT,kDAAkD;AAClD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA,6CAA6C;AAC7C;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE,iBAAiB;AACrF,0BAA0B;AAC1B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,KAAK,wBAAwB,6BAA6B;AAChF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C,mBAAmB;AACnB,gCAAgC;AAChC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA,gBAAgB;AAChB;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,SAAS,KAAK;AACd,gBAAgB,mDAAmD;AACnE,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC;AAClC;AACA;;AAEA;AACA,uCAAuC,oBAAoB;AAC3D;AACA;AACA,uBAAuB,yBAAyB;AAChD,gCAAgC;;AAEhC;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAoD,OAAO;AAC3D;AACA,+BAA+B;AAC/B,oCAAoC;AACpC,WAAW;;AAEX,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,0EAA0E;AACnI;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,0CAA0C;AAC1C,0DAA0D,QAAQ;AAClE;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA,mCAAmC;AACnC;AACA,QAAQ,QAAQ;AAChB;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,2BAA2B;AAC3B;AACA,iBAAiB;AACjB;AACA;AACA,8DAA8D;AAC9D,uEAAuE;AACvE,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yIAAyI;AACzI;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA,sCAAsC;AACtC;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,mBAAmB;AACnB,MAAM;AACN;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,gBAAgB;AAChB;AACA;AACA;AACA,sBAAsB,WAAW;AACjC,QAAQ,mBAAmB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,qBAAqB;;AAErB;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,MAAM;AACN;AACA,iCAAiC,MAAM;AACvC,+DAA+D,QAAQ;AACvE,2BAA2B;AAC3B,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA,UAAU;AACV;;AAEA;AACA,0BAA0B;AAC1B;AACA,UAAU;AACV;;AAEA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA;AACA,IAAI;AACJ,8BAA8B;AAC9B,wCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,sBAAsB;AACtB,kCAAkC,mBAAmB;AACrD;AACA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA,iCAAiC;AACjC,sCAAsC;AACtC,aAAa;AACb,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,GAAG;AACH;;AAEA;AACA;AACA,kDAAkD;AAClD,uBAAuB;AACvoBAAoB,WAAW,oBAAoB,cAAc,oBAAoB,eAAe,oBAAoB,aAAa,oBAAoB,aAAa,oBAAoB,gBAAgB,oBAAoB,YAAY,oBAAoB,oBAAoB;;AAErT;AACA;AACA,+DAA+D;AAC/D,2DAA2D;AAC3D,2DAA2D;AAC3D,oEAAoE;;AAEpE;AACA;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA,uDAAuD;;AAEvD;AACA;AACA;AACA,kBAAkB,0BAA0B,OAAO;AACnD;AACA;;AAEA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA,qCAAqC;AACrC,kBAAkB,0BAA0B;AAC5C,MAAM;AACN;;AAEA;AACA,yCAAyC,0BAA0B;AACnE;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,oDAAoD;AACpD;AACA;AACA,qFAAqF;AACrF;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR,oDAAoD;AACpD;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,uBAAuB,wBAAwB;AAC/C,gCAAgC,eAAe;AAC/C,oDAAoD;AACpD;AACA,4DAA4D,0BAA0B;AACtF,kCAAkC,cAAc;AAChD,uDAAuD;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,KAAK,oBAAoB,mBAAmB;AACnE;;AAEA;AACA,uBAAuB,MAAM;AAC7B;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA,uDAAuD;AACvD;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA,yBAAyB;AACzB;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA,8DAA8D,uBAAuB;AACrF;AACA;AACA;AACA,gBAAgB;AAChB;AACA,4BAA4B,0GAA0G;AACtI;AACA;AACA;AACA,YAAY;AACZ;AACA,iEAAiE;AACjE;AACA,wEAAwE;AACxE,YAAY;AACZ,IAAI;AACJ;AACA,YAAY;AACZ;AACA,6DAA6D;AAC7D;AACA,4DAA4D;AAC5D,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,QAAQ;;AAEd;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,4BAA4B,4BAA4B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,kEAAkE;AAClE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM;AACtD;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB,qBAAqB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E,eAAe;AACf;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA,8BAA8B;AAC9B;AACA;;AAEA,+CAA+C;;AAE/C,uDAAuD;;AAEvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,mBAAmB;AACnB,yBAAyB;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,WAAW;;AAE1C;AACA;AACA;;AAEA,+DAA+D,QAAQ;;AAEvE;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mDAAmD;;AAEnD;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,QAAQ;;AAEvC,gDAAgD;;AAEhD;AACA,+BAA+B;AAC/B;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,OAAO,uEAAwB;AACvC;AACA;;AAEA;AACA,0EAA0E;AAC1E,YAAY;AACZ;;AAEA,qEAAqE;;AAErE;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB,oBAAoB;AACpB,oBAAoB,kBAAkB,OAAO;AAC7C;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;;AAEA,+BAA+B,QAAQ,oBAAoB,WAAW,oBAAoB,YAAY;;AAEtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,4BAA4B;AAC5B,KAAK;;AAEL;AACA;AACA,kBAAkB;AAClB,oCAAoC;AACpC,MAAM;AACN,WAAW,uEAAwB;AACnC;AACA,+DAA+D;AAC/D,kDAAkD;AAClD,sCAAsC;AACtC;;AAEA;AACA;;AAEA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,gBAAgB;AAChB,8CAA8C;AAC9C,gDAAgD;AAChD,WAAW,gCAAgC,2BAA2B,6DAAc;AACpF;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gDAAgD;;AAEhD,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU,kDAAkD,wDAAS;AACrE;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA,uFAAuF,yEAAyE;AAChK;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4DAAa,wDAAwD;AAC/G;AACA;AACA,gEAAgE;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,MAAM;AACN,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;;AAE9B;AACA;AACA,YAAY;AACZ,mDAAmD;AACnD,wCAAwC;AACxC,oCAAoC;AACpC,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA,6DAA6D;AAC7D;;AAEA,mDAAmD;;AAEnD;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,WAAW;;AAE1C;AACA;AACA,yDAAyD;AACzD,YAAY;AACZ;;AAEA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,GAAG,oBAAoB,sBAAsB;AAC5E;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,mDAAmD;;AAEnD;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA+B,WAAW,oBAAoB,oBAAoB;;AAElF,qEAAqE,QAAQ;AAC7E,iFAAiF;AACjF,mDAAmD;AACnD,2DAA2D;;AAE3D;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,oBAAoB;AACpB;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,eAAe;AAC/B,kDAAkD;AAClD;;AAEA;AACA,kBAAkB;AAClB;AACA;;AAEA;;AAEA;AACA,+BAA+B;;AAE/B;;AAEA,kBAAkB,sBAAsB;AACxC;AACA,kBAAkB;AAClB;AACA,QAAQ;;AAER;AACA;AACA,yBAAyB;AACzB;AACA,UAAU;AACV,6BAA6B;AAC7B,kCAAkC,uCAAuC;AACzE,qCAAqC;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yDAAyD;;AAEzD;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,QAAQ;AACR;AACA,MAAM;AACN,QAAQ;AACR;AACA;AACA;AACA,oBAAoB,qBAAqB,OAAO;AAChD,QAAQ;AACR,sBAAsB,sBAAsB,SAAS;AACrD,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA,2FAA2F;AAC3F;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B,kBAAkB,cAAc,OAAO,gCAAgC;AACvE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB,sBAAsB,SAAS,OAAO;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,wDAAwD;AACrF,4DAA4D,WAAW;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,4EAA4E,OAAO;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,mBAAmB;AACnB;AACA;AACA,kBAAkB,yBAAyB,8BAA8B;AACzE,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,sCAAsC;AACtC;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,0BAA0B,sBAAsB,SAAS;AACzD,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;;AAEA,sBAAsB,qBAAqB,SAAS,gCAAgC;AACpF;AACA,QAAQ;;AAER;AACA;AACA;AACA,yEAAyE;AACzE,wBAAwB,qBAAqB,SAAS,8BAA8B;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E,mBAAmB;AAChG;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,8BAA8B;AAC9B;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA,MAAM;AACN,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,+CAA+C;AAC/C,kDAAkD,yEAA0B;AAC5E;AACA;AACA,sBAAsB,4DAAa;AACnC;AACA,IAAI;AACJ;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,0DAA0D,4DAAa;AACvE;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA,+BAA+B;AAC/B,6BAA6B;AAC7B;AACA;AACA;AACA,MAAM;AACN;AACA,6CAA6C;AAC7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA,iBAAiB;AACjB,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA,4CAA4C,2BAA2B;AACvE;AACA;;AAEA;AACA;AACA,8BAA8B,0BAA0B;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,OAAO;AACP;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,4DAAa;AAClC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA,gEAAgE,iCAAiC;AACjG,OAAO,oEAAqB;AAC5B;;AAEA;AACA,8DAA8D;AAC9D;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iEAAkB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,4DAAa;AAClC;AACA;AACA,MAAM;AACN;AACA,mCAAmC,4DAAa,KAAK;AACrD;AACA,MAAM;AACN;AACA,kCAAkC;AAClC;AACA,yFAAyF;AACzF,UAAU,yEAA0B;AACpC,+BAA+B,4DAAa;AAC5C,QAAQ;AACR;AACA;AACA;AACA,+BAA+B,4DAAa;AAC5C,QAAQ;AACR;AACA;AACA;AACA,IAAI,wBAAwB,4DAAa;AACzC,2BAA2B,4DAAa;AACxC,IAAI;AACJ;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,8GAA8G;AAC9G,SAAS;AACT;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU,OAAO;AACjB;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,SAAS;AACT;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4DAAa,4CAA4C;AAC9E,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA,iCAAiC,4DAAa;AAC9C,QAAQ;AACR;AACA;AACA;AACA,gCAAgC,2DAAY,GAAG,6DAAc,cAAc,iEAAkB;AAC7F;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,4DAAa,KAAK;AAC1D;AACA;AACA;AACA;AACA,oCAAoC;AACpC,gBAAgB;AAChB,+DAA+D;AAC/D;AACA;AACA;AACA,mBAAmB;AACnB,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4CAA4C;AACzE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB,sBAAsB;AACtB,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA,gEAAgE;AAChE;AACA,IAAI,oEAAoE;AACxE;AACA,IAAI,qCAAqC;AACzC;AACA,IAAI,uBAAuB;AAC3B;AACA,IAAI,uBAAuB;AAC3B;AACA,IAAI,uBAAuB;AAC3B;AACA,IAAI,uBAAuB;AAC3B;AACA,IAAI;AACJ,uEAAuE;AACvE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,0CAA0C;AACvD;AACA,QAAQ,WAAW,mDAAmD;AACtE;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA,4CAA4C,gBAAgB;AAC5D,gCAAgC;AAChC;AACA;AACA;AACA,6CAA6C,mEAAoB;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,wBAAwB;AACxB,WAAW;AACX;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,MAAM;AACN,cAAc;AACd;AACA,IAAI;AACJ,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,4DAAa;AAChD;AACA,gBAAgB;AAChB,MAAM;AACN,8CAA8C,kDAAkD;AAChG,6DAA6D,wCAAwC;AACrG;AACA;AACA,MAAM;AACN;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4DAAa;AACnD;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,kDAAkD;AAC3G;AACA,mBAAmB,iEAAkB;AACrC;AACA,oDAAoD,wCAAwC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,2CAA2C;AAC/F,2CAA2C,+CAA+C;AAC1F;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,wCAAwC;AAC5F,KAAK;AACL;;AAEA;;AAEA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,aAAa;AACb,MAAM;AACN;AACA;AACA,0DAA0D,uCAAuC,KAAK;AACtG;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA,uEAAuE;AACvE;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB,OAAO;AAC/C,oBAAoB,uBAAuB,SAAS;AACpD;AACA;AACA;AACA,+BAA+B;AAC/B,IAAI;AACJ;AACA;AACA,+BAA+B;AAC/B,IAAI;AACJ;AACA;AACA;AACA,oBAAoB,uBAAuB,SAAS;AACpD,MAAM,4DAAa,qBAAqB,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAA2D,uEAAwB;AACnF;AACA,0DAA0D,cAAc;;AAExE;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;;AAEN,qEAAqE,kBAAkB;AACvF;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wDAAwD,sCAAsC;AAC9F,kBAAkB,kBAAkB,oDAAK,CAAC,4DAAa,gEAAgE,0DAAW;AAClI,qEAAqE,sCAAsC;AAC3G;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,uBAAuB,uEAAwB;AAC/C;AACA;AACA;AACA,qBAAqB;AACrB,OAAO;AACP;AACA,IAAI;AACJ,wDAAwD,iBAAiB;AACzE;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA,mFAAmF,mEAAoB;AACvG;AACA;AACA;AACA;AACA;AACA,8EAA8E,QAAQ;AACtF;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO;AACX,YAAY,4DAAa;AACzB;AACA;AACA,gDAAgD;AAChD;AACA,iDAAiD;AACjD;AACA;AACA;AACA;;AAEA,kDAAkD,mBAAmB;AACrE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,mBAAmB;AACnB;AACA;AACA,QAAQ;AACR,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,kBAAkB,SAAS,GAAG,4DAAa;AAC3C;;AAEA,+BAA+B,QAAQ;AACvC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC,WAAW;AAC3C,MAAM,4BAA4B,4DAAa;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,QAAQ,2CAA2C,4DAAa;AAChE;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA,6DAA6D,6DAAc;AAC3E;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA,MAAM;AACN,qEAAqE,6DAAc;AACnF;AACA;;AAEA;AACA;AACA,MAAM,YAAY,oDAAK;AACvB;AACA,MAAM,YAAY,oDAAK;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,MAAM,+BAA+B,uBAAuB,4CAA4C,wBAAwB;AAChI;AACA,cAAc,gBAAgB,iBAAiB,OAAO;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,QAAQ;AACR,aAAa;AACb;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA,4CAA4C;AAC5C,cAAc,4DAAa;AAC3B,iBAAiB;AACjB;AACA,aAAa,oDAAK;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,0FAA0F;AAC1F,UAAU;AACV;AACA,UAAU;AACV,KAAK;AACL;AACA;AACA;AACA,yBAAyB,+DAA+D;AACxF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,oDAAoD,0BAA0B,iBAAiB;AACrG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,iBAAiB,OAAO;AAC9C,sCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2BAA2B,oDAAoD;AAC/E;;AAEA;AACA,0CAA0C;AAC1C,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA,mCAAmC,sFAAsF;AACzH;AACA;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;;AAEA;AACA,0CAA0C,4BAA4B;AACtE;AACA;AACA;AACA,qEAAqE;AACrE,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,2CAA2C;;AAE3C;AACA,oBAAoB,2BAA2B,OAAO;AACtD;AACA,QAAQ,QAAQ;AAChB;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA,qGAAqG;AACrG,6FAA6F;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,IAAI;AACJ,YAAY;AACZ,IAAI,OAAO;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kFAAkF,wDAAwD;AAC1I;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,iDAAiD,cAAc;;AAEtF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC,QAAQ,8EAA8E,uCAAuC;AAC7H,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,wBAAwB;AACxB,gCAAgC;AAChC,gCAAgC,kBAAkB;AAClD,MAAM;AACN;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,wCAAwC;AAC9F;AACA;AACA,KAAK;AACL,IAAI,uDAAuD,wBAAwB;AACnF;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA,uEAAuE;;AAEvE,qDAAqD,wBAAwB;AAC7E;AACA;AACA;;AAEA;AACA,uBAAuB,4DAAa;AACpC;AACA,yDAAyD,mDAAmD;AAC5G,QAAQ;AACR;AACA;AACA;;AAEA,8BAA8B,QAAQ;;AAEtC;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA;AACA,+CAA+C;AAC/C,iHAAiH;AACjH,QAAQ,SAAS;AACjB;;AAEA,+BAA+B,OAAO;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA,6BAA6B,yEAA0B;AACvD,8BAA8B,4DAAa;AAC3C;AACA;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA,qBAAqB,4DAAa,IAAI;;AAEtC;AACA,+BAA+B,OAAO;AACtC;AACA,QAAQ,yEAA0B;AAClC;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA,0BAA0B,mEAAoB;AAC9C;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,6BAA6B;AAC7E;AACA;;AAEA;AACA;AACA,sDAAsD,6BAA6B;AACnF;;AAEA;AACA;AACA,sDAAsD,6BAA6B;AACnF;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,mEAAoB;AAChD;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA,QAAQ,sBAAsB,mEAAoB;AAClD,aAAa,yEAA0B;AACvC,QAAQ,sBAAsB,mEAAoB;AAClD;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,qDAAqD;AACrD;AACA,oBAAoB;;AAEpB;AACA,cAAc;;AAEd;AACA,0BAA0B;AAC1B;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,4DAAa;AACxC,MAAM,kBAAkB;AACxB;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA,QAAQ;AACR,+CAA+C;AAC/C,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,wCAAwC;AACxC;AACA;AACA,mCAAmC,yBAAyB,qCAAqC;AACjG;AACA;;AAEA;AACA;;AAEA;AACA,MAAM;;AAEN;AACA,8CAA8C;;AAE9C;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,4DAAa;AACpF;AACA;AACA,+BAA+B,6DAAc;AAC7C;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA,yCAAyC;;AAEzC;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,yCAAyC;AACtI;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,0CAA0C;AAC3G;AACA,yBAAyB;AACzB;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,iDAAiD,8BAA8B;AACnG;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA,gDAAgD;AAChD,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA,oBAAoB;AACpB,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA,6BAA6B;AAC7B,qBAAqB;AACrB,WAAW;AACX,GAAG;AACH;;AAEA;AACA;AACA,kDAAkD,2BAA2B,0DAAW,IAAI,KAAK;AACjG,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,yFAAyF;AACzF,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB;AACnB,yBAAyB;;AAEzB;AACA;AACA,+DAA+D,4DAAa,0BAA0B;AACtG,6CAA6C,mEAAoB;AACjE,IAAI;AACJ;AACA;AACA,QAAQ,yCAAyC,mEAAoB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;AACA,sCAAsC;AACtC,GAAG;AACH;;AAEA,mEAAmE;;AAEnE;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA,mBAAmB;AACnB;AACA,iBAAiB;AACjB;AACA;AACA,oDAAoD,mBAAmB;AACvE,IAAI;AACJ;AACA;AACA;AACA;AACA,iDAAiD,2BAA2B,0DAAW,UAAU;AACjG;AACA;AACA;AACA,gBAAgB;;AAEhB;AACA,0BAA0B,gEAAS;AACnC,2BAA2B;;AAE3B;AACA,cAAc;;AAEd;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,iCAAiC;;AAEjC;AACA,gBAAgB,yEAA0B;AAC1C;AACA,wBAAwB,4DAAa;AACrC,IAAI;AACJ;AACA,iGAAiG,qBAAqB;AACtH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,wCAAwC;AAChD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA,wDAAwD,2CAA2C,KAAK;AACxG;AACA;AACA;AACA,wCAAwC;AACxC,KAAK;AACL;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA,gBAAgB;AAChB,qBAAqB,qBAAqB;AAC1C,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD;;AAExD;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,QAAQ,oBAAoB,WAAW;;AAEpE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;;AAE9C,gDAAgD;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA,QAAQ;AACR;AACA,oBAAoB,4BAA4B;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA,qDAAqD;AACrD,iCAAiC;AACjC;;AAEA;AACA,MAAM;AACN;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,uBAAuB;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2EAA2E;;AAE3E,qBAAqB;AACrB,iFAAiF;AACjF;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,GAAG;;AAEH;AACA,kBAAkB,kBAAkB,OAAO,2CAA2C;;AAEtF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;;AAEA;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA,qCAAqC,wBAAwB,OAAO;AACpE;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB;AAClB,qCAAqC;AACrC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,sBAAsB,qCAAqC,0BAA0B,SAAS;AAC9F,sBAAsB,oBAAoB,SAAS;AACnD,iCAAiC;AACjC;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;;AAEA;AACA,uBAAuB;AACvB,qBAAqB;;AAErB;AACA,kBAAkB,0BAA0B,UAAU;AACtD,sCAAsC;AACtC;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,uDAAuD;AACvD,kBAAkB,uBAAuB;AACzC,MAAM,yCAAyC;AAC/C,oBAAoB,4BAA4B;AAChD,MAAM;AACN;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB,+DAA+D;AAC/D;AACA,kBAAkB,uBAAuB;AACzC;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;AACA,kBAAkB,yBAAyB;AAC3C;AACA,2BAA2B;AAC3B,6CAA6C;AAC7C,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,qDAAqD;AACrD,kBAAkB,yBAAyB;AAC3C,MAAM,6CAA6C;AACnD;AACA;;AAEA;AACA;AACA,kBAAkB,yBAAyB;AAC3C;AACA,0BAA0B;AAC1B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,sBAAsB,mBAAmB,OAAO;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA,qDAAqD;AACrD;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,kBAAkB,yBAAyB,OAAO;;AAElD;AACA;AACA;AACA,oBAAoB,uBAAuB,YAAY,+BAA+B;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uBAAuB,YAAY;AACzD;AACA;AACA;AACA,6BAA6B,6BAA6B;AAC1D;AACA,4DAA4D;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA,oBAAoB;AACpB,mCAAmC;AACnC;AACA,sBAAsB,2BAA2B;AACjD,QAAQ;AACR;AACA,kBAAkB,qBAAqB,UAAU;AACjD,MAAM;;AAEN;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;AACpC,MAAM,wBAAwB;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,GAAG;AACH;AACA,kBAAkB,mBAAmB,OAAO;AAC5C,4BAA4B;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA,gCAAgC,oBAAoB,oBAAoB;AACxE;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0DAA0D;AAC1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,GAAG;AACH;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,4BAA4B;AAC5B,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,SAAS,oBAAoB,SAAS,oBAAoB,gBAAgB;;AAEvG;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iEAAiE;AACjE;AACA;AACA;AACA,kCAAkC;AAClC;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,0DAA0D;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,gEAAgE,mBAAmB;AACnF,QAAQ;AACR,wCAAwC,4DAAa;AACrD,QAAQ;AACR;AACA,QAAQ;AACR,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,oBAAoB;AAC9D;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,+BAA+B;AACnD;AACA,8BAA8B;AAC9B;AACA,sBAAsB,iCAAiC;AACvD;AACA,gCAAgC;AAChC;AACA,IAAI;AACJ,sBAAsB,+BAA+B;AACrD;AACA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,kBAAkB,+BAA+B;AACjD;AACA,8DAA8D;AAC9D;AACA;AACA,iBAAiB,kBAAkB,sBAAsB;AACzD;AACA,8DAA8D;AAC9D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uCAAuC,QAAQ;AACvE;AACA,kCAAkC,2DAA2D;AAC7F;AACA;AACA;AACA;AACA;;AAEA,QAAQ,0BAA0B,MAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC,iBAAiB;AACjB;AACA,UAAU;AACV;AACA,qDAAqD;AACrD;AACA;AACA,UAAU;AACV;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAmE,kCAAkC;AAC/H,IAAI;AACJ;AACA;AACA;;AAEA;AACA,uDAAuD,qCAAqC;AAC5F;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B,QAAQ;AACR,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,qBAAqB;AACruCAAuC,yDAAyD;AAChG;AACA;AACA;AACA;AACA,oCAAoC,yDAAyD;AAC7F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEmL;;;;;;;;;;;;;;;AC94KnL;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,gCAAgC;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,UAAU,oBAAoB,UAAU;;AAErE;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B,QAAQ,8CAA8C;AACtD;;AAEA;AACA,2BAA2B,SAAS;AACpC,QAAQ,8CAA8C;AACtD;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA,gDAAgD;;AAEhD,+CAA+C;;AAE/C;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;;AAEA;AACA,0CAA0C;AAC1C;AACA,yBAAyB;AACzB,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;AChNe;AACpC;AACP;AACA,mBAAmB,mDAAU;AAC7B;AACA;AACA,mBAAmB,mDAAU,iDAAiD,mBAAmB;AACjG;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;;;;;;;;;;;;;;;;;ACXiG;AAC1F;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,kEAAqB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wBAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+DAAc,eAAe,kEAAqB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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CJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,sCAAsC;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6EAA6E;;AAE7E;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;;;AAGR;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,mEAAgB;AAC3B;;AAEA;AACA;AACA;;AAEA,SAAS,mEAAgB;AACzB,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0DAA0D,kEAAiB;AAC3E;AACA;AACA,CAAC;;AAE4C;;;;;;;;;;;;;;;;;AC7etC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;A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;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAE6C;;;;;;;;;;;;;;;;;;;;;ACxFM;;AAEnD;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,yBAAyB;AACrC,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,YAAY,aAAa,aAAa;AACtC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,6DAAS;AACxB,gBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEwG;;;;;;;;;;;;;;;;;;;;AC/F1D;AACG;AACN;;AAE3C;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,iBAAiB,eAAe;AAChC,kBAAkB,mBAAmB;AACrC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB,sBAAsB;AACtC,uBAAuB,qBAAqB;AAC5C,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU,UAAU;AACpB,UAAU,WAAW;AACrB,UAAU,4BAA4B;AACtC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU,eAAe;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iDAAiD,GAAG;AACpD,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU,aAAa;AACvB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU,UAAU;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU,UAAU;AACpB,UAAU,eAAe;AACzB,UAAU,uCAAuC;AACjD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB,QAAQ;AACxB,0BAA0B,gBAAgB,OAAO,GAAG;AACpD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,yBAAyB;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB,kBAAkB;AAClC,0BAA0B,2BAA2B,iBAAiB,GAAG;AACzE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA,sBAAsB,+DAAa;AACnC,uBAAuB,OAAO;AAC9B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB,eAAe;AAC/B;AACA;AACA;AACA,sBAAsB,+DAAa;AACnC,oBAAoB,MAAM,KAAK,OAAO;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,eAAe,eAAe;AAC9B,iBAAiB,eAAe;AAChC,iBAAiB,eAAe;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gBAAgB,yBAAyB;AACzC,yBAAyB,wBAAwB;AACjD,KAAK;AACL;AACA;AACA,OAAO,6DAAW;AAClB;AACA;AACA;AACA,OAAO,gEAAc;AACrB;AACA;AACA;AACA;AACA,OAAO,+DAAa;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,qDAAM;AACzB;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEgC;;;;;;;;;;;;;;;;AC9YhC;AA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","sources":["./node_modules/orderedmap/index.es.js","./node_modules/prosemirror-commands/dist/index.es.js","./node_modules/prosemirror-history/dist/index.es.js","./node_modules/prosemirror-inputrules/dist/index.es.js","./node_modules/prosemirror-keymap/dist/index.es.js","./node_modules/prosemirror-model/dist/index.es.js","./node_modules/prosemirror-schema-list/dist/index.es.js","./node_modules/prosemirror-state/dist/index.es.js","./node_modules/prosemirror-transform/dist/index.es.js","./node_modules/prosemirror-view/dist/index.es.js","./node_modules/rope-sequence/dist/index.es.js","./node_modules/rxjs/_esm2015/internal/observable/throwError.js","./node_modules/rxjs/_esm2015/internal/operators/throttle.js","./node_modules/rxjs/_esm2015/internal/operators/throttleTime.js","./src/app/_enums/request-type.ts","./src/app/_services/programs/programs.service.ts","./src/app/_services/tools/tool.service.ts","./src/app/composants/documents-pdf/sbo/sbo.component.ts","./src/app/composants/documents-pdf/sbo/sbo.module.ts","./src/app/pages/tool-request/new-tool/new-tool-routing.module.ts","./src/app/pages/tool-request/new-tool/new-tool.module.ts","./src/app/pages/tool-request/new-tool/new-tool.page.ts","./src/app/composants/documents-pdf/sbo/sbo.component.html","./src/app/pages/tool-request/new-tool/new-tool.page.html","./node_modules/@floating-ui/core/dist/floating-ui.core.esm.development.js","./node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.development.js","./node_modules/w3c-keyname/index.es.js","./node_modules/@angular/cdk/fesm2020/stepper.mjs","./node_modules/@angular/material/fesm2020/button.mjs","./node_modules/@angular/material/fesm2020/icon.mjs","./node_modules/@angular/material/fesm2020/stepper.mjs","./node_modules/ngx-editor/fesm2020/ngx-editor-commands.mjs","./node_modules/ngx-editor/fesm2020/ngx-editor-helpers.mjs","./node_modules/ngx-editor/fesm2020/ngx-editor-schema.mjs","./node_modules/ngx-editor/fesm2020/ngx-editor-utils.mjs","./node_modules/ngx-editor/fesm2020/ngx-editor.mjs"],"sourcesContent":["// ::- Persistent data structure representing an ordered mapping from\n// strings to values, with some convenient update methods.\nfunction OrderedMap(content) {\n  this.content = content;\n}\n\nOrderedMap.prototype = {\n  constructor: OrderedMap,\n\n  find: function(key) {\n    for (var i = 0; i < this.content.length; i += 2)\n      if (this.content[i] === key) return i\n    return -1\n  },\n\n  // :: (string) → ?any\n  // Retrieve the value stored under `key`, or return undefined when\n  // no such key exists.\n  get: function(key) {\n    var found = this.find(key);\n    return found == -1 ? undefined : this.content[found + 1]\n  },\n\n  // :: (string, any, ?string) → OrderedMap\n  // Create a new map by replacing the value of `key` with a new\n  // value, or adding a binding to the end of the map. If `newKey` is\n  // given, the key of the binding will be replaced with that key.\n  update: function(key, value, newKey) {\n    var self = newKey && newKey != key ? this.remove(newKey) : this;\n    var found = self.find(key), content = self.content.slice();\n    if (found == -1) {\n      content.push(newKey || key, value);\n    } else {\n      content[found + 1] = value;\n      if (newKey) content[found] = newKey;\n    }\n    return new OrderedMap(content)\n  },\n\n  // :: (string) → OrderedMap\n  // Return a map with the given key removed, if it existed.\n  remove: function(key) {\n    var found = this.find(key);\n    if (found == -1) return this\n    var content = this.content.slice();\n    content.splice(found, 2);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the start of the map.\n  addToStart: function(key, value) {\n    return new OrderedMap([key, value].concat(this.remove(key).content))\n  },\n\n  // :: (string, any) → OrderedMap\n  // Add a new key to the end of the map.\n  addToEnd: function(key, value) {\n    var content = this.remove(key).content.slice();\n    content.push(key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: (string, string, any) → OrderedMap\n  // Add a key after the given key. If `place` is not found, the new\n  // key is added to the end.\n  addBefore: function(place, key, value) {\n    var without = this.remove(key), content = without.content.slice();\n    var found = without.find(place);\n    content.splice(found == -1 ? content.length : found, 0, key, value);\n    return new OrderedMap(content)\n  },\n\n  // :: ((key: string, value: any))\n  // Call the given function for each key/value pair in the map, in\n  // order.\n  forEach: function(f) {\n    for (var i = 0; i < this.content.length; i += 2)\n      f(this.content[i], this.content[i + 1]);\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by prepending the keys in this map that don't\n  // appear in `map` before the keys in `map`.\n  prepend: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(map.content.concat(this.subtract(map).content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a new map by appending the keys in this map that don't\n  // appear in `map` after the keys in `map`.\n  append: function(map) {\n    map = OrderedMap.from(map);\n    if (!map.size) return this\n    return new OrderedMap(this.subtract(map).content.concat(map.content))\n  },\n\n  // :: (union<Object, OrderedMap>) → OrderedMap\n  // Create a map containing all the keys in this map that don't\n  // appear in `map`.\n  subtract: function(map) {\n    var result = this;\n    map = OrderedMap.from(map);\n    for (var i = 0; i < map.content.length; i += 2)\n      result = result.remove(map.content[i]);\n    return result\n  },\n\n  // :: number\n  // The amount of keys in this map.\n  get size() {\n    return this.content.length >> 1\n  }\n};\n\n// :: (?union<Object, OrderedMap>) → OrderedMap\n// Return a map with the given content. If null, create an empty\n// map. If given an ordered map, return that map itself. If given an\n// object, create a map from the object's properties.\nOrderedMap.from = function(value) {\n  if (value instanceof OrderedMap) return value\n  var content = [];\n  if (value) for (var prop in value) content.push(prop, value[prop]);\n  return new OrderedMap(content)\n};\n\nvar orderedmap = OrderedMap;\n\nexport default orderedmap;\n","import { liftTarget, replaceStep, canJoin, joinPoint, canSplit, ReplaceAroundStep, findWrapping } from 'prosemirror-transform';\nimport { Slice, Fragment } from 'prosemirror-model';\nimport { NodeSelection, Selection, AllSelection, TextSelection } from 'prosemirror-state';\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Delete the selection, if there is one.\nfunction deleteSelection(state, dispatch) {\n  if (state.selection.empty) { return false }\n  if (dispatch) { dispatch(state.tr.deleteSelection().scrollIntoView()); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and at the start of a textblock, try to\n// reduce the distance between that block and the one before it—if\n// there's a block directly before it that can be joined, join them.\n// If not, try to move the selected block closer to the next one in\n// the document structure by lifting it out of its parent or moving it\n// into a parent of the previous block. Will use the view for accurate\n// (bidi-aware) start-of-textblock detection if given.\nfunction joinBackward(state, dispatch, view) {\n  var ref = state.selection;\n  var $cursor = ref.$cursor;\n  if (!$cursor || (view ? !view.endOfTextblock(\"backward\", state)\n                        : $cursor.parentOffset > 0))\n    { return false }\n\n  var $cut = findCutBefore($cursor);\n\n  // If there is no node before this, try to lift\n  if (!$cut) {\n    var range = $cursor.blockRange(), target = range && liftTarget(range);\n    if (target == null) { return false }\n    if (dispatch) { dispatch(state.tr.lift(range, target).scrollIntoView()); }\n    return true\n  }\n\n  var before = $cut.nodeBefore;\n  // Apply the joining algorithm\n  if (!before.type.spec.isolating && deleteBarrier(state, $cut, dispatch))\n    { return true }\n\n  // If the node below has no content and the node above is\n  // selectable, delete the node below and select the one above.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(before, \"end\") || NodeSelection.isSelectable(before))) {\n    var delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n    if (delStep.slice.size < delStep.to - delStep.from) {\n      if (dispatch) {\n        var tr = state.tr.step(delStep);\n        tr.setSelection(textblockAt(before, \"end\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos, -1)), -1)\n                        : NodeSelection.create(tr.doc, $cut.pos - before.nodeSize));\n        dispatch(tr.scrollIntoView());\n      }\n      return true\n    }\n  }\n\n  // If the node before is an atom, delete it\n  if (before.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) { dispatch(state.tr.delete($cut.pos - before.nodeSize, $cut.pos).scrollIntoView()); }\n    return true\n  }\n\n  return false\n}\n\nfunction textblockAt(node, side, only) {\n  for (; node; node = (side == \"start\" ? node.firstChild : node.lastChild)) {\n    if (node.isTextblock) { return true }\n    if (only && node.childCount != 1) { return false }\n  }\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the start of a textblock, select\n// the node before that textblock, if possible. This is intended to be\n// bound to keys like backspace, after\n// [`joinBackward`](#commands.joinBackward) or other deleting\n// commands, as a fall-back behavior when the schema doesn't allow\n// deletion at the selected point.\nfunction selectNodeBackward(state, dispatch, view) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  var empty = ref.empty;\n  var $cut = $head;\n  if (!empty) { return false }\n\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"backward\", state) : $head.parentOffset > 0) { return false }\n    $cut = findCutBefore($head);\n  }\n  var node = $cut && $cut.nodeBefore;\n  if (!node || !NodeSelection.isSelectable(node)) { return false }\n  if (dispatch)\n    { dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos - node.nodeSize)).scrollIntoView()); }\n  return true\n}\n\nfunction findCutBefore($pos) {\n  if (!$pos.parent.type.spec.isolating) { for (var i = $pos.depth - 1; i >= 0; i--) {\n    if ($pos.index(i) > 0) { return $pos.doc.resolve($pos.before(i + 1)) }\n    if ($pos.node(i).type.spec.isolating) { break }\n  } }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// If the selection is empty and the cursor is at the end of a\n// textblock, try to reduce or remove the boundary between that block\n// and the one after it, either by joining them or by moving the other\n// block closer to this one in the tree structure. Will use the view\n// for accurate start-of-textblock detection if given.\nfunction joinForward(state, dispatch, view) {\n  var ref = state.selection;\n  var $cursor = ref.$cursor;\n  if (!$cursor || (view ? !view.endOfTextblock(\"forward\", state)\n                        : $cursor.parentOffset < $cursor.parent.content.size))\n    { return false }\n\n  var $cut = findCutAfter($cursor);\n\n  // If there is no node after this, there's nothing to do\n  if (!$cut) { return false }\n\n  var after = $cut.nodeAfter;\n  // Try the joining algorithm\n  if (deleteBarrier(state, $cut, dispatch)) { return true }\n\n  // If the node above has no content and the node below is\n  // selectable, delete the node above and select the one below.\n  if ($cursor.parent.content.size == 0 &&\n      (textblockAt(after, \"start\") || NodeSelection.isSelectable(after))) {\n    var delStep = replaceStep(state.doc, $cursor.before(), $cursor.after(), Slice.empty);\n    if (delStep.slice.size < delStep.to - delStep.from) {\n      if (dispatch) {\n        var tr = state.tr.step(delStep);\n        tr.setSelection(textblockAt(after, \"start\") ? Selection.findFrom(tr.doc.resolve(tr.mapping.map($cut.pos)), 1)\n                        : NodeSelection.create(tr.doc, tr.mapping.map($cut.pos)));\n        dispatch(tr.scrollIntoView());\n      }\n      return true\n    }\n  }\n\n  // If the next node is an atom, delete it\n  if (after.isAtom && $cut.depth == $cursor.depth - 1) {\n    if (dispatch) { dispatch(state.tr.delete($cut.pos, $cut.pos + after.nodeSize).scrollIntoView()); }\n    return true\n  }\n\n  return false\n}\n\n// :: (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// When the selection is empty and at the end of a textblock, select\n// the node coming after that textblock, if possible. This is intended\n// to be bound to keys like delete, after\n// [`joinForward`](#commands.joinForward) and similar deleting\n// commands, to provide a fall-back behavior when the schema doesn't\n// allow deletion at the selected point.\nfunction selectNodeForward(state, dispatch, view) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  var empty = ref.empty;\n  var $cut = $head;\n  if (!empty) { return false }\n  if ($head.parent.isTextblock) {\n    if (view ? !view.endOfTextblock(\"forward\", state) : $head.parentOffset < $head.parent.content.size)\n      { return false }\n    $cut = findCutAfter($head);\n  }\n  var node = $cut && $cut.nodeAfter;\n  if (!node || !NodeSelection.isSelectable(node)) { return false }\n  if (dispatch)\n    { dispatch(state.tr.setSelection(NodeSelection.create(state.doc, $cut.pos)).scrollIntoView()); }\n  return true\n}\n\nfunction findCutAfter($pos) {\n  if (!$pos.parent.type.spec.isolating) { for (var i = $pos.depth - 1; i >= 0; i--) {\n    var parent = $pos.node(i);\n    if ($pos.index(i) + 1 < parent.childCount) { return $pos.doc.resolve($pos.after(i + 1)) }\n    if (parent.type.spec.isolating) { break }\n  } }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block or, if there is a text selection, the\n// closest ancestor block of the selection that can be joined, with\n// the sibling above it.\nfunction joinUp(state, dispatch) {\n  var sel = state.selection, nodeSel = sel instanceof NodeSelection, point;\n  if (nodeSel) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.from)) { return false }\n    point = sel.from;\n  } else {\n    point = joinPoint(state.doc, sel.from, -1);\n    if (point == null) { return false }\n  }\n  if (dispatch) {\n    var tr = state.tr.join(point);\n    if (nodeSel) { tr.setSelection(NodeSelection.create(tr.doc, point - state.doc.resolve(point).nodeBefore.nodeSize)); }\n    dispatch(tr.scrollIntoView());\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Join the selected block, or the closest ancestor of the selection\n// that can be joined, with the sibling after it.\nfunction joinDown(state, dispatch) {\n  var sel = state.selection, point;\n  if (sel instanceof NodeSelection) {\n    if (sel.node.isTextblock || !canJoin(state.doc, sel.to)) { return false }\n    point = sel.to;\n  } else {\n    point = joinPoint(state.doc, sel.to, 1);\n    if (point == null) { return false }\n  }\n  if (dispatch)\n    { dispatch(state.tr.join(point).scrollIntoView()); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Lift the selected block, or the closest ancestor block of the\n// selection that can be lifted, out of its parent node.\nfunction lift(state, dispatch) {\n  var ref = state.selection;\n  var $from = ref.$from;\n  var $to = ref.$to;\n  var range = $from.blockRange($to), target = range && liftTarget(range);\n  if (target == null) { return false }\n  if (dispatch) { dispatch(state.tr.lift(range, target).scrollIntoView()); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the selection is in a node whose type has a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, replace the\n// selection with a newline character.\nfunction newlineInCode(state, dispatch) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  var $anchor = ref.$anchor;\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) { return false }\n  if (dispatch) { dispatch(state.tr.insertText(\"\\n\").scrollIntoView()); }\n  return true\n}\n\nfunction defaultBlockAt(match) {\n  for (var i = 0; i < match.edgeCount; i++) {\n    var ref = match.edge(i);\n    var type = ref.type;\n    if (type.isTextblock && !type.hasRequiredAttrs()) { return type }\n  }\n  return null\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// When the selection is in a node with a truthy\n// [`code`](#model.NodeSpec.code) property in its spec, create a\n// default block after the code block, and move the cursor there.\nfunction exitCode(state, dispatch) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  var $anchor = ref.$anchor;\n  if (!$head.parent.type.spec.code || !$head.sameParent($anchor)) { return false }\n  var above = $head.node(-1), after = $head.indexAfter(-1), type = defaultBlockAt(above.contentMatchAt(after));\n  if (!above.canReplaceWith(after, after, type)) { return false }\n  if (dispatch) {\n    var pos = $head.after(), tr = state.tr.replaceWith(pos, pos, type.createAndFill());\n    tr.setSelection(Selection.near(tr.doc.resolve(pos), 1));\n    dispatch(tr.scrollIntoView());\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If a block node is selected, create an empty paragraph before (if\n// it is its parent's first child) or after it.\nfunction createParagraphNear(state, dispatch) {\n  var sel = state.selection;\n  var $from = sel.$from;\n  var $to = sel.$to;\n  if (sel instanceof AllSelection || $from.parent.inlineContent || $to.parent.inlineContent) { return false }\n  var type = defaultBlockAt($to.parent.contentMatchAt($to.indexAfter()));\n  if (!type || !type.isTextblock) { return false }\n  if (dispatch) {\n    var side = (!$from.parentOffset && $to.index() < $to.parent.childCount ? $from : $to).pos;\n    var tr = state.tr.insert(side, type.createAndFill());\n    tr.setSelection(TextSelection.create(tr.doc, side + 1));\n    dispatch(tr.scrollIntoView());\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// If the cursor is in an empty textblock that can be lifted, lift the\n// block.\nfunction liftEmptyBlock(state, dispatch) {\n  var ref = state.selection;\n  var $cursor = ref.$cursor;\n  if (!$cursor || $cursor.parent.content.size) { return false }\n  if ($cursor.depth > 1 && $cursor.after() != $cursor.end(-1)) {\n    var before = $cursor.before();\n    if (canSplit(state.doc, before)) {\n      if (dispatch) { dispatch(state.tr.split(before).scrollIntoView()); }\n      return true\n    }\n  }\n  var range = $cursor.blockRange(), target = range && liftTarget(range);\n  if (target == null) { return false }\n  if (dispatch) { dispatch(state.tr.lift(range, target).scrollIntoView()); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Split the parent block of the selection. If the selection is a text\n// selection, also delete its content.\nfunction splitBlock(state, dispatch) {\n  var ref = state.selection;\n  var $from = ref.$from;\n  var $to = ref.$to;\n  if (state.selection instanceof NodeSelection && state.selection.node.isBlock) {\n    if (!$from.parentOffset || !canSplit(state.doc, $from.pos)) { return false }\n    if (dispatch) { dispatch(state.tr.split($from.pos).scrollIntoView()); }\n    return true\n  }\n\n  if (!$from.parent.isBlock) { return false }\n\n  if (dispatch) {\n    var atEnd = $to.parentOffset == $to.parent.content.size;\n    var tr = state.tr;\n    if (state.selection instanceof TextSelection || state.selection instanceof AllSelection) { tr.deleteSelection(); }\n    var deflt = $from.depth == 0 ? null : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n    var types = atEnd && deflt ? [{type: deflt}] : null;\n    var can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n    if (!types && !can && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt && [{type: deflt}])) {\n      types = [{type: deflt}];\n      can = true;\n    }\n    if (can) {\n      tr.split(tr.mapping.map($from.pos), 1, types);\n      if (!atEnd && !$from.parentOffset && $from.parent.type != deflt) {\n        var first = tr.mapping.map($from.before()), $first = tr.doc.resolve(first);\n        if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt))\n          { tr.setNodeMarkup(tr.mapping.map($from.before()), deflt); }\n      }\n    }\n    dispatch(tr.scrollIntoView());\n  }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Acts like [`splitBlock`](#commands.splitBlock), but without\n// resetting the set of active marks at the cursor.\nfunction splitBlockKeepMarks(state, dispatch) {\n  return splitBlock(state, dispatch && (function (tr) {\n    var marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n    if (marks) { tr.ensureMarks(marks); }\n    dispatch(tr);\n  }))\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Move the selection to the node wrapping the current selection, if\n// any. (Will not select the document node.)\nfunction selectParentNode(state, dispatch) {\n  var ref = state.selection;\n  var $from = ref.$from;\n  var to = ref.to;\n  var pos;\n  var same = $from.sharedDepth(to);\n  if (same == 0) { return false }\n  pos = $from.before(same);\n  if (dispatch) { dispatch(state.tr.setSelection(NodeSelection.create(state.doc, pos))); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Select the whole document.\nfunction selectAll(state, dispatch) {\n  if (dispatch) { dispatch(state.tr.setSelection(new AllSelection(state.doc))); }\n  return true\n}\n\nfunction joinMaybeClear(state, $pos, dispatch) {\n  var before = $pos.nodeBefore, after = $pos.nodeAfter, index = $pos.index();\n  if (!before || !after || !before.type.compatibleContent(after.type)) { return false }\n  if (!before.content.size && $pos.parent.canReplace(index - 1, index)) {\n    if (dispatch) { dispatch(state.tr.delete($pos.pos - before.nodeSize, $pos.pos).scrollIntoView()); }\n    return true\n  }\n  if (!$pos.parent.canReplace(index, index + 1) || !(after.isTextblock || canJoin(state.doc, $pos.pos)))\n    { return false }\n  if (dispatch)\n    { dispatch(state.tr\n             .clearIncompatible($pos.pos, before.type, before.contentMatchAt(before.childCount))\n             .join($pos.pos)\n             .scrollIntoView()); }\n  return true\n}\n\nfunction deleteBarrier(state, $cut, dispatch) {\n  var before = $cut.nodeBefore, after = $cut.nodeAfter, conn, match;\n  if (before.type.spec.isolating || after.type.spec.isolating) { return false }\n  if (joinMaybeClear(state, $cut, dispatch)) { return true }\n\n  var canDelAfter = $cut.parent.canReplace($cut.index(), $cut.index() + 1);\n  if (canDelAfter &&\n      (conn = (match = before.contentMatchAt(before.childCount)).findWrapping(after.type)) &&\n      match.matchType(conn[0] || after.type).validEnd) {\n    if (dispatch) {\n      var end = $cut.pos + after.nodeSize, wrap = Fragment.empty;\n      for (var i = conn.length - 1; i >= 0; i--)\n        { wrap = Fragment.from(conn[i].create(null, wrap)); }\n      wrap = Fragment.from(before.copy(wrap));\n      var tr = state.tr.step(new ReplaceAroundStep($cut.pos - 1, end, $cut.pos, end, new Slice(wrap, 1, 0), conn.length, true));\n      var joinAt = end + 2 * conn.length;\n      if (canJoin(tr.doc, joinAt)) { tr.join(joinAt); }\n      dispatch(tr.scrollIntoView());\n    }\n    return true\n  }\n\n  var selAfter = Selection.findFrom($cut, 1);\n  var range = selAfter && selAfter.$from.blockRange(selAfter.$to), target = range && liftTarget(range);\n  if (target != null && target >= $cut.depth) {\n    if (dispatch) { dispatch(state.tr.lift(range, target).scrollIntoView()); }\n    return true\n  }\n\n  if (canDelAfter && textblockAt(after, \"start\", true) && textblockAt(before, \"end\")) {\n    var at = before, wrap$1 = [];\n    for (;;) {\n      wrap$1.push(at);\n      if (at.isTextblock) { break }\n      at = at.lastChild;\n    }\n    var afterText = after, afterDepth = 1;\n    for (; !afterText.isTextblock; afterText = afterText.firstChild) { afterDepth++; }\n    if (at.canReplace(at.childCount, at.childCount, afterText.content)) {\n      if (dispatch) {\n        var end$1 = Fragment.empty;\n        for (var i$1 = wrap$1.length - 1; i$1 >= 0; i$1--) { end$1 = Fragment.from(wrap$1[i$1].copy(end$1)); }\n        var tr$1 = state.tr.step(new ReplaceAroundStep($cut.pos - wrap$1.length, $cut.pos + after.nodeSize,\n                                                     $cut.pos + afterDepth, $cut.pos + after.nodeSize - afterDepth,\n                                                     new Slice(end$1, wrap$1.length, 0), 0, true));\n        dispatch(tr$1.scrollIntoView());\n      }\n      return true\n    }\n  }\n\n  return false\n}\n\nfunction selectTextblockSide(side) {\n  return function(state, dispatch) {\n    var sel = state.selection, $pos = side < 0 ? sel.$from : sel.$to;\n    var depth = $pos.depth;\n    while ($pos.node(depth).isInline) {\n      if (!depth) { return false }\n      depth--;\n    }\n    if (!$pos.node(depth).isTextblock) { return false }\n    if (dispatch)\n      { dispatch(state.tr.setSelection(TextSelection.create(\n        state.doc, side < 0 ? $pos.start(depth) : $pos.end(depth)))); }\n    return true\n  }\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Moves the cursor to the start of current text block.\nvar selectTextblockStart = selectTextblockSide(-1);\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// Moves the cursor to the end of current text block.\nvar selectTextblockEnd = selectTextblockSide(1);\n\n// Parameterized commands\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Wrap the selection in a node of the given type with the given\n// attributes.\nfunction wrapIn(nodeType, attrs) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var range = $from.blockRange($to), wrapping = range && findWrapping(range, nodeType, attrs);\n    if (!wrapping) { return false }\n    if (dispatch) { dispatch(state.tr.wrap(range, wrapping).scrollIntoView()); }\n    return true\n  }\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command that tries to set the selected textblocks to the\n// given node type with the given attributes.\nfunction setBlockType(nodeType, attrs) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var from = ref.from;\n    var to = ref.to;\n    var applicable = false;\n    state.doc.nodesBetween(from, to, function (node, pos) {\n      if (applicable) { return false }\n      if (!node.isTextblock || node.hasMarkup(nodeType, attrs)) { return }\n      if (node.type == nodeType) {\n        applicable = true;\n      } else {\n        var $pos = state.doc.resolve(pos), index = $pos.index();\n        applicable = $pos.parent.canReplaceWith(index, index + 1, nodeType);\n      }\n    });\n    if (!applicable) { return false }\n    if (dispatch) { dispatch(state.tr.setBlockType(from, to, nodeType, attrs).scrollIntoView()); }\n    return true\n  }\n}\n\nfunction markApplies(doc, ranges, type) {\n  var loop = function ( i ) {\n    var ref = ranges[i];\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var can = $from.depth == 0 ? doc.type.allowsMarkType(type) : false;\n    doc.nodesBetween($from.pos, $to.pos, function (node) {\n      if (can) { return false }\n      can = node.inlineContent && node.type.allowsMarkType(type);\n    });\n    if (can) { return { v: true } }\n  };\n\n  for (var i = 0; i < ranges.length; i++) {\n    var returned = loop( i );\n\n    if ( returned ) return returned.v;\n  }\n  return false\n}\n\n// :: (MarkType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command function that toggles the given mark with the\n// given attributes. Will return `false` when the current selection\n// doesn't support that mark. This will remove the mark if any marks\n// of that type exist in the selection, or add it otherwise. If the\n// selection is empty, this applies to the [stored\n// marks](#state.EditorState.storedMarks) instead of a range of the\n// document.\nfunction toggleMark(markType, attrs) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var empty = ref.empty;\n    var $cursor = ref.$cursor;\n    var ranges = ref.ranges;\n    if ((empty && !$cursor) || !markApplies(state.doc, ranges, markType)) { return false }\n    if (dispatch) {\n      if ($cursor) {\n        if (markType.isInSet(state.storedMarks || $cursor.marks()))\n          { dispatch(state.tr.removeStoredMark(markType)); }\n        else\n          { dispatch(state.tr.addStoredMark(markType.create(attrs))); }\n      } else {\n        var has = false, tr = state.tr;\n        for (var i = 0; !has && i < ranges.length; i++) {\n          var ref$1 = ranges[i];\n          var $from = ref$1.$from;\n          var $to = ref$1.$to;\n          has = state.doc.rangeHasMark($from.pos, $to.pos, markType);\n        }\n        for (var i$1 = 0; i$1 < ranges.length; i$1++) {\n          var ref$2 = ranges[i$1];\n          var $from$1 = ref$2.$from;\n          var $to$1 = ref$2.$to;\n          if (has) {\n            tr.removeMark($from$1.pos, $to$1.pos, markType);\n          } else {\n            var from = $from$1.pos, to = $to$1.pos, start = $from$1.nodeAfter, end = $to$1.nodeBefore;\n            var spaceStart = start && start.isText ? /^\\s*/.exec(start.text)[0].length : 0;\n            var spaceEnd = end && end.isText ? /\\s*$/.exec(end.text)[0].length : 0;\n            if (from + spaceStart < to) { from += spaceStart; to -= spaceEnd; }\n            tr.addMark(from, to, markType.create(attrs));\n          }\n        }\n        dispatch(tr.scrollIntoView());\n      }\n    }\n    return true\n  }\n}\n\nfunction wrapDispatchForJoin(dispatch, isJoinable) {\n  return function (tr) {\n    if (!tr.isGeneric) { return dispatch(tr) }\n\n    var ranges = [];\n    for (var i = 0; i < tr.mapping.maps.length; i++) {\n      var map = tr.mapping.maps[i];\n      for (var j = 0; j < ranges.length; j++)\n        { ranges[j] = map.map(ranges[j]); }\n      map.forEach(function (_s, _e, from, to) { return ranges.push(from, to); });\n    }\n\n    // Figure out which joinable points exist inside those ranges,\n    // by checking all node boundaries in their parent nodes.\n    var joinable = [];\n    for (var i$1 = 0; i$1 < ranges.length; i$1 += 2) {\n      var from = ranges[i$1], to = ranges[i$1 + 1];\n      var $from = tr.doc.resolve(from), depth = $from.sharedDepth(to), parent = $from.node(depth);\n      for (var index = $from.indexAfter(depth), pos = $from.after(depth + 1); pos <= to; ++index) {\n        var after = parent.maybeChild(index);\n        if (!after) { break }\n        if (index && joinable.indexOf(pos) == -1) {\n          var before = parent.child(index - 1);\n          if (before.type == after.type && isJoinable(before, after))\n            { joinable.push(pos); }\n        }\n        pos += after.nodeSize;\n      }\n    }\n    // Join the joinable points\n    joinable.sort(function (a, b) { return a - b; });\n    for (var i$2 = joinable.length - 1; i$2 >= 0; i$2--) {\n      if (canJoin(tr.doc, joinable[i$2])) { tr.join(joinable[i$2]); }\n    }\n    dispatch(tr);\n  }\n}\n\n// :: ((state: EditorState, ?(tr: Transaction)) → bool, union<(before: Node, after: Node) → bool, [string]>) → (state: EditorState, ?(tr: Transaction)) → bool\n// Wrap a command so that, when it produces a transform that causes\n// two joinable nodes to end up next to each other, those are joined.\n// Nodes are considered joinable when they are of the same type and\n// when the `isJoinable` predicate returns true for them or, if an\n// array of strings was passed, if their node type name is in that\n// array.\nfunction autoJoin(command, isJoinable) {\n  if (Array.isArray(isJoinable)) {\n    var types = isJoinable;\n    isJoinable = function (node) { return types.indexOf(node.type.name) > -1; };\n  }\n  return function (state, dispatch, view) { return command(state, dispatch && wrapDispatchForJoin(dispatch, isJoinable), view); }\n}\n\n// :: (...[(EditorState, ?(tr: Transaction), ?EditorView) → bool]) → (EditorState, ?(tr: Transaction), ?EditorView) → bool\n// Combine a number of command functions into a single function (which\n// calls them one by one until one returns true).\nfunction chainCommands() {\n  var commands = [], len = arguments.length;\n  while ( len-- ) commands[ len ] = arguments[ len ];\n\n  return function(state, dispatch, view) {\n    for (var i = 0; i < commands.length; i++)\n      { if (commands[i](state, dispatch, view)) { return true } }\n    return false\n  }\n}\n\nvar backspace = chainCommands(deleteSelection, joinBackward, selectNodeBackward);\nvar del = chainCommands(deleteSelection, joinForward, selectNodeForward);\n\n// :: Object\n// A basic keymap containing bindings not specific to any schema.\n// Binds the following keys (when multiple commands are listed, they\n// are chained with [`chainCommands`](#commands.chainCommands)):\n//\n// * **Enter** to `newlineInCode`, `createParagraphNear`, `liftEmptyBlock`, `splitBlock`\n// * **Mod-Enter** to `exitCode`\n// * **Backspace** and **Mod-Backspace** to `deleteSelection`, `joinBackward`, `selectNodeBackward`\n// * **Delete** and **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-Delete** to `deleteSelection`, `joinForward`, `selectNodeForward`\n// * **Mod-a** to `selectAll`\nvar pcBaseKeymap = {\n  \"Enter\": chainCommands(newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock),\n  \"Mod-Enter\": exitCode,\n  \"Backspace\": backspace,\n  \"Mod-Backspace\": backspace,\n  \"Shift-Backspace\": backspace,\n  \"Delete\": del,\n  \"Mod-Delete\": del,\n  \"Mod-a\": selectAll\n};\n\n// :: Object\n// A copy of `pcBaseKeymap` that also binds **Ctrl-h** like Backspace,\n// **Ctrl-d** like Delete, **Alt-Backspace** like Ctrl-Backspace, and\n// **Ctrl-Alt-Backspace**, **Alt-Delete**, and **Alt-d** like\n// Ctrl-Delete.\nvar macBaseKeymap = {\n  \"Ctrl-h\": pcBaseKeymap[\"Backspace\"],\n  \"Alt-Backspace\": pcBaseKeymap[\"Mod-Backspace\"],\n  \"Ctrl-d\": pcBaseKeymap[\"Delete\"],\n  \"Ctrl-Alt-Backspace\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-Delete\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Alt-d\": pcBaseKeymap[\"Mod-Delete\"],\n  \"Ctrl-a\": selectTextblockStart,\n  \"Ctrl-e\": selectTextblockEnd\n};\nfor (var key in pcBaseKeymap) { macBaseKeymap[key] = pcBaseKeymap[key]; }\n\npcBaseKeymap.Home = selectTextblockStart;\npcBaseKeymap.End = selectTextblockEnd;\n\n// declare global: os, navigator\nvar mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform)\n          : typeof os != \"undefined\" ? os.platform() == \"darwin\" : false;\n\n// :: Object\n// Depending on the detected platform, this will hold\n// [`pcBasekeymap`](#commands.pcBaseKeymap) or\n// [`macBaseKeymap`](#commands.macBaseKeymap).\nvar baseKeymap = mac ? macBaseKeymap : pcBaseKeymap;\n\nexport { autoJoin, baseKeymap, chainCommands, createParagraphNear, deleteSelection, exitCode, joinBackward, joinDown, joinForward, joinUp, lift, liftEmptyBlock, macBaseKeymap, newlineInCode, pcBaseKeymap, selectAll, selectNodeBackward, selectNodeForward, selectParentNode, selectTextblockEnd, selectTextblockStart, setBlockType, splitBlock, splitBlockKeepMarks, toggleMark, wrapIn };\n","import RopeSequence from 'rope-sequence';\nimport { Mapping } from 'prosemirror-transform';\nimport { PluginKey, Plugin } from 'prosemirror-state';\n\n// ProseMirror's history isn't simply a way to roll back to a previous\n// state, because ProseMirror supports applying changes without adding\n// them to the history (for example during collaboration).\n//\n// To this end, each 'Branch' (one for the undo history and one for\n// the redo history) keeps an array of 'Items', which can optionally\n// hold a step (an actual undoable change), and always hold a position\n// map (which is needed to move changes below them to apply to the\n// current document).\n//\n// An item that has both a step and a selection bookmark is the start\n// of an 'event' — a group of changes that will be undone or redone at\n// once. (It stores only the bookmark, since that way we don't have to\n// provide a document until the selection is actually applied, which\n// is useful when compressing.)\n\n// Used to schedule history compression\nvar max_empty_items = 500;\n\nvar Branch = function Branch(items, eventCount) {\n  this.items = items;\n  this.eventCount = eventCount;\n};\n\n// : (EditorState, bool) → ?{transform: Transform, selection: ?SelectionBookmark, remaining: Branch}\n// Pop the latest event off the branch's history and apply it\n// to a document transform.\nBranch.prototype.popEvent = function popEvent (state, preserveItems) {\n    var this$1 = this;\n\n  if (this.eventCount == 0) { return null }\n\n  var end = this.items.length;\n  for (;; end--) {\n    var next = this.items.get(end - 1);\n    if (next.selection) { --end; break }\n  }\n\n  var remap, mapFrom;\n  if (preserveItems) {\n    remap = this.remapping(end, this.items.length);\n    mapFrom = remap.maps.length;\n  }\n  var transform = state.tr;\n  var selection, remaining;\n  var addAfter = [], addBefore = [];\n\n  this.items.forEach(function (item, i) {\n    if (!item.step) {\n      if (!remap) {\n        remap = this$1.remapping(end, i + 1);\n        mapFrom = remap.maps.length;\n      }\n      mapFrom--;\n      addBefore.push(item);\n      return\n    }\n\n    if (remap) {\n      addBefore.push(new Item(item.map));\n      var step = item.step.map(remap.slice(mapFrom)), map;\n\n      if (step && transform.maybeStep(step).doc) {\n        map = transform.mapping.maps[transform.mapping.maps.length - 1];\n        addAfter.push(new Item(map, null, null, addAfter.length + addBefore.length));\n      }\n      mapFrom--;\n      if (map) { remap.appendMap(map, mapFrom); }\n    } else {\n      transform.maybeStep(item.step);\n    }\n\n    if (item.selection) {\n      selection = remap ? item.selection.map(remap.slice(mapFrom)) : item.selection;\n      remaining = new Branch(this$1.items.slice(0, end).append(addBefore.reverse().concat(addAfter)), this$1.eventCount - 1);\n      return false\n    }\n  }, this.items.length, 0);\n\n  return {remaining: remaining, transform: transform, selection: selection}\n};\n\n// : (Transform, ?SelectionBookmark, Object) → Branch\n// Create a new branch with the given transform added.\nBranch.prototype.addTransform = function addTransform (transform, selection, histOptions, preserveItems) {\n  var newItems = [], eventCount = this.eventCount;\n  var oldItems = this.items, lastItem = !preserveItems && oldItems.length ? oldItems.get(oldItems.length - 1) : null;\n\n  for (var i = 0; i < transform.steps.length; i++) {\n    var step = transform.steps[i].invert(transform.docs[i]);\n    var item = new Item(transform.mapping.maps[i], step, selection), merged = (void 0);\n    if (merged = lastItem && lastItem.merge(item)) {\n      item = merged;\n      if (i) { newItems.pop(); }\n      else { oldItems = oldItems.slice(0, oldItems.length - 1); }\n    }\n    newItems.push(item);\n    if (selection) {\n      eventCount++;\n      selection = null;\n    }\n    if (!preserveItems) { lastItem = item; }\n  }\n  var overflow = eventCount - histOptions.depth;\n  if (overflow > DEPTH_OVERFLOW) {\n    oldItems = cutOffEvents(oldItems, overflow);\n    eventCount -= overflow;\n  }\n  return new Branch(oldItems.append(newItems), eventCount)\n};\n\nBranch.prototype.remapping = function remapping (from, to) {\n  var maps = new Mapping;\n  this.items.forEach(function (item, i) {\n    var mirrorPos = item.mirrorOffset != null && i - item.mirrorOffset >= from\n        ? maps.maps.length - item.mirrorOffset : null;\n    maps.appendMap(item.map, mirrorPos);\n  }, from, to);\n  return maps\n};\n\nBranch.prototype.addMaps = function addMaps (array) {\n  if (this.eventCount == 0) { return this }\n  return new Branch(this.items.append(array.map(function (map) { return new Item(map); })), this.eventCount)\n};\n\n// : (Transform, number)\n// When the collab module receives remote changes, the history has\n// to know about those, so that it can adjust the steps that were\n// rebased on top of the remote changes, and include the position\n// maps for the remote changes in its array of items.\nBranch.prototype.rebased = function rebased (rebasedTransform, rebasedCount) {\n  if (!this.eventCount) { return this }\n\n  var rebasedItems = [], start = Math.max(0, this.items.length - rebasedCount);\n\n  var mapping = rebasedTransform.mapping;\n  var newUntil = rebasedTransform.steps.length;\n  var eventCount = this.eventCount;\n  this.items.forEach(function (item) { if (item.selection) { eventCount--; } }, start);\n\n  var iRebased = rebasedCount;\n  this.items.forEach(function (item) {\n    var pos = mapping.getMirror(--iRebased);\n    if (pos == null) { return }\n    newUntil = Math.min(newUntil, pos);\n    var map = mapping.maps[pos];\n    if (item.step) {\n      var step = rebasedTransform.steps[pos].invert(rebasedTransform.docs[pos]);\n      var selection = item.selection && item.selection.map(mapping.slice(iRebased + 1, pos));\n      if (selection) { eventCount++; }\n      rebasedItems.push(new Item(map, step, selection));\n    } else {\n      rebasedItems.push(new Item(map));\n    }\n  }, start);\n\n  var newMaps = [];\n  for (var i = rebasedCount; i < newUntil; i++)\n    { newMaps.push(new Item(mapping.maps[i])); }\n  var items = this.items.slice(0, start).append(newMaps).append(rebasedItems);\n  var branch = new Branch(items, eventCount);\n\n  if (branch.emptyItemCount() > max_empty_items)\n    { branch = branch.compress(this.items.length - rebasedItems.length); }\n  return branch\n};\n\nBranch.prototype.emptyItemCount = function emptyItemCount () {\n  var count = 0;\n  this.items.forEach(function (item) { if (!item.step) { count++; } });\n  return count\n};\n\n// Compressing a branch means rewriting it to push the air (map-only\n// items) out. During collaboration, these naturally accumulate\n// because each remote change adds one. The `upto` argument is used\n// to ensure that only the items below a given level are compressed,\n// because `rebased` relies on a clean, untouched set of items in\n// order to associate old items with rebased steps.\nBranch.prototype.compress = function compress (upto) {\n    if ( upto === void 0 ) upto = this.items.length;\n\n  var remap = this.remapping(0, upto), mapFrom = remap.maps.length;\n  var items = [], events = 0;\n  this.items.forEach(function (item, i) {\n    if (i >= upto) {\n      items.push(item);\n      if (item.selection) { events++; }\n    } else if (item.step) {\n      var step = item.step.map(remap.slice(mapFrom)), map = step && step.getMap();\n      mapFrom--;\n      if (map) { remap.appendMap(map, mapFrom); }\n      if (step) {\n        var selection = item.selection && item.selection.map(remap.slice(mapFrom));\n        if (selection) { events++; }\n        var newItem = new Item(map.invert(), step, selection), merged, last = items.length - 1;\n        if (merged = items.length && items[last].merge(newItem))\n          { items[last] = merged; }\n        else\n          { items.push(newItem); }\n      }\n    } else if (item.map) {\n      mapFrom--;\n    }\n  }, this.items.length, 0);\n  return new Branch(RopeSequence.from(items.reverse()), events)\n};\n\nBranch.empty = new Branch(RopeSequence.empty, 0);\n\nfunction cutOffEvents(items, n) {\n  var cutPoint;\n  items.forEach(function (item, i) {\n    if (item.selection && (n-- == 0)) {\n      cutPoint = i;\n      return false\n    }\n  });\n  return items.slice(cutPoint)\n}\n\nvar Item = function Item(map, step, selection, mirrorOffset) {\n  // The (forward) step map for this item.\n  this.map = map;\n  // The inverted step\n  this.step = step;\n  // If this is non-null, this item is the start of a group, and\n  // this selection is the starting selection for the group (the one\n  // that was active before the first step was applied)\n  this.selection = selection;\n  // If this item is the inverse of a previous mapping on the stack,\n  // this points at the inverse's offset\n  this.mirrorOffset = mirrorOffset;\n};\n\nItem.prototype.merge = function merge (other) {\n  if (this.step && other.step && !other.selection) {\n    var step = other.step.merge(this.step);\n    if (step) { return new Item(step.getMap().invert(), step, this.selection) }\n  }\n};\n\n// The value of the state field that tracks undo/redo history for that\n// state. Will be stored in the plugin state when the history plugin\n// is active.\nvar HistoryState = function HistoryState(done, undone, prevRanges, prevTime) {\n  this.done = done;\n  this.undone = undone;\n  this.prevRanges = prevRanges;\n  this.prevTime = prevTime;\n};\n\nvar DEPTH_OVERFLOW = 20;\n\n// : (HistoryState, EditorState, Transaction, Object)\n// Record a transformation in undo history.\nfunction applyTransaction(history, state, tr, options) {\n  var historyTr = tr.getMeta(historyKey), rebased;\n  if (historyTr) { return historyTr.historyState }\n\n  if (tr.getMeta(closeHistoryKey)) { history = new HistoryState(history.done, history.undone, null, 0); }\n\n  var appended = tr.getMeta(\"appendedTransaction\");\n\n  if (tr.steps.length == 0) {\n    return history\n  } else if (appended && appended.getMeta(historyKey)) {\n    if (appended.getMeta(historyKey).redo)\n      { return new HistoryState(history.done.addTransform(tr, null, options, mustPreserveItems(state)),\n                              history.undone, rangesFor(tr.mapping.maps[tr.steps.length - 1]), history.prevTime) }\n    else\n      { return new HistoryState(history.done, history.undone.addTransform(tr, null, options, mustPreserveItems(state)),\n                              null, history.prevTime) }\n  } else if (tr.getMeta(\"addToHistory\") !== false && !(appended && appended.getMeta(\"addToHistory\") === false)) {\n    // Group transforms that occur in quick succession into one event.\n    var newGroup = history.prevTime == 0 || !appended && (history.prevTime < (tr.time || 0) - options.newGroupDelay ||\n                                                          !isAdjacentTo(tr, history.prevRanges));\n    var prevRanges = appended ? mapRanges(history.prevRanges, tr.mapping) : rangesFor(tr.mapping.maps[tr.steps.length - 1]);\n    return new HistoryState(history.done.addTransform(tr, newGroup ? state.selection.getBookmark() : null,\n                                                      options, mustPreserveItems(state)),\n                            Branch.empty, prevRanges, tr.time)\n  } else if (rebased = tr.getMeta(\"rebased\")) {\n    // Used by the collab module to tell the history that some of its\n    // content has been rebased.\n    return new HistoryState(history.done.rebased(tr, rebased),\n                            history.undone.rebased(tr, rebased),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  } else {\n    return new HistoryState(history.done.addMaps(tr.mapping.maps),\n                            history.undone.addMaps(tr.mapping.maps),\n                            mapRanges(history.prevRanges, tr.mapping), history.prevTime)\n  }\n}\n\nfunction isAdjacentTo(transform, prevRanges) {\n  if (!prevRanges) { return false }\n  if (!transform.docChanged) { return true }\n  var adjacent = false;\n  transform.mapping.maps[0].forEach(function (start, end) {\n    for (var i = 0; i < prevRanges.length; i += 2)\n      { if (start <= prevRanges[i + 1] && end >= prevRanges[i])\n        { adjacent = true; } }\n  });\n  return adjacent\n}\n\nfunction rangesFor(map) {\n  var result = [];\n  map.forEach(function (_from, _to, from, to) { return result.push(from, to); });\n  return result\n}\n\nfunction mapRanges(ranges, mapping) {\n  if (!ranges) { return null }\n  var result = [];\n  for (var i = 0; i < ranges.length; i += 2) {\n    var from = mapping.map(ranges[i], 1), to = mapping.map(ranges[i + 1], -1);\n    if (from <= to) { result.push(from, to); }\n  }\n  return result\n}\n\n// : (HistoryState, EditorState, (tr: Transaction), bool)\n// Apply the latest event from one branch to the document and shift the event\n// onto the other branch.\nfunction histTransaction(history, state, dispatch, redo) {\n  var preserveItems = mustPreserveItems(state), histOptions = historyKey.get(state).spec.config;\n  var pop = (redo ? history.undone : history.done).popEvent(state, preserveItems);\n  if (!pop) { return }\n\n  var selection = pop.selection.resolve(pop.transform.doc);\n  var added = (redo ? history.done : history.undone).addTransform(pop.transform, state.selection.getBookmark(),\n                                                                  histOptions, preserveItems);\n\n  var newHist = new HistoryState(redo ? added : pop.remaining, redo ? pop.remaining : added, null, 0);\n  dispatch(pop.transform.setSelection(selection).setMeta(historyKey, {redo: redo, historyState: newHist}).scrollIntoView());\n}\n\nvar cachedPreserveItems = false, cachedPreserveItemsPlugins = null;\n// Check whether any plugin in the given state has a\n// `historyPreserveItems` property in its spec, in which case we must\n// preserve steps exactly as they came in, so that they can be\n// rebased.\nfunction mustPreserveItems(state) {\n  var plugins = state.plugins;\n  if (cachedPreserveItemsPlugins != plugins) {\n    cachedPreserveItems = false;\n    cachedPreserveItemsPlugins = plugins;\n    for (var i = 0; i < plugins.length; i++) { if (plugins[i].spec.historyPreserveItems) {\n      cachedPreserveItems = true;\n      break\n    } }\n  }\n  return cachedPreserveItems\n}\n\n// :: (Transaction) → Transaction\n// Set a flag on the given transaction that will prevent further steps\n// from being appended to an existing history event (so that they\n// require a separate undo command to undo).\nfunction closeHistory(tr) {\n  return tr.setMeta(closeHistoryKey, true)\n}\n\nvar historyKey = new PluginKey(\"history\");\nvar closeHistoryKey = new PluginKey(\"closeHistory\");\n\n// :: (?Object) → Plugin\n// Returns a plugin that enables the undo history for an editor. The\n// plugin will track undo and redo stacks, which can be used with the\n// [`undo`](#history.undo) and [`redo`](#history.redo) commands.\n//\n// You can set an `\"addToHistory\"` [metadata\n// property](#state.Transaction.setMeta) of `false` on a transaction\n// to prevent it from being rolled back by undo.\n//\n//   config::-\n//   Supports the following configuration options:\n//\n//     depth:: ?number\n//     The amount of history events that are collected before the\n//     oldest events are discarded. Defaults to 100.\n//\n//     newGroupDelay:: ?number\n//     The delay between changes after which a new group should be\n//     started. Defaults to 500 (milliseconds). Note that when changes\n//     aren't adjacent, a new group is always started.\nfunction history(config) {\n  config = {depth: config && config.depth || 100,\n            newGroupDelay: config && config.newGroupDelay || 500};\n  return new Plugin({\n    key: historyKey,\n\n    state: {\n      init: function init() {\n        return new HistoryState(Branch.empty, Branch.empty, null, 0)\n      },\n      apply: function apply(tr, hist, state) {\n        return applyTransaction(hist, state, tr, config)\n      }\n    },\n\n    config: config,\n\n    props: {\n      handleDOMEvents: {\n        beforeinput: function beforeinput(view, e) {\n          var handled = e.inputType == \"historyUndo\" ? undo(view.state, view.dispatch) :\n              e.inputType == \"historyRedo\" ? redo(view.state, view.dispatch) : false;\n          if (handled) { e.preventDefault(); }\n          return handled\n        }\n      }\n    }\n  })\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that undoes the last change, if any.\nfunction undo(state, dispatch) {\n  var hist = historyKey.getState(state);\n  if (!hist || hist.done.eventCount == 0) { return false }\n  if (dispatch) { histTransaction(hist, state, dispatch, false); }\n  return true\n}\n\n// :: (EditorState, ?(tr: Transaction)) → bool\n// A command function that redoes the last undone change, if any.\nfunction redo(state, dispatch) {\n  var hist = historyKey.getState(state);\n  if (!hist || hist.undone.eventCount == 0) { return false }\n  if (dispatch) { histTransaction(hist, state, dispatch, true); }\n  return true\n}\n\n// :: (EditorState) → number\n// The amount of undoable events available in a given state.\nfunction undoDepth(state) {\n  var hist = historyKey.getState(state);\n  return hist ? hist.done.eventCount : 0\n}\n\n// :: (EditorState) → number\n// The amount of redoable events available in a given editor state.\nfunction redoDepth(state) {\n  var hist = historyKey.getState(state);\n  return hist ? hist.undone.eventCount : 0\n}\n\nexport { HistoryState, closeHistory, history, redo, redoDepth, undo, undoDepth };\n","import { Plugin } from 'prosemirror-state';\nimport { findWrapping, canJoin } from 'prosemirror-transform';\n\n// ::- Input rules are regular expressions describing a piece of text\n// that, when typed, causes something to happen. This might be\n// changing two dashes into an emdash, wrapping a paragraph starting\n// with `\"> \"` into a blockquote, or something entirely different.\nvar InputRule = function InputRule(match, handler) {\n  this.match = match;\n  this.handler = typeof handler == \"string\" ? stringHandler(handler) : handler;\n};\n\nfunction stringHandler(string) {\n  return function(state, match, start, end) {\n    var insert = string;\n    if (match[1]) {\n      var offset = match[0].lastIndexOf(match[1]);\n      insert += match[0].slice(offset + match[1].length);\n      start += offset;\n      var cutOff = start - end;\n      if (cutOff > 0) {\n        insert = match[0].slice(offset - cutOff, offset) + insert;\n        start = end;\n      }\n    }\n    return state.tr.insertText(insert, start, end)\n  }\n}\n\nvar MAX_MATCH = 500;\n\n// :: (config: {rules: [InputRule]}) → Plugin\n// Create an input rules plugin. When enabled, it will cause text\n// input that matches any of the given rules to trigger the rule's\n// action.\nfunction inputRules(ref) {\n  var rules = ref.rules;\n\n  var plugin = new Plugin({\n    state: {\n      init: function init() { return null },\n      apply: function apply(tr, prev) {\n        var stored = tr.getMeta(this);\n        if (stored) { return stored }\n        return tr.selectionSet || tr.docChanged ? null : prev\n      }\n    },\n\n    props: {\n      handleTextInput: function handleTextInput(view, from, to, text) {\n        return run(view, from, to, text, rules, plugin)\n      },\n      handleDOMEvents: {\n        compositionend: function (view) {\n          setTimeout(function () {\n            var ref = view.state.selection;\n            var $cursor = ref.$cursor;\n            if ($cursor) { run(view, $cursor.pos, $cursor.pos, \"\", rules, plugin); }\n          });\n        }\n      }\n    },\n\n    isInputRules: true\n  });\n  return plugin\n}\n\nfunction run(view, from, to, text, rules, plugin) {\n  if (view.composing) { return false }\n  var state = view.state, $from = state.doc.resolve(from);\n  if ($from.parent.type.spec.code) { return false }\n  var textBefore = $from.parent.textBetween(Math.max(0, $from.parentOffset - MAX_MATCH), $from.parentOffset,\n                                            null, \"\\ufffc\") + text;\n  for (var i = 0; i < rules.length; i++) {\n    var match = rules[i].match.exec(textBefore);\n    var tr = match && rules[i].handler(state, match, from - (match[0].length - text.length), to);\n    if (!tr) { continue }\n    view.dispatch(tr.setMeta(plugin, {transform: tr, from: from, to: to, text: text}));\n    return true\n  }\n  return false\n}\n\n// :: (EditorState, ?(Transaction)) → bool\n// This is a command that will undo an input rule, if applying such a\n// rule was the last thing that the user did.\nfunction undoInputRule(state, dispatch) {\n  var plugins = state.plugins;\n  for (var i = 0; i < plugins.length; i++) {\n    var plugin = plugins[i], undoable = (void 0);\n    if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n      if (dispatch) {\n        var tr = state.tr, toUndo = undoable.transform;\n        for (var j = toUndo.steps.length - 1; j >= 0; j--)\n          { tr.step(toUndo.steps[j].invert(toUndo.docs[j])); }\n        if (undoable.text) {\n          var marks = tr.doc.resolve(undoable.from).marks();\n          tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n        } else {\n          tr.delete(undoable.from, undoable.to);\n        }\n        dispatch(tr);\n      }\n      return true\n    }\n  }\n  return false\n}\n\n// :: InputRule Converts double dashes to an emdash.\nvar emDash = new InputRule(/--$/, \"—\");\n// :: InputRule Converts three dots to an ellipsis character.\nvar ellipsis = new InputRule(/\\.\\.\\.$/, \"…\");\n// :: InputRule “Smart” opening double quotes.\nvar openDoubleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(\")$/, \"“\");\n// :: InputRule “Smart” closing double quotes.\nvar closeDoubleQuote = new InputRule(/\"$/, \"”\");\n// :: InputRule “Smart” opening single quotes.\nvar openSingleQuote = new InputRule(/(?:^|[\\s\\{\\[\\(\\<'\"\\u2018\\u201C])(')$/, \"‘\");\n// :: InputRule “Smart” closing single quotes.\nvar closeSingleQuote = new InputRule(/'$/, \"’\");\n\n// :: [InputRule] Smart-quote related input rules.\nvar smartQuotes = [openDoubleQuote, closeDoubleQuote, openSingleQuote, closeSingleQuote];\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>, ?([string], Node) → bool) → InputRule\n// Build an input rule for automatically wrapping a textblock when a\n// given string is typed. The `regexp` argument is\n// directly passed through to the `InputRule` constructor. You'll\n// probably want the regexp to start with `^`, so that the pattern can\n// only occur at the start of a textblock.\n//\n// `nodeType` is the type of node to wrap in. If it needs attributes,\n// you can either pass them directly, or pass a function that will\n// compute them from the regular expression match.\n//\n// By default, if there's a node with the same type above the newly\n// wrapped node, the rule will try to [join](#transform.Transform.join) those\n// two nodes. You can pass a join predicate, which takes a regular\n// expression match and the node before the wrapped node, and can\n// return a boolean to indicate whether a join should happen.\nfunction wrappingInputRule(regexp, nodeType, getAttrs, joinPredicate) {\n  return new InputRule(regexp, function (state, match, start, end) {\n    var attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    var tr = state.tr.delete(start, end);\n    var $start = tr.doc.resolve(start), range = $start.blockRange(), wrapping = range && findWrapping(range, nodeType, attrs);\n    if (!wrapping) { return null }\n    tr.wrap(range, wrapping);\n    var before = tr.doc.resolve(start - 1).nodeBefore;\n    if (before && before.type == nodeType && canJoin(tr.doc, start - 1) &&\n        (!joinPredicate || joinPredicate(match, before)))\n      { tr.join(start - 1); }\n    return tr\n  })\n}\n\n// :: (RegExp, NodeType, ?union<Object, ([string]) → ?Object>) → InputRule\n// Build an input rule that changes the type of a textblock when the\n// matched text is typed into it. You'll usually want to start your\n// regexp with `^` to that it is only matched at the start of a\n// textblock. The optional `getAttrs` parameter can be used to compute\n// the new node's attributes, and works the same as in the\n// `wrappingInputRule` function.\nfunction textblockTypeInputRule(regexp, nodeType, getAttrs) {\n  return new InputRule(regexp, function (state, match, start, end) {\n    var $start = state.doc.resolve(start);\n    var attrs = getAttrs instanceof Function ? getAttrs(match) : getAttrs;\n    if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), nodeType)) { return null }\n    return state.tr\n      .delete(start, end)\n      .setBlockType(start, start, nodeType, attrs)\n  })\n}\n\nexport { InputRule, closeDoubleQuote, closeSingleQuote, ellipsis, emDash, inputRules, openDoubleQuote, openSingleQuote, smartQuotes, textblockTypeInputRule, undoInputRule, wrappingInputRule };\n","import { keyName, base } from 'w3c-keyname';\nimport { Plugin } from 'prosemirror-state';\n\n// declare global: navigator\n\nvar mac = typeof navigator != \"undefined\" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : false;\n\nfunction normalizeKeyName(name) {\n  var parts = name.split(/-(?!$)/), result = parts[parts.length - 1];\n  if (result == \"Space\") { result = \" \"; }\n  var alt, ctrl, shift, meta;\n  for (var i = 0; i < parts.length - 1; i++) {\n    var mod = parts[i];\n    if (/^(cmd|meta|m)$/i.test(mod)) { meta = true; }\n    else if (/^a(lt)?$/i.test(mod)) { alt = true; }\n    else if (/^(c|ctrl|control)$/i.test(mod)) { ctrl = true; }\n    else if (/^s(hift)?$/i.test(mod)) { shift = true; }\n    else if (/^mod$/i.test(mod)) { if (mac) { meta = true; } else { ctrl = true; } }\n    else { throw new Error(\"Unrecognized modifier name: \" + mod) }\n  }\n  if (alt) { result = \"Alt-\" + result; }\n  if (ctrl) { result = \"Ctrl-\" + result; }\n  if (meta) { result = \"Meta-\" + result; }\n  if (shift) { result = \"Shift-\" + result; }\n  return result\n}\n\nfunction normalize(map) {\n  var copy = Object.create(null);\n  for (var prop in map) { copy[normalizeKeyName(prop)] = map[prop]; }\n  return copy\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) { name = \"Alt-\" + name; }\n  if (event.ctrlKey) { name = \"Ctrl-\" + name; }\n  if (event.metaKey) { name = \"Meta-\" + name; }\n  if (shift !== false && event.shiftKey) { name = \"Shift-\" + name; }\n  return name\n}\n\n// :: (Object) → Plugin\n// Create a keymap plugin for the given set of bindings.\n//\n// Bindings should map key names to [command](#commands)-style\n// functions, which will be called with `(EditorState, dispatch,\n// EditorView)` arguments, and should return true when they've handled\n// the key. Note that the view argument isn't part of the command\n// protocol, but can be used as an escape hatch if a binding needs to\n// directly interact with the UI.\n//\n// Key names may be strings like `\"Shift-Ctrl-Enter\"`—a key\n// identifier prefixed with zero or more modifiers. Key identifiers\n// are based on the strings that can appear in\n// [`KeyEvent.key`](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key).\n// Use lowercase letters to refer to letter keys (or uppercase letters\n// if you want shift to be held). You may use `\"Space\"` as an alias\n// for the `\" \"` name.\n//\n// Modifiers can be given in any order. `Shift-` (or `s-`), `Alt-` (or\n// `a-`), `Ctrl-` (or `c-` or `Control-`) and `Cmd-` (or `m-` or\n// `Meta-`) are recognized. For characters that are created by holding\n// shift, the `Shift-` prefix is implied, and should not be added\n// explicitly.\n//\n// You can use `Mod-` as a shorthand for `Cmd-` on Mac and `Ctrl-` on\n// other platforms.\n//\n// You can add multiple keymap plugins to an editor. The order in\n// which they appear determines their precedence (the ones early in\n// the array get to dispatch first).\nfunction keymap(bindings) {\n  return new Plugin({props: {handleKeyDown: keydownHandler(bindings)}})\n}\n\n// :: (Object) → (view: EditorView, event: dom.Event) → bool\n// Given a set of bindings (using the same format as\n// [`keymap`](#keymap.keymap)), return a [keydown\n// handler](#view.EditorProps.handleKeyDown) that handles them.\nfunction keydownHandler(bindings) {\n  var map = normalize(bindings);\n  return function(view, event) {\n    var name = keyName(event), isChar = name.length == 1 && name != \" \", baseName;\n    var direct = map[modifiers(name, event, !isChar)];\n    if (direct && direct(view.state, view.dispatch, view)) { return true }\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey || name.charCodeAt(0) > 127) &&\n        (baseName = base[event.keyCode]) && baseName != name) {\n      // Try falling back to the keyCode when there's a modifier\n      // active or the character produced isn't ASCII, and our table\n      // produces a different name from the the keyCode. See #668,\n      // #1060\n      var fromCode = map[modifiers(baseName, event, true)];\n      if (fromCode && fromCode(view.state, view.dispatch, view)) { return true }\n    } else if (isChar && event.shiftKey) {\n      // Otherwise, if shift is active, also try the binding with the\n      // Shift- prefix enabled. See #997\n      var withShift = map[modifiers(name, event, true)];\n      if (withShift && withShift(view.state, view.dispatch, view)) { return true }\n    }\n    return false\n  }\n}\n\nexport { keydownHandler, keymap };\n","import OrderedMap from 'orderedmap';\n\nfunction findDiffStart(a, b, pos) {\n  for (var i = 0;; i++) {\n    if (i == a.childCount || i == b.childCount)\n      { return a.childCount == b.childCount ? null : pos }\n\n    var childA = a.child(i), childB = b.child(i);\n    if (childA == childB) { pos += childA.nodeSize; continue }\n\n    if (!childA.sameMarkup(childB)) { return pos }\n\n    if (childA.isText && childA.text != childB.text) {\n      for (var j = 0; childA.text[j] == childB.text[j]; j++)\n        { pos++; }\n      return pos\n    }\n    if (childA.content.size || childB.content.size) {\n      var inner = findDiffStart(childA.content, childB.content, pos + 1);\n      if (inner != null) { return inner }\n    }\n    pos += childA.nodeSize;\n  }\n}\n\nfunction findDiffEnd(a, b, posA, posB) {\n  for (var iA = a.childCount, iB = b.childCount;;) {\n    if (iA == 0 || iB == 0)\n      { return iA == iB ? null : {a: posA, b: posB} }\n\n    var childA = a.child(--iA), childB = b.child(--iB), size = childA.nodeSize;\n    if (childA == childB) {\n      posA -= size; posB -= size;\n      continue\n    }\n\n    if (!childA.sameMarkup(childB)) { return {a: posA, b: posB} }\n\n    if (childA.isText && childA.text != childB.text) {\n      var same = 0, minSize = Math.min(childA.text.length, childB.text.length);\n      while (same < minSize && childA.text[childA.text.length - same - 1] == childB.text[childB.text.length - same - 1]) {\n        same++; posA--; posB--;\n      }\n      return {a: posA, b: posB}\n    }\n    if (childA.content.size || childB.content.size) {\n      var inner = findDiffEnd(childA.content, childB.content, posA - 1, posB - 1);\n      if (inner) { return inner }\n    }\n    posA -= size; posB -= size;\n  }\n}\n\n// ::- A fragment represents a node's collection of child nodes.\n//\n// Like nodes, fragments are persistent data structures, and you\n// should not mutate them or their content. Rather, you create new\n// instances whenever needed. The API tries to make this easy.\nvar Fragment = function Fragment(content, size) {\n  this.content = content;\n  // :: number\n  // The size of the fragment, which is the total of the size of its\n  // content nodes.\n  this.size = size || 0;\n  if (size == null) { for (var i = 0; i < content.length; i++)\n    { this.size += content[i].nodeSize; } }\n};\n\nvar prototypeAccessors = { firstChild: { configurable: true },lastChild: { configurable: true },childCount: { configurable: true } };\n\n// :: (number, number, (node: Node, start: number, parent: Node, index: number) → ?bool, ?number)\n// Invoke a callback for all descendant nodes between the given two\n// positions (relative to start of this fragment). Doesn't descend\n// into a node when the callback returns `false`.\nFragment.prototype.nodesBetween = function nodesBetween (from, to, f, nodeStart, parent) {\n    if ( nodeStart === void 0 ) nodeStart = 0;\n\n  for (var i = 0, pos = 0; pos < to; i++) {\n    var child = this.content[i], end = pos + child.nodeSize;\n    if (end > from && f(child, nodeStart + pos, parent, i) !== false && child.content.size) {\n      var start = pos + 1;\n      child.nodesBetween(Math.max(0, from - start),\n                         Math.min(child.content.size, to - start),\n                         f, nodeStart + start);\n    }\n    pos = end;\n  }\n};\n\n// :: ((node: Node, pos: number, parent: Node) → ?bool)\n// Call the given callback for every descendant node. The callback\n// may return `false` to prevent traversal of a given node's children.\nFragment.prototype.descendants = function descendants (f) {\n  this.nodesBetween(0, this.size, f);\n};\n\n// :: (number, number, ?string, ?union<string, (leafNode: Node) → string>) → string\n// Extract the text between `from` and `to`. See the same method on\n// [`Node`](#model.Node.textBetween).\nFragment.prototype.textBetween = function textBetween (from, to, blockSeparator, leafText) {\n  var text = \"\", separated = true;\n  this.nodesBetween(from, to, function (node, pos) {\n    if (node.isText) {\n      text += node.text.slice(Math.max(from, pos) - pos, to - pos);\n      separated = !blockSeparator;\n    } else if (node.isLeaf && leafText) {\n      text += typeof leafText === 'function' ? leafText(node): leafText;\n      separated = !blockSeparator;\n    } else if (!separated && node.isBlock) {\n      text += blockSeparator;\n      separated = true;\n    }\n  }, 0);\n  return text\n};\n\n// :: (Fragment) → Fragment\n// Create a new fragment containing the combined content of this\n// fragment and the other.\nFragment.prototype.append = function append (other) {\n  if (!other.size) { return this }\n  if (!this.size) { return other }\n  var last = this.lastChild, first = other.firstChild, content = this.content.slice(), i = 0;\n  if (last.isText && last.sameMarkup(first)) {\n    content[content.length - 1] = last.withText(last.text + first.text);\n    i = 1;\n  }\n  for (; i < other.content.length; i++) { content.push(other.content[i]); }\n  return new Fragment(content, this.size + other.size)\n};\n\n// :: (number, ?number) → Fragment\n// Cut out the sub-fragment between the two given positions.\nFragment.prototype.cut = function cut (from, to) {\n  if (to == null) { to = this.size; }\n  if (from == 0 && to == this.size) { return this }\n  var result = [], size = 0;\n  if (to > from) { for (var i = 0, pos = 0; pos < to; i++) {\n    var child = this.content[i], end = pos + child.nodeSize;\n    if (end > from) {\n      if (pos < from || end > to) {\n        if (child.isText)\n          { child = child.cut(Math.max(0, from - pos), Math.min(child.text.length, to - pos)); }\n        else\n          { child = child.cut(Math.max(0, from - pos - 1), Math.min(child.content.size, to - pos - 1)); }\n      }\n      result.push(child);\n      size += child.nodeSize;\n    }\n    pos = end;\n  } }\n  return new Fragment(result, size)\n};\n\nFragment.prototype.cutByIndex = function cutByIndex (from, to) {\n  if (from == to) { return Fragment.empty }\n  if (from == 0 && to == this.content.length) { return this }\n  return new Fragment(this.content.slice(from, to))\n};\n\n// :: (number, Node) → Fragment\n// Create a new fragment in which the node at the given index is\n// replaced by the given node.\nFragment.prototype.replaceChild = function replaceChild (index, node) {\n  var current = this.content[index];\n  if (current == node) { return this }\n  var copy = this.content.slice();\n  var size = this.size + node.nodeSize - current.nodeSize;\n  copy[index] = node;\n  return new Fragment(copy, size)\n};\n\n// : (Node) → Fragment\n// Create a new fragment by prepending the given node to this\n// fragment.\nFragment.prototype.addToStart = function addToStart (node) {\n  return new Fragment([node].concat(this.content), this.size + node.nodeSize)\n};\n\n// : (Node) → Fragment\n// Create a new fragment by appending the given node to this\n// fragment.\nFragment.prototype.addToEnd = function addToEnd (node) {\n  return new Fragment(this.content.concat(node), this.size + node.nodeSize)\n};\n\n// :: (Fragment) → bool\n// Compare this fragment to another one.\nFragment.prototype.eq = function eq (other) {\n  if (this.content.length != other.content.length) { return false }\n  for (var i = 0; i < this.content.length; i++)\n    { if (!this.content[i].eq(other.content[i])) { return false } }\n  return true\n};\n\n// :: ?Node\n// The first child of the fragment, or `null` if it is empty.\nprototypeAccessors.firstChild.get = function () { return this.content.length ? this.content[0] : null };\n\n// :: ?Node\n// The last child of the fragment, or `null` if it is empty.\nprototypeAccessors.lastChild.get = function () { return this.content.length ? this.content[this.content.length - 1] : null };\n\n// :: number\n// The number of child nodes in this fragment.\nprototypeAccessors.childCount.get = function () { return this.content.length };\n\n// :: (number) → Node\n// Get the child node at the given index. Raise an error when the\n// index is out of range.\nFragment.prototype.child = function child (index) {\n  var found = this.content[index];\n  if (!found) { throw new RangeError(\"Index \" + index + \" out of range for \" + this) }\n  return found\n};\n\n// :: (number) → ?Node\n// Get the child node at the given index, if it exists.\nFragment.prototype.maybeChild = function maybeChild (index) {\n  return this.content[index]\n};\n\n// :: ((node: Node, offset: number, index: number))\n// Call `f` for every child node, passing the node, its offset\n// into this parent node, and its index.\nFragment.prototype.forEach = function forEach (f) {\n  for (var i = 0, p = 0; i < this.content.length; i++) {\n    var child = this.content[i];\n    f(child, p, i);\n    p += child.nodeSize;\n  }\n};\n\n// :: (Fragment) → ?number\n// Find the first position at which this fragment and another\n// fragment differ, or `null` if they are the same.\nFragment.prototype.findDiffStart = function findDiffStart$1 (other, pos) {\n    if ( pos === void 0 ) pos = 0;\n\n  return findDiffStart(this, other, pos)\n};\n\n// :: (Fragment) → ?{a: number, b: number}\n// Find the first position, searching from the end, at which this\n// fragment and the given fragment differ, or `null` if they are the\n// same. Since this position will not be the same in both nodes, an\n// object with two separate positions is returned.\nFragment.prototype.findDiffEnd = function findDiffEnd$1 (other, pos, otherPos) {\n    if ( pos === void 0 ) pos = this.size;\n    if ( otherPos === void 0 ) otherPos = other.size;\n\n  return findDiffEnd(this, other, pos, otherPos)\n};\n\n// : (number, ?number) → {index: number, offset: number}\n// Find the index and inner offset corresponding to a given relative\n// position in this fragment. The result object will be reused\n// (overwritten) the next time the function is called. (Not public.)\nFragment.prototype.findIndex = function findIndex (pos, round) {\n    if ( round === void 0 ) round = -1;\n\n  if (pos == 0) { return retIndex(0, pos) }\n  if (pos == this.size) { return retIndex(this.content.length, pos) }\n  if (pos > this.size || pos < 0) { throw new RangeError((\"Position \" + pos + \" outside of fragment (\" + (this) + \")\")) }\n  for (var i = 0, curPos = 0;; i++) {\n    var cur = this.child(i), end = curPos + cur.nodeSize;\n    if (end >= pos) {\n      if (end == pos || round > 0) { return retIndex(i + 1, end) }\n      return retIndex(i, curPos)\n    }\n    curPos = end;\n  }\n};\n\n// :: () → string\n// Return a debugging string that describes this fragment.\nFragment.prototype.toString = function toString () { return \"<\" + this.toStringInner() + \">\" };\n\nFragment.prototype.toStringInner = function toStringInner () { return this.content.join(\", \") };\n\n// :: () → ?Object\n// Create a JSON-serializeable representation of this fragment.\nFragment.prototype.toJSON = function toJSON () {\n  return this.content.length ? this.content.map(function (n) { return n.toJSON(); }) : null\n};\n\n// :: (Schema, ?Object) → Fragment\n// Deserialize a fragment from its JSON representation.\nFragment.fromJSON = function fromJSON (schema, value) {\n  if (!value) { return Fragment.empty }\n  if (!Array.isArray(value)) { throw new RangeError(\"Invalid input for Fragment.fromJSON\") }\n  return new Fragment(value.map(schema.nodeFromJSON))\n};\n\n// :: ([Node]) → Fragment\n// Build a fragment from an array of nodes. Ensures that adjacent\n// text nodes with the same marks are joined together.\nFragment.fromArray = function fromArray (array) {\n  if (!array.length) { return Fragment.empty }\n  var joined, size = 0;\n  for (var i = 0; i < array.length; i++) {\n    var node = array[i];\n    size += node.nodeSize;\n    if (i && node.isText && array[i - 1].sameMarkup(node)) {\n      if (!joined) { joined = array.slice(0, i); }\n      joined[joined.length - 1] = node.withText(joined[joined.length - 1].text + node.text);\n    } else if (joined) {\n      joined.push(node);\n    }\n  }\n  return new Fragment(joined || array, size)\n};\n\n// :: (?union<Fragment, Node, [Node]>) → Fragment\n// Create a fragment from something that can be interpreted as a set\n// of nodes. For `null`, it returns the empty fragment. For a\n// fragment, the fragment itself. For a node or array of nodes, a\n// fragment containing those nodes.\nFragment.from = function from (nodes) {\n  if (!nodes) { return Fragment.empty }\n  if (nodes instanceof Fragment) { return nodes }\n  if (Array.isArray(nodes)) { return this.fromArray(nodes) }\n  if (nodes.attrs) { return new Fragment([nodes], nodes.nodeSize) }\n  throw new RangeError(\"Can not convert \" + nodes + \" to a Fragment\" +\n                       (nodes.nodesBetween ? \" (looks like multiple versions of prosemirror-model were loaded)\" : \"\"))\n};\n\nObject.defineProperties( Fragment.prototype, prototypeAccessors );\n\nvar found = {index: 0, offset: 0};\nfunction retIndex(index, offset) {\n  found.index = index;\n  found.offset = offset;\n  return found\n}\n\n// :: Fragment\n// An empty fragment. Intended to be reused whenever a node doesn't\n// contain anything (rather than allocating a new empty fragment for\n// each leaf node).\nFragment.empty = new Fragment([], 0);\n\nfunction compareDeep(a, b) {\n  if (a === b) { return true }\n  if (!(a && typeof a == \"object\") ||\n      !(b && typeof b == \"object\")) { return false }\n  var array = Array.isArray(a);\n  if (Array.isArray(b) != array) { return false }\n  if (array) {\n    if (a.length != b.length) { return false }\n    for (var i = 0; i < a.length; i++) { if (!compareDeep(a[i], b[i])) { return false } }\n  } else {\n    for (var p in a) { if (!(p in b) || !compareDeep(a[p], b[p])) { return false } }\n    for (var p$1 in b) { if (!(p$1 in a)) { return false } }\n  }\n  return true\n}\n\n// ::- A mark is a piece of information that can be attached to a node,\n// such as it being emphasized, in code font, or a link. It has a type\n// and optionally a set of attributes that provide further information\n// (such as the target of the link). Marks are created through a\n// `Schema`, which controls which types exist and which\n// attributes they have.\nvar Mark = function Mark(type, attrs) {\n  // :: MarkType\n  // The type of this mark.\n  this.type = type;\n  // :: Object\n  // The attributes associated with this mark.\n  this.attrs = attrs;\n};\n\n// :: ([Mark]) → [Mark]\n// Given a set of marks, create a new set which contains this one as\n// well, in the right position. If this mark is already in the set,\n// the set itself is returned. If any marks that are set to be\n// [exclusive](#model.MarkSpec.excludes) with this mark are present,\n// those are replaced by this one.\nMark.prototype.addToSet = function addToSet (set) {\n  var copy, placed = false;\n  for (var i = 0; i < set.length; i++) {\n    var other = set[i];\n    if (this.eq(other)) { return set }\n    if (this.type.excludes(other.type)) {\n      if (!copy) { copy = set.slice(0, i); }\n    } else if (other.type.excludes(this.type)) {\n      return set\n    } else {\n      if (!placed && other.type.rank > this.type.rank) {\n        if (!copy) { copy = set.slice(0, i); }\n        copy.push(this);\n        placed = true;\n      }\n      if (copy) { copy.push(other); }\n    }\n  }\n  if (!copy) { copy = set.slice(); }\n  if (!placed) { copy.push(this); }\n  return copy\n};\n\n// :: ([Mark]) → [Mark]\n// Remove this mark from the given set, returning a new set. If this\n// mark is not in the set, the set itself is returned.\nMark.prototype.removeFromSet = function removeFromSet (set) {\n  for (var i = 0; i < set.length; i++)\n    { if (this.eq(set[i]))\n      { return set.slice(0, i).concat(set.slice(i + 1)) } }\n  return set\n};\n\n// :: ([Mark]) → bool\n// Test whether this mark is in the given set of marks.\nMark.prototype.isInSet = function isInSet (set) {\n  for (var i = 0; i < set.length; i++)\n    { if (this.eq(set[i])) { return true } }\n  return false\n};\n\n// :: (Mark) → bool\n// Test whether this mark has the same type and attributes as\n// another mark.\nMark.prototype.eq = function eq (other) {\n  return this == other ||\n    (this.type == other.type && compareDeep(this.attrs, other.attrs))\n};\n\n// :: () → Object\n// Convert this mark to a JSON-serializeable representation.\nMark.prototype.toJSON = function toJSON () {\n  var obj = {type: this.type.name};\n  for (var _ in this.attrs) {\n    obj.attrs = this.attrs;\n    break\n  }\n  return obj\n};\n\n// :: (Schema, Object) → Mark\nMark.fromJSON = function fromJSON (schema, json) {\n  if (!json) { throw new RangeError(\"Invalid input for Mark.fromJSON\") }\n  var type = schema.marks[json.type];\n  if (!type) { throw new RangeError((\"There is no mark type \" + (json.type) + \" in this schema\")) }\n  return type.create(json.attrs)\n};\n\n// :: ([Mark], [Mark]) → bool\n// Test whether two sets of marks are identical.\nMark.sameSet = function sameSet (a, b) {\n  if (a == b) { return true }\n  if (a.length != b.length) { return false }\n  for (var i = 0; i < a.length; i++)\n    { if (!a[i].eq(b[i])) { return false } }\n  return true\n};\n\n// :: (?union<Mark, [Mark]>) → [Mark]\n// Create a properly sorted mark set from null, a single mark, or an\n// unsorted array of marks.\nMark.setFrom = function setFrom (marks) {\n  if (!marks || marks.length == 0) { return Mark.none }\n  if (marks instanceof Mark) { return [marks] }\n  var copy = marks.slice();\n  copy.sort(function (a, b) { return a.type.rank - b.type.rank; });\n  return copy\n};\n\n// :: [Mark] The empty set of marks.\nMark.none = [];\n\n// ReplaceError:: class extends Error\n// Error type raised by [`Node.replace`](#model.Node.replace) when\n// given an invalid replacement.\n\nfunction ReplaceError(message) {\n  var err = Error.call(this, message);\n  err.__proto__ = ReplaceError.prototype;\n  return err\n}\n\nReplaceError.prototype = Object.create(Error.prototype);\nReplaceError.prototype.constructor = ReplaceError;\nReplaceError.prototype.name = \"ReplaceError\";\n\n// ::- A slice represents a piece cut out of a larger document. It\n// stores not only a fragment, but also the depth up to which nodes on\n// both side are ‘open’ (cut through).\nvar Slice = function Slice(content, openStart, openEnd) {\n  // :: Fragment The slice's content.\n  this.content = content;\n  // :: number The open depth at the start.\n  this.openStart = openStart;\n  // :: number The open depth at the end.\n  this.openEnd = openEnd;\n};\n\nvar prototypeAccessors$1 = { size: { configurable: true } };\n\n// :: number\n// The size this slice would add when inserted into a document.\nprototypeAccessors$1.size.get = function () {\n  return this.content.size - this.openStart - this.openEnd\n};\n\nSlice.prototype.insertAt = function insertAt (pos, fragment) {\n  var content = insertInto(this.content, pos + this.openStart, fragment, null);\n  return content && new Slice(content, this.openStart, this.openEnd)\n};\n\nSlice.prototype.removeBetween = function removeBetween (from, to) {\n  return new Slice(removeRange(this.content, from + this.openStart, to + this.openStart), this.openStart, this.openEnd)\n};\n\n// :: (Slice) → bool\n// Tests whether this slice is equal to another slice.\nSlice.prototype.eq = function eq (other) {\n  return this.content.eq(other.content) && this.openStart == other.openStart && this.openEnd == other.openEnd\n};\n\nSlice.prototype.toString = function toString () {\n  return this.content + \"(\" + this.openStart + \",\" + this.openEnd + \")\"\n};\n\n// :: () → ?Object\n// Convert a slice to a JSON-serializable representation.\nSlice.prototype.toJSON = function toJSON () {\n  if (!this.content.size) { return null }\n  var json = {content: this.content.toJSON()};\n  if (this.openStart > 0) { json.openStart = this.openStart; }\n  if (this.openEnd > 0) { json.openEnd = this.openEnd; }\n  return json\n};\n\n// :: (Schema, ?Object) → Slice\n// Deserialize a slice from its JSON representation.\nSlice.fromJSON = function fromJSON (schema, json) {\n  if (!json) { return Slice.empty }\n  var openStart = json.openStart || 0, openEnd = json.openEnd || 0;\n  if (typeof openStart != \"number\" || typeof openEnd != \"number\")\n    { throw new RangeError(\"Invalid input for Slice.fromJSON\") }\n  return new Slice(Fragment.fromJSON(schema, json.content), openStart, openEnd)\n};\n\n// :: (Fragment, ?bool) → Slice\n// Create a slice from a fragment by taking the maximum possible\n// open value on both side of the fragment.\nSlice.maxOpen = function maxOpen (fragment, openIsolating) {\n    if ( openIsolating === void 0 ) openIsolating=true;\n\n  var openStart = 0, openEnd = 0;\n  for (var n = fragment.firstChild; n && !n.isLeaf && (openIsolating || !n.type.spec.isolating); n = n.firstChild) { openStart++; }\n  for (var n$1 = fragment.lastChild; n$1 && !n$1.isLeaf && (openIsolating || !n$1.type.spec.isolating); n$1 = n$1.lastChild) { openEnd++; }\n  return new Slice(fragment, openStart, openEnd)\n};\n\nObject.defineProperties( Slice.prototype, prototypeAccessors$1 );\n\nfunction removeRange(content, from, to) {\n  var ref = content.findIndex(from);\n  var index = ref.index;\n  var offset = ref.offset;\n  var child = content.maybeChild(index);\n  var ref$1 = content.findIndex(to);\n  var indexTo = ref$1.index;\n  var offsetTo = ref$1.offset;\n  if (offset == from || child.isText) {\n    if (offsetTo != to && !content.child(indexTo).isText) { throw new RangeError(\"Removing non-flat range\") }\n    return content.cut(0, from).append(content.cut(to))\n  }\n  if (index != indexTo) { throw new RangeError(\"Removing non-flat range\") }\n  return content.replaceChild(index, child.copy(removeRange(child.content, from - offset - 1, to - offset - 1)))\n}\n\nfunction insertInto(content, dist, insert, parent) {\n  var ref = content.findIndex(dist);\n  var index = ref.index;\n  var offset = ref.offset;\n  var child = content.maybeChild(index);\n  if (offset == dist || child.isText) {\n    if (parent && !parent.canReplace(index, index, insert)) { return null }\n    return content.cut(0, dist).append(insert).append(content.cut(dist))\n  }\n  var inner = insertInto(child.content, dist - offset - 1, insert);\n  return inner && content.replaceChild(index, child.copy(inner))\n}\n\n// :: Slice\n// The empty slice.\nSlice.empty = new Slice(Fragment.empty, 0, 0);\n\nfunction replace($from, $to, slice) {\n  if (slice.openStart > $from.depth)\n    { throw new ReplaceError(\"Inserted content deeper than insertion position\") }\n  if ($from.depth - slice.openStart != $to.depth - slice.openEnd)\n    { throw new ReplaceError(\"Inconsistent open depths\") }\n  return replaceOuter($from, $to, slice, 0)\n}\n\nfunction replaceOuter($from, $to, slice, depth) {\n  var index = $from.index(depth), node = $from.node(depth);\n  if (index == $to.index(depth) && depth < $from.depth - slice.openStart) {\n    var inner = replaceOuter($from, $to, slice, depth + 1);\n    return node.copy(node.content.replaceChild(index, inner))\n  } else if (!slice.content.size) {\n    return close(node, replaceTwoWay($from, $to, depth))\n  } else if (!slice.openStart && !slice.openEnd && $from.depth == depth && $to.depth == depth) { // Simple, flat case\n    var parent = $from.parent, content = parent.content;\n    return close(parent, content.cut(0, $from.parentOffset).append(slice.content).append(content.cut($to.parentOffset)))\n  } else {\n    var ref = prepareSliceForReplace(slice, $from);\n    var start = ref.start;\n    var end = ref.end;\n    return close(node, replaceThreeWay($from, start, end, $to, depth))\n  }\n}\n\nfunction checkJoin(main, sub) {\n  if (!sub.type.compatibleContent(main.type))\n    { throw new ReplaceError(\"Cannot join \" + sub.type.name + \" onto \" + main.type.name) }\n}\n\nfunction joinable($before, $after, depth) {\n  var node = $before.node(depth);\n  checkJoin(node, $after.node(depth));\n  return node\n}\n\nfunction addNode(child, target) {\n  var last = target.length - 1;\n  if (last >= 0 && child.isText && child.sameMarkup(target[last]))\n    { target[last] = child.withText(target[last].text + child.text); }\n  else\n    { target.push(child); }\n}\n\nfunction addRange($start, $end, depth, target) {\n  var node = ($end || $start).node(depth);\n  var startIndex = 0, endIndex = $end ? $end.index(depth) : node.childCount;\n  if ($start) {\n    startIndex = $start.index(depth);\n    if ($start.depth > depth) {\n      startIndex++;\n    } else if ($start.textOffset) {\n      addNode($start.nodeAfter, target);\n      startIndex++;\n    }\n  }\n  for (var i = startIndex; i < endIndex; i++) { addNode(node.child(i), target); }\n  if ($end && $end.depth == depth && $end.textOffset)\n    { addNode($end.nodeBefore, target); }\n}\n\nfunction close(node, content) {\n  if (!node.type.validContent(content))\n    { throw new ReplaceError(\"Invalid content for node \" + node.type.name) }\n  return node.copy(content)\n}\n\nfunction replaceThreeWay($from, $start, $end, $to, depth) {\n  var openStart = $from.depth > depth && joinable($from, $start, depth + 1);\n  var openEnd = $to.depth > depth && joinable($end, $to, depth + 1);\n\n  var content = [];\n  addRange(null, $from, depth, content);\n  if (openStart && openEnd && $start.index(depth) == $end.index(depth)) {\n    checkJoin(openStart, openEnd);\n    addNode(close(openStart, replaceThreeWay($from, $start, $end, $to, depth + 1)), content);\n  } else {\n    if (openStart)\n      { addNode(close(openStart, replaceTwoWay($from, $start, depth + 1)), content); }\n    addRange($start, $end, depth, content);\n    if (openEnd)\n      { addNode(close(openEnd, replaceTwoWay($end, $to, depth + 1)), content); }\n  }\n  addRange($to, null, depth, content);\n  return new Fragment(content)\n}\n\nfunction replaceTwoWay($from, $to, depth) {\n  var content = [];\n  addRange(null, $from, depth, content);\n  if ($from.depth > depth) {\n    var type = joinable($from, $to, depth + 1);\n    addNode(close(type, replaceTwoWay($from, $to, depth + 1)), content);\n  }\n  addRange($to, null, depth, content);\n  return new Fragment(content)\n}\n\nfunction prepareSliceForReplace(slice, $along) {\n  var extra = $along.depth - slice.openStart, parent = $along.node(extra);\n  var node = parent.copy(slice.content);\n  for (var i = extra - 1; i >= 0; i--)\n    { node = $along.node(i).copy(Fragment.from(node)); }\n  return {start: node.resolveNoCache(slice.openStart + extra),\n          end: node.resolveNoCache(node.content.size - slice.openEnd - extra)}\n}\n\n// ::- You can [_resolve_](#model.Node.resolve) a position to get more\n// information about it. Objects of this class represent such a\n// resolved position, providing various pieces of context information,\n// and some helper methods.\n//\n// Throughout this interface, methods that take an optional `depth`\n// parameter will interpret undefined as `this.depth` and negative\n// numbers as `this.depth + value`.\nvar ResolvedPos = function ResolvedPos(pos, path, parentOffset) {\n  // :: number The position that was resolved.\n  this.pos = pos;\n  this.path = path;\n  // :: number\n  // The number of levels the parent node is from the root. If this\n  // position points directly into the root node, it is 0. If it\n  // points into a top-level paragraph, 1, and so on.\n  this.depth = path.length / 3 - 1;\n  // :: number The offset this position has into its parent node.\n  this.parentOffset = parentOffset;\n};\n\nvar prototypeAccessors$2 = { parent: { configurable: true },doc: { configurable: true },textOffset: { configurable: true },nodeAfter: { configurable: true },nodeBefore: { configurable: true } };\n\nResolvedPos.prototype.resolveDepth = function resolveDepth (val) {\n  if (val == null) { return this.depth }\n  if (val < 0) { return this.depth + val }\n  return val\n};\n\n// :: Node\n// The parent node that the position points into. Note that even if\n// a position points into a text node, that node is not considered\n// the parent—text nodes are ‘flat’ in this model, and have no content.\nprototypeAccessors$2.parent.get = function () { return this.node(this.depth) };\n\n// :: Node\n// The root node in which the position was resolved.\nprototypeAccessors$2.doc.get = function () { return this.node(0) };\n\n// :: (?number) → Node\n// The ancestor node at the given level. `p.node(p.depth)` is the\n// same as `p.parent`.\nResolvedPos.prototype.node = function node (depth) { return this.path[this.resolveDepth(depth) * 3] };\n\n// :: (?number) → number\n// The index into the ancestor at the given level. If this points at\n// the 3rd node in the 2nd paragraph on the top level, for example,\n// `p.index(0)` is 1 and `p.index(1)` is 2.\nResolvedPos.prototype.index = function index (depth) { return this.path[this.resolveDepth(depth) * 3 + 1] };\n\n// :: (?number) → number\n// The index pointing after this position into the ancestor at the\n// given level.\nResolvedPos.prototype.indexAfter = function indexAfter (depth) {\n  depth = this.resolveDepth(depth);\n  return this.index(depth) + (depth == this.depth && !this.textOffset ? 0 : 1)\n};\n\n// :: (?number) → number\n// The (absolute) position at the start of the node at the given\n// level.\nResolvedPos.prototype.start = function start (depth) {\n  depth = this.resolveDepth(depth);\n  return depth == 0 ? 0 : this.path[depth * 3 - 1] + 1\n};\n\n// :: (?number) → number\n// The (absolute) position at the end of the node at the given\n// level.\nResolvedPos.prototype.end = function end (depth) {\n  depth = this.resolveDepth(depth);\n  return this.start(depth) + this.node(depth).content.size\n};\n\n// :: (?number) → number\n// The (absolute) position directly before the wrapping node at the\n// given level, or, when `depth` is `this.depth + 1`, the original\n// position.\nResolvedPos.prototype.before = function before (depth) {\n  depth = this.resolveDepth(depth);\n  if (!depth) { throw new RangeError(\"There is no position before the top-level node\") }\n  return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1]\n};\n\n// :: (?number) → number\n// The (absolute) position directly after the wrapping node at the\n// given level, or the original position when `depth` is `this.depth + 1`.\nResolvedPos.prototype.after = function after (depth) {\n  depth = this.resolveDepth(depth);\n  if (!depth) { throw new RangeError(\"There is no position after the top-level node\") }\n  return depth == this.depth + 1 ? this.pos : this.path[depth * 3 - 1] + this.path[depth * 3].nodeSize\n};\n\n// :: number\n// When this position points into a text node, this returns the\n// distance between the position and the start of the text node.\n// Will be zero for positions that point between nodes.\nprototypeAccessors$2.textOffset.get = function () { return this.pos - this.path[this.path.length - 1] };\n\n// :: ?Node\n// Get the node directly after the position, if any. If the position\n// points into a text node, only the part of that node after the\n// position is returned.\nprototypeAccessors$2.nodeAfter.get = function () {\n  var parent = this.parent, index = this.index(this.depth);\n  if (index == parent.childCount) { return null }\n  var dOff = this.pos - this.path[this.path.length - 1], child = parent.child(index);\n  return dOff ? parent.child(index).cut(dOff) : child\n};\n\n// :: ?Node\n// Get the node directly before the position, if any. If the\n// position points into a text node, only the part of that node\n// before the position is returned.\nprototypeAccessors$2.nodeBefore.get = function () {\n  var index = this.index(this.depth);\n  var dOff = this.pos - this.path[this.path.length - 1];\n  if (dOff) { return this.parent.child(index).cut(0, dOff) }\n  return index == 0 ? null : this.parent.child(index - 1)\n};\n\n// :: (number, ?number) → number\n// Get the position at the given index in the parent node at the\n// given depth (which defaults to `this.depth`).\nResolvedPos.prototype.posAtIndex = function posAtIndex (index, depth) {\n  depth = this.resolveDepth(depth);\n  var node = this.path[depth * 3], pos = depth == 0 ? 0 : this.path[depth * 3 - 1] + 1;\n  for (var i = 0; i < index; i++) { pos += node.child(i).nodeSize; }\n  return pos\n};\n\n// :: () → [Mark]\n// Get the marks at this position, factoring in the surrounding\n// marks' [`inclusive`](#model.MarkSpec.inclusive) property. If the\n// position is at the start of a non-empty node, the marks of the\n// node after it (if any) are returned.\nResolvedPos.prototype.marks = function marks () {\n  var parent = this.parent, index = this.index();\n\n  // In an empty parent, return the empty array\n  if (parent.content.size == 0) { return Mark.none }\n\n  // When inside a text node, just return the text node's marks\n  if (this.textOffset) { return parent.child(index).marks }\n\n  var main = parent.maybeChild(index - 1), other = parent.maybeChild(index);\n  // If the `after` flag is true of there is no node before, make\n  // the node after this position the main reference.\n  if (!main) { var tmp = main; main = other; other = tmp; }\n\n  // Use all marks in the main node, except those that have\n  // `inclusive` set to false and are not present in the other node.\n  var marks = main.marks;\n  for (var i = 0; i < marks.length; i++)\n    { if (marks[i].type.spec.inclusive === false && (!other || !marks[i].isInSet(other.marks)))\n      { marks = marks[i--].removeFromSet(marks); } }\n\n  return marks\n};\n\n// :: (ResolvedPos) → ?[Mark]\n// Get the marks after the current position, if any, except those\n// that are non-inclusive and not present at position `$end`. This\n// is mostly useful for getting the set of marks to preserve after a\n// deletion. Will return `null` if this position is at the end of\n// its parent node or its parent node isn't a textblock (in which\n// case no marks should be preserved).\nResolvedPos.prototype.marksAcross = function marksAcross ($end) {\n  var after = this.parent.maybeChild(this.index());\n  if (!after || !after.isInline) { return null }\n\n  var marks = after.marks, next = $end.parent.maybeChild($end.index());\n  for (var i = 0; i < marks.length; i++)\n    { if (marks[i].type.spec.inclusive === false && (!next || !marks[i].isInSet(next.marks)))\n      { marks = marks[i--].removeFromSet(marks); } }\n  return marks\n};\n\n// :: (number) → number\n// The depth up to which this position and the given (non-resolved)\n// position share the same parent nodes.\nResolvedPos.prototype.sharedDepth = function sharedDepth (pos) {\n  for (var depth = this.depth; depth > 0; depth--)\n    { if (this.start(depth) <= pos && this.end(depth) >= pos) { return depth } }\n  return 0\n};\n\n// :: (?ResolvedPos, ?(Node) → bool) → ?NodeRange\n// Returns a range based on the place where this position and the\n// given position diverge around block content. If both point into\n// the same textblock, for example, a range around that textblock\n// will be returned. If they point into different blocks, the range\n// around those blocks in their shared ancestor is returned. You can\n// pass in an optional predicate that will be called with a parent\n// node to see if a range into that parent is acceptable.\nResolvedPos.prototype.blockRange = function blockRange (other, pred) {\n    if ( other === void 0 ) other = this;\n\n  if (other.pos < this.pos) { return other.blockRange(this) }\n  for (var d = this.depth - (this.parent.inlineContent || this.pos == other.pos ? 1 : 0); d >= 0; d--)\n    { if (other.pos <= this.end(d) && (!pred || pred(this.node(d))))\n      { return new NodeRange(this, other, d) } }\n};\n\n// :: (ResolvedPos) → bool\n// Query whether the given position shares the same parent node.\nResolvedPos.prototype.sameParent = function sameParent (other) {\n  return this.pos - this.parentOffset == other.pos - other.parentOffset\n};\n\n// :: (ResolvedPos) → ResolvedPos\n// Return the greater of this and the given position.\nResolvedPos.prototype.max = function max (other) {\n  return other.pos > this.pos ? other : this\n};\n\n// :: (ResolvedPos) → ResolvedPos\n// Return the smaller of this and the given position.\nResolvedPos.prototype.min = function min (other) {\n  return other.pos < this.pos ? other : this\n};\n\nResolvedPos.prototype.toString = function toString () {\n  var str = \"\";\n  for (var i = 1; i <= this.depth; i++)\n    { str += (str ? \"/\" : \"\") + this.node(i).type.name + \"_\" + this.index(i - 1); }\n  return str + \":\" + this.parentOffset\n};\n\nResolvedPos.resolve = function resolve (doc, pos) {\n  if (!(pos >= 0 && pos <= doc.content.size)) { throw new RangeError(\"Position \" + pos + \" out of range\") }\n  var path = [];\n  var start = 0, parentOffset = pos;\n  for (var node = doc;;) {\n    var ref = node.content.findIndex(parentOffset);\n      var index = ref.index;\n      var offset = ref.offset;\n    var rem = parentOffset - offset;\n    path.push(node, index, start + offset);\n    if (!rem) { break }\n    node = node.child(index);\n    if (node.isText) { break }\n    parentOffset = rem - 1;\n    start += offset + 1;\n  }\n  return new ResolvedPos(pos, path, parentOffset)\n};\n\nResolvedPos.resolveCached = function resolveCached (doc, pos) {\n  for (var i = 0; i < resolveCache.length; i++) {\n    var cached = resolveCache[i];\n    if (cached.pos == pos && cached.doc == doc) { return cached }\n  }\n  var result = resolveCache[resolveCachePos] = ResolvedPos.resolve(doc, pos);\n  resolveCachePos = (resolveCachePos + 1) % resolveCacheSize;\n  return result\n};\n\nObject.defineProperties( ResolvedPos.prototype, prototypeAccessors$2 );\n\nvar resolveCache = [], resolveCachePos = 0, resolveCacheSize = 12;\n\n// ::- Represents a flat range of content, i.e. one that starts and\n// ends in the same node.\nvar NodeRange = function NodeRange($from, $to, depth) {\n  // :: ResolvedPos A resolved position along the start of the\n  // content. May have a `depth` greater than this object's `depth`\n  // property, since these are the positions that were used to\n  // compute the range, not re-resolved positions directly at its\n  // boundaries.\n  this.$from = $from;\n  // :: ResolvedPos A position along the end of the content. See\n  // caveat for [`$from`](#model.NodeRange.$from).\n  this.$to = $to;\n  // :: number The depth of the node that this range points into.\n  this.depth = depth;\n};\n\nvar prototypeAccessors$1$1 = { start: { configurable: true },end: { configurable: true },parent: { configurable: true },startIndex: { configurable: true },endIndex: { configurable: true } };\n\n// :: number The position at the start of the range.\nprototypeAccessors$1$1.start.get = function () { return this.$from.before(this.depth + 1) };\n// :: number The position at the end of the range.\nprototypeAccessors$1$1.end.get = function () { return this.$to.after(this.depth + 1) };\n\n// :: Node The parent node that the range points into.\nprototypeAccessors$1$1.parent.get = function () { return this.$from.node(this.depth) };\n// :: number The start index of the range in the parent node.\nprototypeAccessors$1$1.startIndex.get = function () { return this.$from.index(this.depth) };\n// :: number The end index of the range in the parent node.\nprototypeAccessors$1$1.endIndex.get = function () { return this.$to.indexAfter(this.depth) };\n\nObject.defineProperties( NodeRange.prototype, prototypeAccessors$1$1 );\n\nvar emptyAttrs = Object.create(null);\n\n// ::- This class represents a node in the tree that makes up a\n// ProseMirror document. So a document is an instance of `Node`, with\n// children that are also instances of `Node`.\n//\n// Nodes are persistent data structures. Instead of changing them, you\n// create new ones with the content you want. Old ones keep pointing\n// at the old document shape. This is made cheaper by sharing\n// structure between the old and new data as much as possible, which a\n// tree shape like this (without back pointers) makes easy.\n//\n// **Do not** directly mutate the properties of a `Node` object. See\n// [the guide](/docs/guide/#doc) for more information.\nvar Node = function Node(type, attrs, content, marks) {\n  // :: NodeType\n  // The type of node that this is.\n  this.type = type;\n\n  // :: Object\n  // An object mapping attribute names to values. The kind of\n  // attributes allowed and required are\n  // [determined](#model.NodeSpec.attrs) by the node type.\n  this.attrs = attrs;\n\n  // :: Fragment\n  // A container holding the node's children.\n  this.content = content || Fragment.empty;\n\n  // :: [Mark]\n  // The marks (things like whether it is emphasized or part of a\n  // link) applied to this node.\n  this.marks = marks || Mark.none;\n};\n\nvar prototypeAccessors$3 = { nodeSize: { configurable: true },childCount: { configurable: true },textContent: { configurable: true },firstChild: { configurable: true },lastChild: { configurable: true },isBlock: { configurable: true },isTextblock: { configurable: true },inlineContent: { configurable: true },isInline: { configurable: true },isText: { configurable: true },isLeaf: { configurable: true },isAtom: { configurable: true } };\n\n// text:: ?string\n// For text nodes, this contains the node's text content.\n\n// :: number\n// The size of this node, as defined by the integer-based [indexing\n// scheme](/docs/guide/#doc.indexing). For text nodes, this is the\n// amount of characters. For other leaf nodes, it is one. For\n// non-leaf nodes, it is the size of the content plus two (the start\n// and end token).\nprototypeAccessors$3.nodeSize.get = function () { return this.isLeaf ? 1 : 2 + this.content.size };\n\n// :: number\n// The number of children that the node has.\nprototypeAccessors$3.childCount.get = function () { return this.content.childCount };\n\n// :: (number) → Node\n// Get the child node at the given index. Raises an error when the\n// index is out of range.\nNode.prototype.child = function child (index) { return this.content.child(index) };\n\n// :: (number) → ?Node\n// Get the child node at the given index, if it exists.\nNode.prototype.maybeChild = function maybeChild (index) { return this.content.maybeChild(index) };\n\n// :: ((node: Node, offset: number, index: number))\n// Call `f` for every child node, passing the node, its offset\n// into this parent node, and its index.\nNode.prototype.forEach = function forEach (f) { this.content.forEach(f); };\n\n// :: (number, number, (node: Node, pos: number, parent: Node, index: number) → ?bool, ?number)\n// Invoke a callback for all descendant nodes recursively between\n// the given two positions that are relative to start of this node's\n// content. The callback is invoked with the node, its\n// parent-relative position, its parent node, and its child index.\n// When the callback returns false for a given node, that node's\n// children will not be recursed over. The last parameter can be\n// used to specify a starting position to count from.\nNode.prototype.nodesBetween = function nodesBetween (from, to, f, startPos) {\n    if ( startPos === void 0 ) startPos = 0;\n\n  this.content.nodesBetween(from, to, f, startPos, this);\n};\n\n// :: ((node: Node, pos: number, parent: Node, index: number) → ?bool)\n// Call the given callback for every descendant node. Doesn't\n// descend into a node when the callback returns `false`.\nNode.prototype.descendants = function descendants (f) {\n  this.nodesBetween(0, this.content.size, f);\n};\n\n// :: string\n// Concatenates all the text nodes found in this fragment and its\n// children.\nprototypeAccessors$3.textContent.get = function () { return this.textBetween(0, this.content.size, \"\") };\n\n// :: (number, number, ?string, ?union<string, ?(leafNode: Node) -> string>) → string\n// Get all text between positions `from` and `to`. When\n// `blockSeparator` is given, it will be inserted to separate text\n// from different block nodes. When `leafText` is given, it'll be\n// inserted for every non-text leaf node encountered.\nNode.prototype.textBetween = function textBetween (from, to, blockSeparator, leafText) {\n  return this.content.textBetween(from, to, blockSeparator, leafText)\n};\n\n// :: ?Node\n// Returns this node's first child, or `null` if there are no\n// children.\nprototypeAccessors$3.firstChild.get = function () { return this.content.firstChild };\n\n// :: ?Node\n// Returns this node's last child, or `null` if there are no\n// children.\nprototypeAccessors$3.lastChild.get = function () { return this.content.lastChild };\n\n// :: (Node) → bool\n// Test whether two nodes represent the same piece of document.\nNode.prototype.eq = function eq (other) {\n  return this == other || (this.sameMarkup(other) && this.content.eq(other.content))\n};\n\n// :: (Node) → bool\n// Compare the markup (type, attributes, and marks) of this node to\n// those of another. Returns `true` if both have the same markup.\nNode.prototype.sameMarkup = function sameMarkup (other) {\n  return this.hasMarkup(other.type, other.attrs, other.marks)\n};\n\n// :: (NodeType, ?Object, ?[Mark]) → bool\n// Check whether this node's markup correspond to the given type,\n// attributes, and marks.\nNode.prototype.hasMarkup = function hasMarkup (type, attrs, marks) {\n  return this.type == type &&\n    compareDeep(this.attrs, attrs || type.defaultAttrs || emptyAttrs) &&\n    Mark.sameSet(this.marks, marks || Mark.none)\n};\n\n// :: (?Fragment) → Node\n// Create a new node with the same markup as this node, containing\n// the given content (or empty, if no content is given).\nNode.prototype.copy = function copy (content) {\n    if ( content === void 0 ) content = null;\n\n  if (content == this.content) { return this }\n  return new this.constructor(this.type, this.attrs, content, this.marks)\n};\n\n// :: ([Mark]) → Node\n// Create a copy of this node, with the given set of marks instead\n// of the node's own marks.\nNode.prototype.mark = function mark (marks) {\n  return marks == this.marks ? this : new this.constructor(this.type, this.attrs, this.content, marks)\n};\n\n// :: (number, ?number) → Node\n// Create a copy of this node with only the content between the\n// given positions. If `to` is not given, it defaults to the end of\n// the node.\nNode.prototype.cut = function cut (from, to) {\n  if (from == 0 && to == this.content.size) { return this }\n  return this.copy(this.content.cut(from, to))\n};\n\n// :: (number, ?number) → Slice\n// Cut out the part of the document between the given positions, and\n// return it as a `Slice` object.\nNode.prototype.slice = function slice (from, to, includeParents) {\n    if ( to === void 0 ) to = this.content.size;\n    if ( includeParents === void 0 ) includeParents = false;\n\n  if (from == to) { return Slice.empty }\n\n  var $from = this.resolve(from), $to = this.resolve(to);\n  var depth = includeParents ? 0 : $from.sharedDepth(to);\n  var start = $from.start(depth), node = $from.node(depth);\n  var content = node.content.cut($from.pos - start, $to.pos - start);\n  return new Slice(content, $from.depth - depth, $to.depth - depth)\n};\n\n// :: (number, number, Slice) → Node\n// Replace the part of the document between the given positions with\n// the given slice. The slice must 'fit', meaning its open sides\n// must be able to connect to the surrounding content, and its\n// content nodes must be valid children for the node they are placed\n// into. If any of this is violated, an error of type\n// [`ReplaceError`](#model.ReplaceError) is thrown.\nNode.prototype.replace = function replace$1 (from, to, slice) {\n  return replace(this.resolve(from), this.resolve(to), slice)\n};\n\n// :: (number) → ?Node\n// Find the node directly after the given position.\nNode.prototype.nodeAt = function nodeAt (pos) {\n  for (var node = this;;) {\n    var ref = node.content.findIndex(pos);\n      var index = ref.index;\n      var offset = ref.offset;\n    node = node.maybeChild(index);\n    if (!node) { return null }\n    if (offset == pos || node.isText) { return node }\n    pos -= offset + 1;\n  }\n};\n\n// :: (number) → {node: ?Node, index: number, offset: number}\n// Find the (direct) child node after the given offset, if any,\n// and return it along with its index and offset relative to this\n// node.\nNode.prototype.childAfter = function childAfter (pos) {\n  var ref = this.content.findIndex(pos);\n    var index = ref.index;\n    var offset = ref.offset;\n  return {node: this.content.maybeChild(index), index: index, offset: offset}\n};\n\n// :: (number) → {node: ?Node, index: number, offset: number}\n// Find the (direct) child node before the given offset, if any,\n// and return it along with its index and offset relative to this\n// node.\nNode.prototype.childBefore = function childBefore (pos) {\n  if (pos == 0) { return {node: null, index: 0, offset: 0} }\n  var ref = this.content.findIndex(pos);\n    var index = ref.index;\n    var offset = ref.offset;\n  if (offset < pos) { return {node: this.content.child(index), index: index, offset: offset} }\n  var node = this.content.child(index - 1);\n  return {node: node, index: index - 1, offset: offset - node.nodeSize}\n};\n\n// :: (number) → ResolvedPos\n// Resolve the given position in the document, returning an\n// [object](#model.ResolvedPos) with information about its context.\nNode.prototype.resolve = function resolve (pos) { return ResolvedPos.resolveCached(this, pos) };\n\nNode.prototype.resolveNoCache = function resolveNoCache (pos) { return ResolvedPos.resolve(this, pos) };\n\n// :: (number, number, union<Mark, MarkType>) → bool\n// Test whether a given mark or mark type occurs in this document\n// between the two given positions.\nNode.prototype.rangeHasMark = function rangeHasMark (from, to, type) {\n  var found = false;\n  if (to > from) { this.nodesBetween(from, to, function (node) {\n    if (type.isInSet(node.marks)) { found = true; }\n    return !found\n  }); }\n  return found\n};\n\n// :: bool\n// True when this is a block (non-inline node)\nprototypeAccessors$3.isBlock.get = function () { return this.type.isBlock };\n\n// :: bool\n// True when this is a textblock node, a block node with inline\n// content.\nprototypeAccessors$3.isTextblock.get = function () { return this.type.isTextblock };\n\n// :: bool\n// True when this node allows inline content.\nprototypeAccessors$3.inlineContent.get = function () { return this.type.inlineContent };\n\n// :: bool\n// True when this is an inline node (a text node or a node that can\n// appear among text).\nprototypeAccessors$3.isInline.get = function () { return this.type.isInline };\n\n// :: bool\n// True when this is a text node.\nprototypeAccessors$3.isText.get = function () { return this.type.isText };\n\n// :: bool\n// True when this is a leaf node.\nprototypeAccessors$3.isLeaf.get = function () { return this.type.isLeaf };\n\n// :: bool\n// True when this is an atom, i.e. when it does not have directly\n// editable content. This is usually the same as `isLeaf`, but can\n// be configured with the [`atom` property](#model.NodeSpec.atom) on\n// a node's spec (typically used when the node is displayed as an\n// uneditable [node view](#view.NodeView)).\nprototypeAccessors$3.isAtom.get = function () { return this.type.isAtom };\n\n// :: () → string\n// Return a string representation of this node for debugging\n// purposes.\nNode.prototype.toString = function toString () {\n  if (this.type.spec.toDebugString) { return this.type.spec.toDebugString(this) }\n  var name = this.type.name;\n  if (this.content.size)\n    { name += \"(\" + this.content.toStringInner() + \")\"; }\n  return wrapMarks(this.marks, name)\n};\n\n// :: (number) → ContentMatch\n// Get the content match in this node at the given index.\nNode.prototype.contentMatchAt = function contentMatchAt (index) {\n  var match = this.type.contentMatch.matchFragment(this.content, 0, index);\n  if (!match) { throw new Error(\"Called contentMatchAt on a node with invalid content\") }\n  return match\n};\n\n// :: (number, number, ?Fragment, ?number, ?number) → bool\n// Test whether replacing the range between `from` and `to` (by\n// child index) with the given replacement fragment (which defaults\n// to the empty fragment) would leave the node's content valid. You\n// can optionally pass `start` and `end` indices into the\n// replacement fragment.\nNode.prototype.canReplace = function canReplace (from, to, replacement, start, end) {\n    if ( replacement === void 0 ) replacement = Fragment.empty;\n    if ( start === void 0 ) start = 0;\n    if ( end === void 0 ) end = replacement.childCount;\n\n  var one = this.contentMatchAt(from).matchFragment(replacement, start, end);\n  var two = one && one.matchFragment(this.content, to);\n  if (!two || !two.validEnd) { return false }\n  for (var i = start; i < end; i++) { if (!this.type.allowsMarks(replacement.child(i).marks)) { return false } }\n  return true\n};\n\n// :: (number, number, NodeType, ?[Mark]) → bool\n// Test whether replacing the range `from` to `to` (by index) with a\n// node of the given type would leave the node's content valid.\nNode.prototype.canReplaceWith = function canReplaceWith (from, to, type, marks) {\n  if (marks && !this.type.allowsMarks(marks)) { return false }\n  var start = this.contentMatchAt(from).matchType(type);\n  var end = start && start.matchFragment(this.content, to);\n  return end ? end.validEnd : false\n};\n\n// :: (Node) → bool\n// Test whether the given node's content could be appended to this\n// node. If that node is empty, this will only return true if there\n// is at least one node type that can appear in both nodes (to avoid\n// merging completely incompatible nodes).\nNode.prototype.canAppend = function canAppend (other) {\n  if (other.content.size) { return this.canReplace(this.childCount, this.childCount, other.content) }\n  else { return this.type.compatibleContent(other.type) }\n};\n\n// :: ()\n// Check whether this node and its descendants conform to the\n// schema, and raise error when they do not.\nNode.prototype.check = function check () {\n  if (!this.type.validContent(this.content))\n    { throw new RangeError((\"Invalid content for node \" + (this.type.name) + \": \" + (this.content.toString().slice(0, 50)))) }\n  var copy = Mark.none;\n  for (var i = 0; i < this.marks.length; i++) { copy = this.marks[i].addToSet(copy); }\n  if (!Mark.sameSet(copy, this.marks))\n    { throw new RangeError((\"Invalid collection of marks for node \" + (this.type.name) + \": \" + (this.marks.map(function (m) { return m.type.name; })))) }\n  this.content.forEach(function (node) { return node.check(); });\n};\n\n// :: () → Object\n// Return a JSON-serializeable representation of this node.\nNode.prototype.toJSON = function toJSON () {\n  var obj = {type: this.type.name};\n  for (var _ in this.attrs) {\n    obj.attrs = this.attrs;\n    break\n  }\n  if (this.content.size)\n    { obj.content = this.content.toJSON(); }\n  if (this.marks.length)\n    { obj.marks = this.marks.map(function (n) { return n.toJSON(); }); }\n  return obj\n};\n\n// :: (Schema, Object) → Node\n// Deserialize a node from its JSON representation.\nNode.fromJSON = function fromJSON (schema, json) {\n  if (!json) { throw new RangeError(\"Invalid input for Node.fromJSON\") }\n  var marks = null;\n  if (json.marks) {\n    if (!Array.isArray(json.marks)) { throw new RangeError(\"Invalid mark data for Node.fromJSON\") }\n    marks = json.marks.map(schema.markFromJSON);\n  }\n  if (json.type == \"text\") {\n    if (typeof json.text != \"string\") { throw new RangeError(\"Invalid text node in JSON\") }\n    return schema.text(json.text, marks)\n  }\n  var content = Fragment.fromJSON(schema, json.content);\n  return schema.nodeType(json.type).create(json.attrs, content, marks)\n};\n\nObject.defineProperties( Node.prototype, prototypeAccessors$3 );\n\nvar TextNode = /*@__PURE__*/(function (Node) {\n  function TextNode(type, attrs, content, marks) {\n    Node.call(this, type, attrs, null, marks);\n\n    if (!content) { throw new RangeError(\"Empty text nodes are not allowed\") }\n\n    this.text = content;\n  }\n\n  if ( Node ) TextNode.__proto__ = Node;\n  TextNode.prototype = Object.create( Node && Node.prototype );\n  TextNode.prototype.constructor = TextNode;\n\n  var prototypeAccessors$1 = { textContent: { configurable: true },nodeSize: { configurable: true } };\n\n  TextNode.prototype.toString = function toString () {\n    if (this.type.spec.toDebugString) { return this.type.spec.toDebugString(this) }\n    return wrapMarks(this.marks, JSON.stringify(this.text))\n  };\n\n  prototypeAccessors$1.textContent.get = function () { return this.text };\n\n  TextNode.prototype.textBetween = function textBetween (from, to) { return this.text.slice(from, to) };\n\n  prototypeAccessors$1.nodeSize.get = function () { return this.text.length };\n\n  TextNode.prototype.mark = function mark (marks) {\n    return marks == this.marks ? this : new TextNode(this.type, this.attrs, this.text, marks)\n  };\n\n  TextNode.prototype.withText = function withText (text) {\n    if (text == this.text) { return this }\n    return new TextNode(this.type, this.attrs, text, this.marks)\n  };\n\n  TextNode.prototype.cut = function cut (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.text.length;\n\n    if (from == 0 && to == this.text.length) { return this }\n    return this.withText(this.text.slice(from, to))\n  };\n\n  TextNode.prototype.eq = function eq (other) {\n    return this.sameMarkup(other) && this.text == other.text\n  };\n\n  TextNode.prototype.toJSON = function toJSON () {\n    var base = Node.prototype.toJSON.call(this);\n    base.text = this.text;\n    return base\n  };\n\n  Object.defineProperties( TextNode.prototype, prototypeAccessors$1 );\n\n  return TextNode;\n}(Node));\n\nfunction wrapMarks(marks, str) {\n  for (var i = marks.length - 1; i >= 0; i--)\n    { str = marks[i].type.name + \"(\" + str + \")\"; }\n  return str\n}\n\n// ::- Instances of this class represent a match state of a node\n// type's [content expression](#model.NodeSpec.content), and can be\n// used to find out whether further content matches here, and whether\n// a given position is a valid end of the node.\nvar ContentMatch = function ContentMatch(validEnd) {\n  // :: bool\n  // True when this match state represents a valid end of the node.\n  this.validEnd = validEnd;\n  this.next = [];\n  this.wrapCache = [];\n};\n\nvar prototypeAccessors$4 = { inlineContent: { configurable: true },defaultType: { configurable: true },edgeCount: { configurable: true } };\n\nContentMatch.parse = function parse (string, nodeTypes) {\n  var stream = new TokenStream(string, nodeTypes);\n  if (stream.next == null) { return ContentMatch.empty }\n  var expr = parseExpr(stream);\n  if (stream.next) { stream.err(\"Unexpected trailing text\"); }\n  var match = dfa(nfa(expr));\n  checkForDeadEnds(match, stream);\n  return match\n};\n\n// :: (NodeType) → ?ContentMatch\n// Match a node type, returning a match after that node if\n// successful.\nContentMatch.prototype.matchType = function matchType (type) {\n  for (var i = 0; i < this.next.length; i += 2)\n    { if (this.next[i] == type) { return this.next[i + 1] } }\n  return null\n};\n\n// :: (Fragment, ?number, ?number) → ?ContentMatch\n// Try to match a fragment. Returns the resulting match when\n// successful.\nContentMatch.prototype.matchFragment = function matchFragment (frag, start, end) {\n    if ( start === void 0 ) start = 0;\n    if ( end === void 0 ) end = frag.childCount;\n\n  var cur = this;\n  for (var i = start; cur && i < end; i++)\n    { cur = cur.matchType(frag.child(i).type); }\n  return cur\n};\n\nprototypeAccessors$4.inlineContent.get = function () {\n  var first = this.next[0];\n  return first ? first.isInline : false\n};\n\n// :: ?NodeType\n// Get the first matching node type at this match position that can\n// be generated.\nprototypeAccessors$4.defaultType.get = function () {\n  for (var i = 0; i < this.next.length; i += 2) {\n    var type = this.next[i];\n    if (!(type.isText || type.hasRequiredAttrs())) { return type }\n  }\n};\n\nContentMatch.prototype.compatible = function compatible (other) {\n  for (var i = 0; i < this.next.length; i += 2)\n    { for (var j = 0; j < other.next.length; j += 2)\n      { if (this.next[i] == other.next[j]) { return true } } }\n  return false\n};\n\n// :: (Fragment, bool, ?number) → ?Fragment\n// Try to match the given fragment, and if that fails, see if it can\n// be made to match by inserting nodes in front of it. When\n// successful, return a fragment of inserted nodes (which may be\n// empty if nothing had to be inserted). When `toEnd` is true, only\n// return a fragment if the resulting match goes to the end of the\n// content expression.\nContentMatch.prototype.fillBefore = function fillBefore (after, toEnd, startIndex) {\n    if ( toEnd === void 0 ) toEnd = false;\n    if ( startIndex === void 0 ) startIndex = 0;\n\n  var seen = [this];\n  function search(match, types) {\n    var finished = match.matchFragment(after, startIndex);\n    if (finished && (!toEnd || finished.validEnd))\n      { return Fragment.from(types.map(function (tp) { return tp.createAndFill(); })) }\n\n    for (var i = 0; i < match.next.length; i += 2) {\n      var type = match.next[i], next = match.next[i + 1];\n      if (!(type.isText || type.hasRequiredAttrs()) && seen.indexOf(next) == -1) {\n        seen.push(next);\n        var found = search(next, types.concat(type));\n        if (found) { return found }\n      }\n    }\n  }\n\n  return search(this, [])\n};\n\n// :: (NodeType) → ?[NodeType]\n// Find a set of wrapping node types that would allow a node of the\n// given type to appear at this position. The result may be empty\n// (when it fits directly) and will be null when no such wrapping\n// exists.\nContentMatch.prototype.findWrapping = function findWrapping (target) {\n  for (var i = 0; i < this.wrapCache.length; i += 2)\n    { if (this.wrapCache[i] == target) { return this.wrapCache[i + 1] } }\n  var computed = this.computeWrapping(target);\n  this.wrapCache.push(target, computed);\n  return computed\n};\n\nContentMatch.prototype.computeWrapping = function computeWrapping (target) {\n  var seen = Object.create(null), active = [{match: this, type: null, via: null}];\n  while (active.length) {\n    var current = active.shift(), match = current.match;\n    if (match.matchType(target)) {\n      var result = [];\n      for (var obj = current; obj.type; obj = obj.via)\n        { result.push(obj.type); }\n      return result.reverse()\n    }\n    for (var i = 0; i < match.next.length; i += 2) {\n      var type = match.next[i];\n      if (!type.isLeaf && !type.hasRequiredAttrs() && !(type.name in seen) && (!current.type || match.next[i + 1].validEnd)) {\n        active.push({match: type.contentMatch, type: type, via: current});\n        seen[type.name] = true;\n      }\n    }\n  }\n};\n\n// :: number\n// The number of outgoing edges this node has in the finite\n// automaton that describes the content expression.\nprototypeAccessors$4.edgeCount.get = function () {\n  return this.next.length >> 1\n};\n\n// :: (number) → {type: NodeType, next: ContentMatch}\n// Get the _n_​th outgoing edge from this node in the finite\n// automaton that describes the content expression.\nContentMatch.prototype.edge = function edge (n) {\n  var i = n << 1;\n  if (i >= this.next.length) { throw new RangeError((\"There's no \" + n + \"th edge in this content match\")) }\n  return {type: this.next[i], next: this.next[i + 1]}\n};\n\nContentMatch.prototype.toString = function toString () {\n  var seen = [];\n  function scan(m) {\n    seen.push(m);\n    for (var i = 1; i < m.next.length; i += 2)\n      { if (seen.indexOf(m.next[i]) == -1) { scan(m.next[i]); } }\n  }\n  scan(this);\n  return seen.map(function (m, i) {\n    var out = i + (m.validEnd ? \"*\" : \" \") + \" \";\n    for (var i$1 = 0; i$1 < m.next.length; i$1 += 2)\n      { out += (i$1 ? \", \" : \"\") + m.next[i$1].name + \"->\" + seen.indexOf(m.next[i$1 + 1]); }\n    return out\n  }).join(\"\\n\")\n};\n\nObject.defineProperties( ContentMatch.prototype, prototypeAccessors$4 );\n\nContentMatch.empty = new ContentMatch(true);\n\nvar TokenStream = function TokenStream(string, nodeTypes) {\n  this.string = string;\n  this.nodeTypes = nodeTypes;\n  this.inline = null;\n  this.pos = 0;\n  this.tokens = string.split(/\\s*(?=\\b|\\W|$)/);\n  if (this.tokens[this.tokens.length - 1] == \"\") { this.tokens.pop(); }\n  if (this.tokens[0] == \"\") { this.tokens.shift(); }\n};\n\nvar prototypeAccessors$1$2 = { next: { configurable: true } };\n\nprototypeAccessors$1$2.next.get = function () { return this.tokens[this.pos] };\n\nTokenStream.prototype.eat = function eat (tok) { return this.next == tok && (this.pos++ || true) };\n\nTokenStream.prototype.err = function err (str) { throw new SyntaxError(str + \" (in content expression '\" + this.string + \"')\") };\n\nObject.defineProperties( TokenStream.prototype, prototypeAccessors$1$2 );\n\nfunction parseExpr(stream) {\n  var exprs = [];\n  do { exprs.push(parseExprSeq(stream)); }\n  while (stream.eat(\"|\"))\n  return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs: exprs}\n}\n\nfunction parseExprSeq(stream) {\n  var exprs = [];\n  do { exprs.push(parseExprSubscript(stream)); }\n  while (stream.next && stream.next != \")\" && stream.next != \"|\")\n  return exprs.length == 1 ? exprs[0] : {type: \"seq\", exprs: exprs}\n}\n\nfunction parseExprSubscript(stream) {\n  var expr = parseExprAtom(stream);\n  for (;;) {\n    if (stream.eat(\"+\"))\n      { expr = {type: \"plus\", expr: expr}; }\n    else if (stream.eat(\"*\"))\n      { expr = {type: \"star\", expr: expr}; }\n    else if (stream.eat(\"?\"))\n      { expr = {type: \"opt\", expr: expr}; }\n    else if (stream.eat(\"{\"))\n      { expr = parseExprRange(stream, expr); }\n    else { break }\n  }\n  return expr\n}\n\nfunction parseNum(stream) {\n  if (/\\D/.test(stream.next)) { stream.err(\"Expected number, got '\" + stream.next + \"'\"); }\n  var result = Number(stream.next);\n  stream.pos++;\n  return result\n}\n\nfunction parseExprRange(stream, expr) {\n  var min = parseNum(stream), max = min;\n  if (stream.eat(\",\")) {\n    if (stream.next != \"}\") { max = parseNum(stream); }\n    else { max = -1; }\n  }\n  if (!stream.eat(\"}\")) { stream.err(\"Unclosed braced range\"); }\n  return {type: \"range\", min: min, max: max, expr: expr}\n}\n\nfunction resolveName(stream, name) {\n  var types = stream.nodeTypes, type = types[name];\n  if (type) { return [type] }\n  var result = [];\n  for (var typeName in types) {\n    var type$1 = types[typeName];\n    if (type$1.groups.indexOf(name) > -1) { result.push(type$1); }\n  }\n  if (result.length == 0) { stream.err(\"No node type or group '\" + name + \"' found\"); }\n  return result\n}\n\nfunction parseExprAtom(stream) {\n  if (stream.eat(\"(\")) {\n    var expr = parseExpr(stream);\n    if (!stream.eat(\")\")) { stream.err(\"Missing closing paren\"); }\n    return expr\n  } else if (!/\\W/.test(stream.next)) {\n    var exprs = resolveName(stream, stream.next).map(function (type) {\n      if (stream.inline == null) { stream.inline = type.isInline; }\n      else if (stream.inline != type.isInline) { stream.err(\"Mixing inline and block content\"); }\n      return {type: \"name\", value: type}\n    });\n    stream.pos++;\n    return exprs.length == 1 ? exprs[0] : {type: \"choice\", exprs: exprs}\n  } else {\n    stream.err(\"Unexpected token '\" + stream.next + \"'\");\n  }\n}\n\n// The code below helps compile a regular-expression-like language\n// into a deterministic finite automaton. For a good introduction to\n// these concepts, see https://swtch.com/~rsc/regexp/regexp1.html\n\n// : (Object) → [[{term: ?any, to: number}]]\n// Construct an NFA from an expression as returned by the parser. The\n// NFA is represented as an array of states, which are themselves\n// arrays of edges, which are `{term, to}` objects. The first state is\n// the entry state and the last node is the success state.\n//\n// Note that unlike typical NFAs, the edge ordering in this one is\n// significant, in that it is used to contruct filler content when\n// necessary.\nfunction nfa(expr) {\n  var nfa = [[]];\n  connect(compile(expr, 0), node());\n  return nfa\n\n  function node() { return nfa.push([]) - 1 }\n  function edge(from, to, term) {\n    var edge = {term: term, to: to};\n    nfa[from].push(edge);\n    return edge\n  }\n  function connect(edges, to) { edges.forEach(function (edge) { return edge.to = to; }); }\n\n  function compile(expr, from) {\n    if (expr.type == \"choice\") {\n      return expr.exprs.reduce(function (out, expr) { return out.concat(compile(expr, from)); }, [])\n    } else if (expr.type == \"seq\") {\n      for (var i = 0;; i++) {\n        var next = compile(expr.exprs[i], from);\n        if (i == expr.exprs.length - 1) { return next }\n        connect(next, from = node());\n      }\n    } else if (expr.type == \"star\") {\n      var loop = node();\n      edge(from, loop);\n      connect(compile(expr.expr, loop), loop);\n      return [edge(loop)]\n    } else if (expr.type == \"plus\") {\n      var loop$1 = node();\n      connect(compile(expr.expr, from), loop$1);\n      connect(compile(expr.expr, loop$1), loop$1);\n      return [edge(loop$1)]\n    } else if (expr.type == \"opt\") {\n      return [edge(from)].concat(compile(expr.expr, from))\n    } else if (expr.type == \"range\") {\n      var cur = from;\n      for (var i$1 = 0; i$1 < expr.min; i$1++) {\n        var next$1 = node();\n        connect(compile(expr.expr, cur), next$1);\n        cur = next$1;\n      }\n      if (expr.max == -1) {\n        connect(compile(expr.expr, cur), cur);\n      } else {\n        for (var i$2 = expr.min; i$2 < expr.max; i$2++) {\n          var next$2 = node();\n          edge(cur, next$2);\n          connect(compile(expr.expr, cur), next$2);\n          cur = next$2;\n        }\n      }\n      return [edge(cur)]\n    } else if (expr.type == \"name\") {\n      return [edge(from, null, expr.value)]\n    }\n  }\n}\n\nfunction cmp(a, b) { return b - a }\n\n// Get the set of nodes reachable by null edges from `node`. Omit\n// nodes with only a single null-out-edge, since they may lead to\n// needless duplicated nodes.\nfunction nullFrom(nfa, node) {\n  var result = [];\n  scan(node);\n  return result.sort(cmp)\n\n  function scan(node) {\n    var edges = nfa[node];\n    if (edges.length == 1 && !edges[0].term) { return scan(edges[0].to) }\n    result.push(node);\n    for (var i = 0; i < edges.length; i++) {\n      var ref = edges[i];\n      var term = ref.term;\n      var to = ref.to;\n      if (!term && result.indexOf(to) == -1) { scan(to); }\n    }\n  }\n}\n\n// : ([[{term: ?any, to: number}]]) → ContentMatch\n// Compiles an NFA as produced by `nfa` into a DFA, modeled as a set\n// of state objects (`ContentMatch` instances) with transitions\n// between them.\nfunction dfa(nfa) {\n  var labeled = Object.create(null);\n  return explore(nullFrom(nfa, 0))\n\n  function explore(states) {\n    var out = [];\n    states.forEach(function (node) {\n      nfa[node].forEach(function (ref) {\n        var term = ref.term;\n        var to = ref.to;\n\n        if (!term) { return }\n        var known = out.indexOf(term), set = known > -1 && out[known + 1];\n        nullFrom(nfa, to).forEach(function (node) {\n          if (!set) { out.push(term, set = []); }\n          if (set.indexOf(node) == -1) { set.push(node); }\n        });\n      });\n    });\n    var state = labeled[states.join(\",\")] = new ContentMatch(states.indexOf(nfa.length - 1) > -1);\n    for (var i = 0; i < out.length; i += 2) {\n      var states$1 = out[i + 1].sort(cmp);\n      state.next.push(out[i], labeled[states$1.join(\",\")] || explore(states$1));\n    }\n    return state\n  }\n}\n\nfunction checkForDeadEnds(match, stream) {\n  for (var i = 0, work = [match]; i < work.length; i++) {\n    var state = work[i], dead = !state.validEnd, nodes = [];\n    for (var j = 0; j < state.next.length; j += 2) {\n      var node = state.next[j], next = state.next[j + 1];\n      nodes.push(node.name);\n      if (dead && !(node.isText || node.hasRequiredAttrs())) { dead = false; }\n      if (work.indexOf(next) == -1) { work.push(next); }\n    }\n    if (dead) { stream.err(\"Only non-generatable nodes (\" + nodes.join(\", \") + \") in a required position (see https://prosemirror.net/docs/guide/#generatable)\"); }\n  }\n}\n\n// For node types where all attrs have a default value (or which don't\n// have any attributes), build up a single reusable default attribute\n// object, and use it for all nodes that don't specify specific\n// attributes.\nfunction defaultAttrs(attrs) {\n  var defaults = Object.create(null);\n  for (var attrName in attrs) {\n    var attr = attrs[attrName];\n    if (!attr.hasDefault) { return null }\n    defaults[attrName] = attr.default;\n  }\n  return defaults\n}\n\nfunction computeAttrs(attrs, value) {\n  var built = Object.create(null);\n  for (var name in attrs) {\n    var given = value && value[name];\n    if (given === undefined) {\n      var attr = attrs[name];\n      if (attr.hasDefault) { given = attr.default; }\n      else { throw new RangeError(\"No value supplied for attribute \" + name) }\n    }\n    built[name] = given;\n  }\n  return built\n}\n\nfunction initAttrs(attrs) {\n  var result = Object.create(null);\n  if (attrs) { for (var name in attrs) { result[name] = new Attribute(attrs[name]); } }\n  return result\n}\n\n// ::- Node types are objects allocated once per `Schema` and used to\n// [tag](#model.Node.type) `Node` instances. They contain information\n// about the node type, such as its name and what kind of node it\n// represents.\nvar NodeType = function NodeType(name, schema, spec) {\n  // :: string\n  // The name the node type has in this schema.\n  this.name = name;\n\n  // :: Schema\n  // A link back to the `Schema` the node type belongs to.\n  this.schema = schema;\n\n  // :: NodeSpec\n  // The spec that this type is based on\n  this.spec = spec;\n\n  this.groups = spec.group ? spec.group.split(\" \") : [];\n  this.attrs = initAttrs(spec.attrs);\n\n  this.defaultAttrs = defaultAttrs(this.attrs);\n\n  // :: ContentMatch\n  // The starting match of the node type's content expression.\n  this.contentMatch = null;\n\n  // : ?[MarkType]\n  // The set of marks allowed in this node. `null` means all marks\n  // are allowed.\n  this.markSet = null;\n\n  // :: bool\n  // True if this node type has inline content.\n  this.inlineContent = null;\n\n  // :: bool\n  // True if this is a block type\n  this.isBlock = !(spec.inline || name == \"text\");\n\n  // :: bool\n  // True if this is the text node type.\n  this.isText = name == \"text\";\n};\n\nvar prototypeAccessors$5 = { isInline: { configurable: true },isTextblock: { configurable: true },isLeaf: { configurable: true },isAtom: { configurable: true },whitespace: { configurable: true } };\n\n// :: bool\n// True if this is an inline type.\nprototypeAccessors$5.isInline.get = function () { return !this.isBlock };\n\n// :: bool\n// True if this is a textblock type, a block that contains inline\n// content.\nprototypeAccessors$5.isTextblock.get = function () { return this.isBlock && this.inlineContent };\n\n// :: bool\n// True for node types that allow no content.\nprototypeAccessors$5.isLeaf.get = function () { return this.contentMatch == ContentMatch.empty };\n\n// :: bool\n// True when this node is an atom, i.e. when it does not have\n// directly editable content.\nprototypeAccessors$5.isAtom.get = function () { return this.isLeaf || this.spec.atom };\n\n// :: union<\"pre\", \"normal\">\n// The node type's [whitespace](#view.NodeSpec.whitespace) option.\nprototypeAccessors$5.whitespace.get = function () { return this.spec.whitespace || (this.spec.code ? \"pre\" : \"normal\") };\n\n// :: () → bool\n// Tells you whether this node type has any required attributes.\nNodeType.prototype.hasRequiredAttrs = function hasRequiredAttrs () {\n  for (var n in this.attrs) { if (this.attrs[n].isRequired) { return true } }\n  return false\n};\n\nNodeType.prototype.compatibleContent = function compatibleContent (other) {\n  return this == other || this.contentMatch.compatible(other.contentMatch)\n};\n\nNodeType.prototype.computeAttrs = function computeAttrs$1 (attrs) {\n  if (!attrs && this.defaultAttrs) { return this.defaultAttrs }\n  else { return computeAttrs(this.attrs, attrs) }\n};\n\n// :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n// Create a `Node` of this type. The given attributes are\n// checked and defaulted (you can pass `null` to use the type's\n// defaults entirely, if no required attributes exist). `content`\n// may be a `Fragment`, a node, an array of nodes, or\n// `null`. Similarly `marks` may be `null` to default to the empty\n// set of marks.\nNodeType.prototype.create = function create (attrs, content, marks) {\n  if (this.isText) { throw new Error(\"NodeType.create can't construct text nodes\") }\n  return new Node(this, this.computeAttrs(attrs), Fragment.from(content), Mark.setFrom(marks))\n};\n\n// :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n// Like [`create`](#model.NodeType.create), but check the given content\n// against the node type's content restrictions, and throw an error\n// if it doesn't match.\nNodeType.prototype.createChecked = function createChecked (attrs, content, marks) {\n  content = Fragment.from(content);\n  if (!this.validContent(content))\n    { throw new RangeError(\"Invalid content for node \" + this.name) }\n  return new Node(this, this.computeAttrs(attrs), content, Mark.setFrom(marks))\n};\n\n// :: (?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → ?Node\n// Like [`create`](#model.NodeType.create), but see if it is necessary to\n// add nodes to the start or end of the given fragment to make it\n// fit the node. If no fitting wrapping can be found, return null.\n// Note that, due to the fact that required nodes can always be\n// created, this will always succeed if you pass null or\n// `Fragment.empty` as content.\nNodeType.prototype.createAndFill = function createAndFill (attrs, content, marks) {\n  attrs = this.computeAttrs(attrs);\n  content = Fragment.from(content);\n  if (content.size) {\n    var before = this.contentMatch.fillBefore(content);\n    if (!before) { return null }\n    content = before.append(content);\n  }\n  var after = this.contentMatch.matchFragment(content).fillBefore(Fragment.empty, true);\n  if (!after) { return null }\n  return new Node(this, attrs, content.append(after), Mark.setFrom(marks))\n};\n\n// :: (Fragment) → bool\n// Returns true if the given fragment is valid content for this node\n// type with the given attributes.\nNodeType.prototype.validContent = function validContent (content) {\n  var result = this.contentMatch.matchFragment(content);\n  if (!result || !result.validEnd) { return false }\n  for (var i = 0; i < content.childCount; i++)\n    { if (!this.allowsMarks(content.child(i).marks)) { return false } }\n  return true\n};\n\n// :: (MarkType) → bool\n// Check whether the given mark type is allowed in this node.\nNodeType.prototype.allowsMarkType = function allowsMarkType (markType) {\n  return this.markSet == null || this.markSet.indexOf(markType) > -1\n};\n\n// :: ([Mark]) → bool\n// Test whether the given set of marks are allowed in this node.\nNodeType.prototype.allowsMarks = function allowsMarks (marks) {\n  if (this.markSet == null) { return true }\n  for (var i = 0; i < marks.length; i++) { if (!this.allowsMarkType(marks[i].type)) { return false } }\n  return true\n};\n\n// :: ([Mark]) → [Mark]\n// Removes the marks that are not allowed in this node from the given set.\nNodeType.prototype.allowedMarks = function allowedMarks (marks) {\n  if (this.markSet == null) { return marks }\n  var copy;\n  for (var i = 0; i < marks.length; i++) {\n    if (!this.allowsMarkType(marks[i].type)) {\n      if (!copy) { copy = marks.slice(0, i); }\n    } else if (copy) {\n      copy.push(marks[i]);\n    }\n  }\n  return !copy ? marks : copy.length ? copy : Mark.empty\n};\n\nNodeType.compile = function compile (nodes, schema) {\n  var result = Object.create(null);\n  nodes.forEach(function (name, spec) { return result[name] = new NodeType(name, schema, spec); });\n\n  var topType = schema.spec.topNode || \"doc\";\n  if (!result[topType]) { throw new RangeError(\"Schema is missing its top node type ('\" + topType + \"')\") }\n  if (!result.text) { throw new RangeError(\"Every schema needs a 'text' type\") }\n  for (var _ in result.text.attrs) { throw new RangeError(\"The text node type should not have attributes\") }\n\n  return result\n};\n\nObject.defineProperties( NodeType.prototype, prototypeAccessors$5 );\n\n// Attribute descriptors\n\nvar Attribute = function Attribute(options) {\n  this.hasDefault = Object.prototype.hasOwnProperty.call(options, \"default\");\n  this.default = options.default;\n};\n\nvar prototypeAccessors$1$3 = { isRequired: { configurable: true } };\n\nprototypeAccessors$1$3.isRequired.get = function () {\n  return !this.hasDefault\n};\n\nObject.defineProperties( Attribute.prototype, prototypeAccessors$1$3 );\n\n// Marks\n\n// ::- Like nodes, marks (which are associated with nodes to signify\n// things like emphasis or being part of a link) are\n// [tagged](#model.Mark.type) with type objects, which are\n// instantiated once per `Schema`.\nvar MarkType = function MarkType(name, rank, schema, spec) {\n  // :: string\n  // The name of the mark type.\n  this.name = name;\n\n  // :: Schema\n  // The schema that this mark type instance is part of.\n  this.schema = schema;\n\n  // :: MarkSpec\n  // The spec on which the type is based.\n  this.spec = spec;\n\n  this.attrs = initAttrs(spec.attrs);\n\n  this.rank = rank;\n  this.excluded = null;\n  var defaults = defaultAttrs(this.attrs);\n  this.instance = defaults && new Mark(this, defaults);\n};\n\n// :: (?Object) → Mark\n// Create a mark of this type. `attrs` may be `null` or an object\n// containing only some of the mark's attributes. The others, if\n// they have defaults, will be added.\nMarkType.prototype.create = function create (attrs) {\n  if (!attrs && this.instance) { return this.instance }\n  return new Mark(this, computeAttrs(this.attrs, attrs))\n};\n\nMarkType.compile = function compile (marks, schema) {\n  var result = Object.create(null), rank = 0;\n  marks.forEach(function (name, spec) { return result[name] = new MarkType(name, rank++, schema, spec); });\n  return result\n};\n\n// :: ([Mark]) → [Mark]\n// When there is a mark of this type in the given set, a new set\n// without it is returned. Otherwise, the input set is returned.\nMarkType.prototype.removeFromSet = function removeFromSet (set) {\n  for (var i = 0; i < set.length; i++) { if (set[i].type == this) {\n    set = set.slice(0, i).concat(set.slice(i + 1));\n    i--;\n  } }\n  return set\n};\n\n// :: ([Mark]) → ?Mark\n// Tests whether there is a mark of this type in the given set.\nMarkType.prototype.isInSet = function isInSet (set) {\n  for (var i = 0; i < set.length; i++)\n    { if (set[i].type == this) { return set[i] } }\n};\n\n// :: (MarkType) → bool\n// Queries whether a given mark type is\n// [excluded](#model.MarkSpec.excludes) by this one.\nMarkType.prototype.excludes = function excludes (other) {\n  return this.excluded.indexOf(other) > -1\n};\n\n// SchemaSpec:: interface\n// An object describing a schema, as passed to the [`Schema`](#model.Schema)\n// constructor.\n//\n//   nodes:: union<Object<NodeSpec>, OrderedMap<NodeSpec>>\n//   The node types in this schema. Maps names to\n//   [`NodeSpec`](#model.NodeSpec) objects that describe the node type\n//   associated with that name. Their order is significant—it\n//   determines which [parse rules](#model.NodeSpec.parseDOM) take\n//   precedence by default, and which nodes come first in a given\n//   [group](#model.NodeSpec.group).\n//\n//   marks:: ?union<Object<MarkSpec>, OrderedMap<MarkSpec>>\n//   The mark types that exist in this schema. The order in which they\n//   are provided determines the order in which [mark\n//   sets](#model.Mark.addToSet) are sorted and in which [parse\n//   rules](#model.MarkSpec.parseDOM) are tried.\n//\n//   topNode:: ?string\n//   The name of the default top-level node for the schema. Defaults\n//   to `\"doc\"`.\n\n// NodeSpec:: interface\n//\n//   content:: ?string\n//   The content expression for this node, as described in the [schema\n//   guide](/docs/guide/#schema.content_expressions). When not given,\n//   the node does not allow any content.\n//\n//   marks:: ?string\n//   The marks that are allowed inside of this node. May be a\n//   space-separated string referring to mark names or groups, `\"_\"`\n//   to explicitly allow all marks, or `\"\"` to disallow marks. When\n//   not given, nodes with inline content default to allowing all\n//   marks, other nodes default to not allowing marks.\n//\n//   group:: ?string\n//   The group or space-separated groups to which this node belongs,\n//   which can be referred to in the content expressions for the\n//   schema.\n//\n//   inline:: ?bool\n//   Should be set to true for inline nodes. (Implied for text nodes.)\n//\n//   atom:: ?bool\n//   Can be set to true to indicate that, though this isn't a [leaf\n//   node](#model.NodeType.isLeaf), it doesn't have directly editable\n//   content and should be treated as a single unit in the view.\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that nodes of this type get.\n//\n//   selectable:: ?bool\n//   Controls whether nodes of this type can be selected as a [node\n//   selection](#state.NodeSelection). Defaults to true for non-text\n//   nodes.\n//\n//   draggable:: ?bool\n//   Determines whether nodes of this type can be dragged without\n//   being selected. Defaults to false.\n//\n//   code:: ?bool\n//   Can be used to indicate that this node contains code, which\n//   causes some commands to behave differently.\n//\n//   whitespace:: ?union<\"pre\", \"normal\">\n//   Controls way whitespace in this a node is parsed. The default is\n//   `\"normal\"`, which causes the [DOM parser](#model.DOMParser) to\n//   collapse whitespace in normal mode, and normalize it (replacing\n//   newlines and such with spaces) otherwise. `\"pre\"` causes the\n//   parser to preserve spaces inside the node. When this option isn't\n//   given, but [`code`](#model.NodeSpec.code) is true, `whitespace`\n//   will default to `\"pre\"`. Note that this option doesn't influence\n//   the way the node is rendered—that should be handled by `toDOM`\n//   and/or styling.\n//\n//   defining:: ?bool\n//   Determines whether this node is considered an important parent\n//   node during replace operations (such as paste). Non-defining (the\n//   default) nodes get dropped when their entire content is replaced,\n//   whereas defining nodes persist and wrap the inserted content.\n//   Likewise, in _inserted_ content the defining parents of the\n//   content are preserved when possible. Typically,\n//   non-default-paragraph textblock types, and possibly list items,\n//   are marked as defining.\n//\n//   isolating:: ?bool\n//   When enabled (default is false), the sides of nodes of this type\n//   count as boundaries that regular editing operations, like\n//   backspacing or lifting, won't cross. An example of a node that\n//   should probably have this enabled is a table cell.\n//\n//   toDOM:: ?(node: Node) → DOMOutputSpec\n//   Defines the default way a node of this type should be serialized\n//   to DOM/HTML (as used by\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)).\n//   Should return a DOM node or an [array\n//   structure](#model.DOMOutputSpec) that describes one, with an\n//   optional number zero (“hole”) in it to indicate where the node's\n//   content should be inserted.\n//\n//   For text nodes, the default is to create a text DOM node. Though\n//   it is possible to create a serializer where text is rendered\n//   differently, this is not supported inside the editor, so you\n//   shouldn't override that in your text node spec.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this node, which can be\n//   used by [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) to\n//   automatically derive a parser. The `node` field in the rules is\n//   implied (the name of this node will be filled in automatically).\n//   If you supply your own parser, you do not need to also specify\n//   parsing rules in your schema.\n//\n//   toDebugString:: ?(node: Node) -> string\n//   Defines the default way a node of this type should be serialized\n//   to a string representation for debugging (e.g. in error messages).\n\n// MarkSpec:: interface\n//\n//   attrs:: ?Object<AttributeSpec>\n//   The attributes that marks of this type get.\n//\n//   inclusive:: ?bool\n//   Whether this mark should be active when the cursor is positioned\n//   at its end (or at its start when that is also the start of the\n//   parent node). Defaults to true.\n//\n//   excludes:: ?string\n//   Determines which other marks this mark can coexist with. Should\n//   be a space-separated strings naming other marks or groups of marks.\n//   When a mark is [added](#model.Mark.addToSet) to a set, all marks\n//   that it excludes are removed in the process. If the set contains\n//   any mark that excludes the new mark but is not, itself, excluded\n//   by the new mark, the mark can not be added an the set. You can\n//   use the value `\"_\"` to indicate that the mark excludes all\n//   marks in the schema.\n//\n//   Defaults to only being exclusive with marks of the same type. You\n//   can set it to an empty string (or any string not containing the\n//   mark's own name) to allow multiple marks of a given type to\n//   coexist (as long as they have different attributes).\n//\n//   group:: ?string\n//   The group or space-separated groups to which this mark belongs.\n//\n//   spanning:: ?bool\n//   Determines whether marks of this type can span multiple adjacent\n//   nodes when serialized to DOM/HTML. Defaults to true.\n//\n//   toDOM:: ?(mark: Mark, inline: bool) → DOMOutputSpec\n//   Defines the default way marks of this type should be serialized\n//   to DOM/HTML. When the resulting spec contains a hole, that is\n//   where the marked content is placed. Otherwise, it is appended to\n//   the top node.\n//\n//   parseDOM:: ?[ParseRule]\n//   Associates DOM parser information with this mark (see the\n//   corresponding [node spec field](#model.NodeSpec.parseDOM)). The\n//   `mark` field in the rules is implied.\n\n// AttributeSpec:: interface\n//\n// Used to [define](#model.NodeSpec.attrs) attributes on nodes or\n// marks.\n//\n//   default:: ?any\n//   The default value for this attribute, to use when no explicit\n//   value is provided. Attributes that have no default must be\n//   provided whenever a node or mark of a type that has them is\n//   created.\n\n// ::- A document schema. Holds [node](#model.NodeType) and [mark\n// type](#model.MarkType) objects for the nodes and marks that may\n// occur in conforming documents, and provides functionality for\n// creating and deserializing such documents.\nvar Schema = function Schema(spec) {\n  // :: SchemaSpec\n  // The [spec](#model.SchemaSpec) on which the schema is based,\n  // with the added guarantee that its `nodes` and `marks`\n  // properties are\n  // [`OrderedMap`](https://github.com/marijnh/orderedmap) instances\n  // (not raw objects).\n  this.spec = {};\n  for (var prop in spec) { this.spec[prop] = spec[prop]; }\n  this.spec.nodes = OrderedMap.from(spec.nodes);\n  this.spec.marks = OrderedMap.from(spec.marks);\n\n  // :: Object<NodeType>\n  // An object mapping the schema's node names to node type objects.\n  this.nodes = NodeType.compile(this.spec.nodes, this);\n\n  // :: Object<MarkType>\n  // A map from mark names to mark type objects.\n  this.marks = MarkType.compile(this.spec.marks, this);\n\n  var contentExprCache = Object.create(null);\n  for (var prop$1 in this.nodes) {\n    if (prop$1 in this.marks)\n      { throw new RangeError(prop$1 + \" can not be both a node and a mark\") }\n    var type = this.nodes[prop$1], contentExpr = type.spec.content || \"\", markExpr = type.spec.marks;\n    type.contentMatch = contentExprCache[contentExpr] ||\n      (contentExprCache[contentExpr] = ContentMatch.parse(contentExpr, this.nodes));\n    type.inlineContent = type.contentMatch.inlineContent;\n    type.markSet = markExpr == \"_\" ? null :\n      markExpr ? gatherMarks(this, markExpr.split(\" \")) :\n      markExpr == \"\" || !type.inlineContent ? [] : null;\n  }\n  for (var prop$2 in this.marks) {\n    var type$1 = this.marks[prop$2], excl = type$1.spec.excludes;\n    type$1.excluded = excl == null ? [type$1] : excl == \"\" ? [] : gatherMarks(this, excl.split(\" \"));\n  }\n\n  this.nodeFromJSON = this.nodeFromJSON.bind(this);\n  this.markFromJSON = this.markFromJSON.bind(this);\n\n  // :: NodeType\n  // The type of the [default top node](#model.SchemaSpec.topNode)\n  // for this schema.\n  this.topNodeType = this.nodes[this.spec.topNode || \"doc\"];\n\n  // :: Object\n  // An object for storing whatever values modules may want to\n  // compute and cache per schema. (If you want to store something\n  // in it, try to use property names unlikely to clash.)\n  this.cached = Object.create(null);\n  this.cached.wrappings = Object.create(null);\n};\n\n// :: (union<string, NodeType>, ?Object, ?union<Fragment, Node, [Node]>, ?[Mark]) → Node\n// Create a node in this schema. The `type` may be a string or a\n// `NodeType` instance. Attributes will be extended\n// with defaults, `content` may be a `Fragment`,\n// `null`, a `Node`, or an array of nodes.\nSchema.prototype.node = function node (type, attrs, content, marks) {\n  if (typeof type == \"string\")\n    { type = this.nodeType(type); }\n  else if (!(type instanceof NodeType))\n    { throw new RangeError(\"Invalid node type: \" + type) }\n  else if (type.schema != this)\n    { throw new RangeError(\"Node type from different schema used (\" + type.name + \")\") }\n\n  return type.createChecked(attrs, content, marks)\n};\n\n// :: (string, ?[Mark]) → Node\n// Create a text node in the schema. Empty text nodes are not\n// allowed.\nSchema.prototype.text = function text (text$1, marks) {\n  var type = this.nodes.text;\n  return new TextNode(type, type.defaultAttrs, text$1, Mark.setFrom(marks))\n};\n\n// :: (union<string, MarkType>, ?Object) → Mark\n// Create a mark with the given type and attributes.\nSchema.prototype.mark = function mark (type, attrs) {\n  if (typeof type == \"string\") { type = this.marks[type]; }\n  return type.create(attrs)\n};\n\n// :: (Object) → Node\n// Deserialize a node from its JSON representation. This method is\n// bound.\nSchema.prototype.nodeFromJSON = function nodeFromJSON (json) {\n  return Node.fromJSON(this, json)\n};\n\n// :: (Object) → Mark\n// Deserialize a mark from its JSON representation. This method is\n// bound.\nSchema.prototype.markFromJSON = function markFromJSON (json) {\n  return Mark.fromJSON(this, json)\n};\n\nSchema.prototype.nodeType = function nodeType (name) {\n  var found = this.nodes[name];\n  if (!found) { throw new RangeError(\"Unknown node type: \" + name) }\n  return found\n};\n\nfunction gatherMarks(schema, marks) {\n  var found = [];\n  for (var i = 0; i < marks.length; i++) {\n    var name = marks[i], mark = schema.marks[name], ok = mark;\n    if (mark) {\n      found.push(mark);\n    } else {\n      for (var prop in schema.marks) {\n        var mark$1 = schema.marks[prop];\n        if (name == \"_\" || (mark$1.spec.group && mark$1.spec.group.split(\" \").indexOf(name) > -1))\n          { found.push(ok = mark$1); }\n      }\n    }\n    if (!ok) { throw new SyntaxError(\"Unknown mark type: '\" + marks[i] + \"'\") }\n  }\n  return found\n}\n\n// ParseOptions:: interface\n// These are the options recognized by the\n// [`parse`](#model.DOMParser.parse) and\n// [`parseSlice`](#model.DOMParser.parseSlice) methods.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   By default, whitespace is collapsed as per HTML's rules. Pass\n//   `true` to preserve whitespace, but normalize newlines to\n//   spaces, and `\"full\"` to preserve whitespace entirely.\n//\n//   findPositions:: ?[{node: dom.Node, offset: number}]\n//   When given, the parser will, beside parsing the content,\n//   record the document positions of the given DOM positions. It\n//   will do so by writing to the objects, adding a `pos` property\n//   that holds the document position. DOM positions that are not\n//   in the parsed content will not be written to.\n//\n//   from:: ?number\n//   The child node index to start parsing from.\n//\n//   to:: ?number\n//   The child node index to stop parsing at.\n//\n//   topNode:: ?Node\n//   By default, the content is parsed into the schema's default\n//   [top node type](#model.Schema.topNodeType). You can pass this\n//   option to use the type and attributes from a different node\n//   as the top container.\n//\n//   topMatch:: ?ContentMatch\n//   Provide the starting content match that content parsed into the\n//   top node is matched against.\n//\n//   context:: ?ResolvedPos\n//   A set of additional nodes to count as\n//   [context](#model.ParseRule.context) when parsing, above the\n//   given [top node](#model.ParseOptions.topNode).\n\n// ParseRule:: interface\n// A value that describes how to parse a given DOM node or inline\n// style as a ProseMirror node or mark.\n//\n//   tag:: ?string\n//   A CSS selector describing the kind of DOM elements to match. A\n//   single rule should have _either_ a `tag` or a `style` property.\n//\n//   namespace:: ?string\n//   The namespace to match. This should be used with `tag`.\n//   Nodes are only matched when the namespace matches or this property\n//   is null.\n//\n//   style:: ?string\n//   A CSS property name to match. When given, this rule matches\n//   inline styles that list that property. May also have the form\n//   `\"property=value\"`, in which case the rule only matches if the\n//   property's value exactly matches the given value. (For more\n//   complicated filters, use [`getAttrs`](#model.ParseRule.getAttrs)\n//   and return false to indicate that the match failed.) Rules\n//   matching styles may only produce [marks](#model.ParseRule.mark),\n//   not nodes.\n//\n//   priority:: ?number\n//   Can be used to change the order in which the parse rules in a\n//   schema are tried. Those with higher priority come first. Rules\n//   without a priority are counted as having priority 50. This\n//   property is only meaningful in a schema—when directly\n//   constructing a parser, the order of the rule array is used.\n//\n//   consuming:: ?boolean\n//   By default, when a rule matches an element or style, no further\n//   rules get a chance to match it. By setting this to `false`, you\n//   indicate that even when this rule matches, other rules that come\n//   after it should also run.\n//\n//   context:: ?string\n//   When given, restricts this rule to only match when the current\n//   context—the parent nodes into which the content is being\n//   parsed—matches this expression. Should contain one or more node\n//   names or node group names followed by single or double slashes.\n//   For example `\"paragraph/\"` means the rule only matches when the\n//   parent node is a paragraph, `\"blockquote/paragraph/\"` restricts\n//   it to be in a paragraph that is inside a blockquote, and\n//   `\"section//\"` matches any position inside a section—a double\n//   slash matches any sequence of ancestor nodes. To allow multiple\n//   different contexts, they can be separated by a pipe (`|`)\n//   character, as in `\"blockquote/|list_item/\"`.\n//\n//   node:: ?string\n//   The name of the node type to create when this rule matches. Only\n//   valid for rules with a `tag` property, not for style rules. Each\n//   rule should have one of a `node`, `mark`, or `ignore` property\n//   (except when it appears in a [node](#model.NodeSpec.parseDOM) or\n//   [mark spec](#model.MarkSpec.parseDOM), in which case the `node`\n//   or `mark` property will be derived from its position).\n//\n//   mark:: ?string\n//   The name of the mark type to wrap the matched content in.\n//\n//   ignore:: ?bool\n//   When true, ignore content that matches this rule.\n//\n//   closeParent:: ?bool\n//   When true, finding an element that matches this rule will close\n//   the current node.\n//\n//   skip:: ?bool\n//   When true, ignore the node that matches this rule, but do parse\n//   its content.\n//\n//   attrs:: ?Object\n//   Attributes for the node or mark created by this rule. When\n//   `getAttrs` is provided, it takes precedence.\n//\n//   getAttrs:: ?(union<dom.Node, string>) → ?union<Object, false>\n//   A function used to compute the attributes for the node or mark\n//   created by this rule. Can also be used to describe further\n//   conditions the DOM element or style must match. When it returns\n//   `false`, the rule won't match. When it returns null or undefined,\n//   that is interpreted as an empty/default set of attributes.\n//\n//   Called with a DOM Element for `tag` rules, and with a string (the\n//   style's value) for `style` rules.\n//\n//   contentElement:: ?union<string, (dom.Node) → dom.Node>\n//   For `tag` rules that produce non-leaf nodes or marks, by default\n//   the content of the DOM element is parsed as content of the mark\n//   or node. If the child nodes are in a descendent node, this may be\n//   a CSS selector string that the parser must use to find the actual\n//   content element, or a function that returns the actual content\n//   element to the parser.\n//\n//   getContent:: ?(dom.Node, schema: Schema) → Fragment\n//   Can be used to override the content of a matched node. When\n//   present, instead of parsing the node's child nodes, the result of\n//   this function is used.\n//\n//   preserveWhitespace:: ?union<bool, \"full\">\n//   Controls whether whitespace should be preserved when parsing the\n//   content inside the matched element. `false` means whitespace may\n//   be collapsed, `true` means that whitespace should be preserved\n//   but newlines normalized to spaces, and `\"full\"` means that\n//   newlines should also be preserved.\n\n// ::- A DOM parser represents a strategy for parsing DOM content into\n// a ProseMirror document conforming to a given schema. Its behavior\n// is defined by an array of [rules](#model.ParseRule).\nvar DOMParser = function DOMParser(schema, rules) {\n  var this$1 = this;\n\n  // :: Schema\n  // The schema into which the parser parses.\n  this.schema = schema;\n  // :: [ParseRule]\n  // The set of [parse rules](#model.ParseRule) that the parser\n  // uses, in order of precedence.\n  this.rules = rules;\n  this.tags = [];\n  this.styles = [];\n\n  rules.forEach(function (rule) {\n    if (rule.tag) { this$1.tags.push(rule); }\n    else if (rule.style) { this$1.styles.push(rule); }\n  });\n\n  // Only normalize list elements when lists in the schema can't directly contain themselves\n  this.normalizeLists = !this.tags.some(function (r) {\n    if (!/^(ul|ol)\\b/.test(r.tag) || !r.node) { return false }\n    var node = schema.nodes[r.node];\n    return node.contentMatch.matchType(node)\n  });\n};\n\n// :: (dom.Node, ?ParseOptions) → Node\n// Parse a document from the content of a DOM node.\nDOMParser.prototype.parse = function parse (dom, options) {\n    if ( options === void 0 ) options = {};\n\n  var context = new ParseContext(this, options, false);\n  context.addAll(dom, null, options.from, options.to);\n  return context.finish()\n};\n\n// :: (dom.Node, ?ParseOptions) → Slice\n// Parses the content of the given DOM node, like\n// [`parse`](#model.DOMParser.parse), and takes the same set of\n// options. But unlike that method, which produces a whole node,\n// this one returns a slice that is open at the sides, meaning that\n// the schema constraints aren't applied to the start of nodes to\n// the left of the input and the end of nodes at the end.\nDOMParser.prototype.parseSlice = function parseSlice (dom, options) {\n    if ( options === void 0 ) options = {};\n\n  var context = new ParseContext(this, options, true);\n  context.addAll(dom, null, options.from, options.to);\n  return Slice.maxOpen(context.finish())\n};\n\nDOMParser.prototype.matchTag = function matchTag (dom, context, after) {\n  for (var i = after ? this.tags.indexOf(after) + 1 : 0; i < this.tags.length; i++) {\n    var rule = this.tags[i];\n    if (matches(dom, rule.tag) &&\n        (rule.namespace === undefined || dom.namespaceURI == rule.namespace) &&\n        (!rule.context || context.matchesContext(rule.context))) {\n      if (rule.getAttrs) {\n        var result = rule.getAttrs(dom);\n        if (result === false) { continue }\n        rule.attrs = result;\n      }\n      return rule\n    }\n  }\n};\n\nDOMParser.prototype.matchStyle = function matchStyle (prop, value, context, after) {\n  for (var i = after ? this.styles.indexOf(after) + 1 : 0; i < this.styles.length; i++) {\n    var rule = this.styles[i];\n    if (rule.style.indexOf(prop) != 0 ||\n        rule.context && !context.matchesContext(rule.context) ||\n        // Test that the style string either precisely matches the prop,\n        // or has an '=' sign after the prop, followed by the given\n        // value.\n        rule.style.length > prop.length &&\n        (rule.style.charCodeAt(prop.length) != 61 || rule.style.slice(prop.length + 1) != value))\n      { continue }\n    if (rule.getAttrs) {\n      var result = rule.getAttrs(value);\n      if (result === false) { continue }\n      rule.attrs = result;\n    }\n    return rule\n  }\n};\n\n// : (Schema) → [ParseRule]\nDOMParser.schemaRules = function schemaRules (schema) {\n  var result = [];\n  function insert(rule) {\n    var priority = rule.priority == null ? 50 : rule.priority, i = 0;\n    for (; i < result.length; i++) {\n      var next = result[i], nextPriority = next.priority == null ? 50 : next.priority;\n      if (nextPriority < priority) { break }\n    }\n    result.splice(i, 0, rule);\n  }\n\n  var loop = function ( name ) {\n    var rules = schema.marks[name].spec.parseDOM;\n    if (rules) { rules.forEach(function (rule) {\n      insert(rule = copy(rule));\n      rule.mark = name;\n    }); }\n  };\n\n    for (var name in schema.marks) loop( name );\n  var loop$1 = function ( name ) {\n    var rules$1 = schema.nodes[name$1].spec.parseDOM;\n    if (rules$1) { rules$1.forEach(function (rule) {\n      insert(rule = copy(rule));\n      rule.node = name$1;\n    }); }\n  };\n\n    for (var name$1 in schema.nodes) loop$1();\n  return result\n};\n\n// :: (Schema) → DOMParser\n// Construct a DOM parser using the parsing rules listed in a\n// schema's [node specs](#model.NodeSpec.parseDOM), reordered by\n// [priority](#model.ParseRule.priority).\nDOMParser.fromSchema = function fromSchema (schema) {\n  return schema.cached.domParser ||\n    (schema.cached.domParser = new DOMParser(schema, DOMParser.schemaRules(schema)))\n};\n\n// : Object<bool> The block-level tags in HTML5\nvar blockTags = {\n  address: true, article: true, aside: true, blockquote: true, canvas: true,\n  dd: true, div: true, dl: true, fieldset: true, figcaption: true, figure: true,\n  footer: true, form: true, h1: true, h2: true, h3: true, h4: true, h5: true,\n  h6: true, header: true, hgroup: true, hr: true, li: true, noscript: true, ol: true,\n  output: true, p: true, pre: true, section: true, table: true, tfoot: true, ul: true\n};\n\n// : Object<bool> The tags that we normally ignore.\nvar ignoreTags = {\n  head: true, noscript: true, object: true, script: true, style: true, title: true\n};\n\n// : Object<bool> List tags.\nvar listTags = {ol: true, ul: true};\n\n// Using a bitfield for node context options\nvar OPT_PRESERVE_WS = 1, OPT_PRESERVE_WS_FULL = 2, OPT_OPEN_LEFT = 4;\n\nfunction wsOptionsFor(type, preserveWhitespace, base) {\n  if (preserveWhitespace != null) { return (preserveWhitespace ? OPT_PRESERVE_WS : 0) |\n    (preserveWhitespace === \"full\" ? OPT_PRESERVE_WS_FULL : 0) }\n  return type && type.whitespace == \"pre\" ? OPT_PRESERVE_WS | OPT_PRESERVE_WS_FULL : base & ~OPT_OPEN_LEFT\n}\n\nvar NodeContext = function NodeContext(type, attrs, marks, pendingMarks, solid, match, options) {\n  this.type = type;\n  this.attrs = attrs;\n  this.solid = solid;\n  this.match = match || (options & OPT_OPEN_LEFT ? null : type.contentMatch);\n  this.options = options;\n  this.content = [];\n  // Marks applied to this node itself\n  this.marks = marks;\n  // Marks applied to its children\n  this.activeMarks = Mark.none;\n  // Marks that can't apply here, but will be used in children if possible\n  this.pendingMarks = pendingMarks;\n  // Nested Marks with same type\n  this.stashMarks = [];\n};\n\nNodeContext.prototype.findWrapping = function findWrapping (node) {\n  if (!this.match) {\n    if (!this.type) { return [] }\n    var fill = this.type.contentMatch.fillBefore(Fragment.from(node));\n    if (fill) {\n      this.match = this.type.contentMatch.matchFragment(fill);\n    } else {\n      var start = this.type.contentMatch, wrap;\n      if (wrap = start.findWrapping(node.type)) {\n        this.match = start;\n        return wrap\n      } else {\n        return null\n      }\n    }\n  }\n  return this.match.findWrapping(node.type)\n};\n\nNodeContext.prototype.finish = function finish (openEnd) {\n  if (!(this.options & OPT_PRESERVE_WS)) { // Strip trailing whitespace\n    var last = this.content[this.content.length - 1], m;\n    if (last && last.isText && (m = /[ \\t\\r\\n\\u000c]+$/.exec(last.text))) {\n      if (last.text.length == m[0].length) { this.content.pop(); }\n      else { this.content[this.content.length - 1] = last.withText(last.text.slice(0, last.text.length - m[0].length)); }\n    }\n  }\n  var content = Fragment.from(this.content);\n  if (!openEnd && this.match)\n    { content = content.append(this.match.fillBefore(Fragment.empty, true)); }\n  return this.type ? this.type.create(this.attrs, content, this.marks) : content\n};\n\nNodeContext.prototype.popFromStashMark = function popFromStashMark (mark) {\n  for (var i = this.stashMarks.length - 1; i >= 0; i--)\n    { if (mark.eq(this.stashMarks[i])) { return this.stashMarks.splice(i, 1)[0] } }\n};\n\nNodeContext.prototype.applyPending = function applyPending (nextType) {\n  for (var i = 0, pending = this.pendingMarks; i < pending.length; i++) {\n    var mark = pending[i];\n    if ((this.type ? this.type.allowsMarkType(mark.type) : markMayApply(mark.type, nextType)) &&\n        !mark.isInSet(this.activeMarks)) {\n      this.activeMarks = mark.addToSet(this.activeMarks);\n      this.pendingMarks = mark.removeFromSet(this.pendingMarks);\n    }\n  }\n};\n\nNodeContext.prototype.inlineContext = function inlineContext (node) {\n  if (this.type) { return this.type.inlineContent }\n  if (this.content.length) { return this.content[0].isInline }\n  return node.parentNode && !blockTags.hasOwnProperty(node.parentNode.nodeName.toLowerCase())\n};\n\nvar ParseContext = function ParseContext(parser, options, open) {\n  // : DOMParser The parser we are using.\n  this.parser = parser;\n  // : Object The options passed to this parse.\n  this.options = options;\n  this.isOpen = open;\n  var topNode = options.topNode, topContext;\n  var topOptions = wsOptionsFor(null, options.preserveWhitespace, 0) | (open ? OPT_OPEN_LEFT : 0);\n  if (topNode)\n    { topContext = new NodeContext(topNode.type, topNode.attrs, Mark.none, Mark.none, true,\n                                 options.topMatch || topNode.type.contentMatch, topOptions); }\n  else if (open)\n    { topContext = new NodeContext(null, null, Mark.none, Mark.none, true, null, topOptions); }\n  else\n    { topContext = new NodeContext(parser.schema.topNodeType, null, Mark.none, Mark.none, true, null, topOptions); }\n  this.nodes = [topContext];\n  // : [Mark] The current set of marks\n  this.open = 0;\n  this.find = options.findPositions;\n  this.needsBlock = false;\n};\n\nvar prototypeAccessors$6 = { top: { configurable: true },currentPos: { configurable: true } };\n\nprototypeAccessors$6.top.get = function () {\n  return this.nodes[this.open]\n};\n\n// : (dom.Node)\n// Add a DOM node to the content. Text is inserted as text node,\n// otherwise, the node is passed to `addElement` or, if it has a\n// `style` attribute, `addElementWithStyles`.\nParseContext.prototype.addDOM = function addDOM (dom) {\n  if (dom.nodeType == 3) {\n    this.addTextNode(dom);\n  } else if (dom.nodeType == 1) {\n    var style = dom.getAttribute(\"style\");\n    var marks = style ? this.readStyles(parseStyles(style)) : null, top = this.top;\n    if (marks != null) { for (var i = 0; i < marks.length; i++) { this.addPendingMark(marks[i]); } }\n    this.addElement(dom);\n    if (marks != null) { for (var i$1 = 0; i$1 < marks.length; i$1++) { this.removePendingMark(marks[i$1], top); } }\n  }\n};\n\nParseContext.prototype.addTextNode = function addTextNode (dom) {\n  var value = dom.nodeValue;\n  var top = this.top;\n  if (top.options & OPT_PRESERVE_WS_FULL ||\n      top.inlineContext(dom) ||\n      /[^ \\t\\r\\n\\u000c]/.test(value)) {\n    if (!(top.options & OPT_PRESERVE_WS)) {\n      value = value.replace(/[ \\t\\r\\n\\u000c]+/g, \" \");\n      // If this starts with whitespace, and there is no node before it, or\n      // a hard break, or a text node that ends with whitespace, strip the\n      // leading space.\n      if (/^[ \\t\\r\\n\\u000c]/.test(value) && this.open == this.nodes.length - 1) {\n        var nodeBefore = top.content[top.content.length - 1];\n        var domNodeBefore = dom.previousSibling;\n        if (!nodeBefore ||\n            (domNodeBefore && domNodeBefore.nodeName == 'BR') ||\n            (nodeBefore.isText && /[ \\t\\r\\n\\u000c]$/.test(nodeBefore.text)))\n          { value = value.slice(1); }\n      }\n    } else if (!(top.options & OPT_PRESERVE_WS_FULL)) {\n      value = value.replace(/\\r?\\n|\\r/g, \" \");\n    } else {\n      value = value.replace(/\\r\\n?/g, \"\\n\");\n    }\n    if (value) { this.insertNode(this.parser.schema.text(value)); }\n    this.findInText(dom);\n  } else {\n    this.findInside(dom);\n  }\n};\n\n// : (dom.Element, ?ParseRule)\n// Try to find a handler for the given tag and use that to parse. If\n// none is found, the element's content nodes are added directly.\nParseContext.prototype.addElement = function addElement (dom, matchAfter) {\n  var name = dom.nodeName.toLowerCase(), ruleID;\n  if (listTags.hasOwnProperty(name) && this.parser.normalizeLists) { normalizeList(dom); }\n  var rule = (this.options.ruleFromNode && this.options.ruleFromNode(dom)) ||\n      (ruleID = this.parser.matchTag(dom, this, matchAfter));\n  if (rule ? rule.ignore : ignoreTags.hasOwnProperty(name)) {\n    this.findInside(dom);\n    this.ignoreFallback(dom);\n  } else if (!rule || rule.skip || rule.closeParent) {\n    if (rule && rule.closeParent) { this.open = Math.max(0, this.open - 1); }\n    else if (rule && rule.skip.nodeType) { dom = rule.skip; }\n    var sync, top = this.top, oldNeedsBlock = this.needsBlock;\n    if (blockTags.hasOwnProperty(name)) {\n      sync = true;\n      if (!top.type) { this.needsBlock = true; }\n    } else if (!dom.firstChild) {\n      this.leafFallback(dom);\n      return\n    }\n    this.addAll(dom);\n    if (sync) { this.sync(top); }\n    this.needsBlock = oldNeedsBlock;\n  } else {\n    this.addElementByRule(dom, rule, rule.consuming === false ? ruleID : null);\n  }\n};\n\n// Called for leaf DOM nodes that would otherwise be ignored\nParseContext.prototype.leafFallback = function leafFallback (dom) {\n  if (dom.nodeName == \"BR\" && this.top.type && this.top.type.inlineContent)\n    { this.addTextNode(dom.ownerDocument.createTextNode(\"\\n\")); }\n};\n\n// Called for ignored nodes\nParseContext.prototype.ignoreFallback = function ignoreFallback (dom) {\n  // Ignored BR nodes should at least create an inline context\n  if (dom.nodeName == \"BR\" && (!this.top.type || !this.top.type.inlineContent))\n    { this.findPlace(this.parser.schema.text(\"-\")); }\n};\n\n// Run any style parser associated with the node's styles. Either\n// return an array of marks, or null to indicate some of the styles\n// had a rule with `ignore` set.\nParseContext.prototype.readStyles = function readStyles (styles) {\n  var marks = Mark.none;\n  style: for (var i = 0; i < styles.length; i += 2) {\n    for (var after = null;;) {\n      var rule = this.parser.matchStyle(styles[i], styles[i + 1], this, after);\n      if (!rule) { continue style }\n      if (rule.ignore) { return null }\n      marks = this.parser.schema.marks[rule.mark].create(rule.attrs).addToSet(marks);\n      if (rule.consuming === false) { after = rule; }\n      else { break }\n    }\n  }\n  return marks\n};\n\n// : (dom.Element, ParseRule) → bool\n// Look up a handler for the given node. If none are found, return\n// false. Otherwise, apply it, use its return value to drive the way\n// the node's content is wrapped, and return true.\nParseContext.prototype.addElementByRule = function addElementByRule (dom, rule, continueAfter) {\n    var this$1 = this;\n\n  var sync, nodeType, markType, mark;\n  if (rule.node) {\n    nodeType = this.parser.schema.nodes[rule.node];\n    if (!nodeType.isLeaf) {\n      sync = this.enter(nodeType, rule.attrs, rule.preserveWhitespace);\n    } else if (!this.insertNode(nodeType.create(rule.attrs))) {\n      this.leafFallback(dom);\n    }\n  } else {\n    markType = this.parser.schema.marks[rule.mark];\n    mark = markType.create(rule.attrs);\n    this.addPendingMark(mark);\n  }\n  var startIn = this.top;\n\n  if (nodeType && nodeType.isLeaf) {\n    this.findInside(dom);\n  } else if (continueAfter) {\n    this.addElement(dom, continueAfter);\n  } else if (rule.getContent) {\n    this.findInside(dom);\n    rule.getContent(dom, this.parser.schema).forEach(function (node) { return this$1.insertNode(node); });\n  } else {\n    var contentDOM = rule.contentElement;\n    if (typeof contentDOM == \"string\") { contentDOM = dom.querySelector(contentDOM); }\n    else if (typeof contentDOM == \"function\") { contentDOM = contentDOM(dom); }\n    if (!contentDOM) { contentDOM = dom; }\n    this.findAround(dom, contentDOM, true);\n    this.addAll(contentDOM, sync);\n  }\n  if (sync) { this.sync(startIn); this.open--; }\n  if (mark) { this.removePendingMark(mark, startIn); }\n};\n\n// : (dom.Node, ?NodeBuilder, ?number, ?number)\n// Add all child nodes between `startIndex` and `endIndex` (or the\n// whole node, if not given). If `sync` is passed, use it to\n// synchronize after every block element.\nParseContext.prototype.addAll = function addAll (parent, sync, startIndex, endIndex) {\n  var index = startIndex || 0;\n  for (var dom = startIndex ? parent.childNodes[startIndex] : parent.firstChild,\n           end = endIndex == null ? null : parent.childNodes[endIndex];\n       dom != end; dom = dom.nextSibling, ++index) {\n    this.findAtPoint(parent, index);\n    this.addDOM(dom);\n    if (sync && blockTags.hasOwnProperty(dom.nodeName.toLowerCase()))\n      { this.sync(sync); }\n  }\n  this.findAtPoint(parent, index);\n};\n\n// Try to find a way to fit the given node type into the current\n// context. May add intermediate wrappers and/or leave non-solid\n// nodes that we're in.\nParseContext.prototype.findPlace = function findPlace (node) {\n  var route, sync;\n  for (var depth = this.open; depth >= 0; depth--) {\n    var cx = this.nodes[depth];\n    var found = cx.findWrapping(node);\n    if (found && (!route || route.length > found.length)) {\n      route = found;\n      sync = cx;\n      if (!found.length) { break }\n    }\n    if (cx.solid) { break }\n  }\n  if (!route) { return false }\n  this.sync(sync);\n  for (var i = 0; i < route.length; i++)\n    { this.enterInner(route[i], null, false); }\n  return true\n};\n\n// : (Node) → ?Node\n// Try to insert the given node, adjusting the context when needed.\nParseContext.prototype.insertNode = function insertNode (node) {\n  if (node.isInline && this.needsBlock && !this.top.type) {\n    var block = this.textblockFromContext();\n    if (block) { this.enterInner(block); }\n  }\n  if (this.findPlace(node)) {\n    this.closeExtra();\n    var top = this.top;\n    top.applyPending(node.type);\n    if (top.match) { top.match = top.match.matchType(node.type); }\n    var marks = top.activeMarks;\n    for (var i = 0; i < node.marks.length; i++)\n      { if (!top.type || top.type.allowsMarkType(node.marks[i].type))\n        { marks = node.marks[i].addToSet(marks); } }\n    top.content.push(node.mark(marks));\n    return true\n  }\n  return false\n};\n\n// : (NodeType, ?Object) → bool\n// Try to start a node of the given type, adjusting the context when\n// necessary.\nParseContext.prototype.enter = function enter (type, attrs, preserveWS) {\n  var ok = this.findPlace(type.create(attrs));\n  if (ok) { this.enterInner(type, attrs, true, preserveWS); }\n  return ok\n};\n\n// Open a node of the given type\nParseContext.prototype.enterInner = function enterInner (type, attrs, solid, preserveWS) {\n  this.closeExtra();\n  var top = this.top;\n  top.applyPending(type);\n  top.match = top.match && top.match.matchType(type, attrs);\n  var options = wsOptionsFor(type, preserveWS, top.options);\n  if ((top.options & OPT_OPEN_LEFT) && top.content.length == 0) { options |= OPT_OPEN_LEFT; }\n  this.nodes.push(new NodeContext(type, attrs, top.activeMarks, top.pendingMarks, solid, null, options));\n  this.open++;\n};\n\n// Make sure all nodes above this.open are finished and added to\n// their parents\nParseContext.prototype.closeExtra = function closeExtra (openEnd) {\n  var i = this.nodes.length - 1;\n  if (i > this.open) {\n    for (; i > this.open; i--) { this.nodes[i - 1].content.push(this.nodes[i].finish(openEnd)); }\n    this.nodes.length = this.open + 1;\n  }\n};\n\nParseContext.prototype.finish = function finish () {\n  this.open = 0;\n  this.closeExtra(this.isOpen);\n  return this.nodes[0].finish(this.isOpen || this.options.topOpen)\n};\n\nParseContext.prototype.sync = function sync (to) {\n  for (var i = this.open; i >= 0; i--) { if (this.nodes[i] == to) {\n    this.open = i;\n    return\n  } }\n};\n\nprototypeAccessors$6.currentPos.get = function () {\n  this.closeExtra();\n  var pos = 0;\n  for (var i = this.open; i >= 0; i--) {\n    var content = this.nodes[i].content;\n    for (var j = content.length - 1; j >= 0; j--)\n      { pos += content[j].nodeSize; }\n    if (i) { pos++; }\n  }\n  return pos\n};\n\nParseContext.prototype.findAtPoint = function findAtPoint (parent, offset) {\n  if (this.find) { for (var i = 0; i < this.find.length; i++) {\n    if (this.find[i].node == parent && this.find[i].offset == offset)\n      { this.find[i].pos = this.currentPos; }\n  } }\n};\n\nParseContext.prototype.findInside = function findInside (parent) {\n  if (this.find) { for (var i = 0; i < this.find.length; i++) {\n    if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node))\n      { this.find[i].pos = this.currentPos; }\n  } }\n};\n\nParseContext.prototype.findAround = function findAround (parent, content, before) {\n  if (parent != content && this.find) { for (var i = 0; i < this.find.length; i++) {\n    if (this.find[i].pos == null && parent.nodeType == 1 && parent.contains(this.find[i].node)) {\n      var pos = content.compareDocumentPosition(this.find[i].node);\n      if (pos & (before ? 2 : 4))\n        { this.find[i].pos = this.currentPos; }\n    }\n  } }\n};\n\nParseContext.prototype.findInText = function findInText (textNode) {\n  if (this.find) { for (var i = 0; i < this.find.length; i++) {\n    if (this.find[i].node == textNode)\n      { this.find[i].pos = this.currentPos - (textNode.nodeValue.length - this.find[i].offset); }\n  } }\n};\n\n// : (string) → bool\n// Determines whether the given [context\n// string](#ParseRule.context) matches this context.\nParseContext.prototype.matchesContext = function matchesContext (context) {\n    var this$1 = this;\n\n  if (context.indexOf(\"|\") > -1)\n    { return context.split(/\\s*\\|\\s*/).some(this.matchesContext, this) }\n\n  var parts = context.split(\"/\");\n  var option = this.options.context;\n  var useRoot = !this.isOpen && (!option || option.parent.type == this.nodes[0].type);\n  var minDepth = -(option ? option.depth + 1 : 0) + (useRoot ? 0 : 1);\n  var match = function (i, depth) {\n    for (; i >= 0; i--) {\n      var part = parts[i];\n      if (part == \"\") {\n        if (i == parts.length - 1 || i == 0) { continue }\n        for (; depth >= minDepth; depth--)\n          { if (match(i - 1, depth)) { return true } }\n        return false\n      } else {\n        var next = depth > 0 || (depth == 0 && useRoot) ? this$1.nodes[depth].type\n            : option && depth >= minDepth ? option.node(depth - minDepth).type\n            : null;\n        if (!next || (next.name != part && next.groups.indexOf(part) == -1))\n          { return false }\n        depth--;\n      }\n    }\n    return true\n  };\n  return match(parts.length - 1, this.open)\n};\n\nParseContext.prototype.textblockFromContext = function textblockFromContext () {\n  var $context = this.options.context;\n  if ($context) { for (var d = $context.depth; d >= 0; d--) {\n    var deflt = $context.node(d).contentMatchAt($context.indexAfter(d)).defaultType;\n    if (deflt && deflt.isTextblock && deflt.defaultAttrs) { return deflt }\n  } }\n  for (var name in this.parser.schema.nodes) {\n    var type = this.parser.schema.nodes[name];\n    if (type.isTextblock && type.defaultAttrs) { return type }\n  }\n};\n\nParseContext.prototype.addPendingMark = function addPendingMark (mark) {\n  var found = findSameMarkInSet(mark, this.top.pendingMarks);\n  if (found) { this.top.stashMarks.push(found); }\n  this.top.pendingMarks = mark.addToSet(this.top.pendingMarks);\n};\n\nParseContext.prototype.removePendingMark = function removePendingMark (mark, upto) {\n  for (var depth = this.open; depth >= 0; depth--) {\n    var level = this.nodes[depth];\n    var found = level.pendingMarks.lastIndexOf(mark);\n    if (found > -1) {\n      level.pendingMarks = mark.removeFromSet(level.pendingMarks);\n    } else {\n      level.activeMarks = mark.removeFromSet(level.activeMarks);\n      var stashMark = level.popFromStashMark(mark);\n      if (stashMark && level.type && level.type.allowsMarkType(stashMark.type))\n        { level.activeMarks = stashMark.addToSet(level.activeMarks); }\n    }\n    if (level == upto) { break }\n  }\n};\n\nObject.defineProperties( ParseContext.prototype, prototypeAccessors$6 );\n\n// Kludge to work around directly nested list nodes produced by some\n// tools and allowed by browsers to mean that the nested list is\n// actually part of the list item above it.\nfunction normalizeList(dom) {\n  for (var child = dom.firstChild, prevItem = null; child; child = child.nextSibling) {\n    var name = child.nodeType == 1 ? child.nodeName.toLowerCase() : null;\n    if (name && listTags.hasOwnProperty(name) && prevItem) {\n      prevItem.appendChild(child);\n      child = prevItem;\n    } else if (name == \"li\") {\n      prevItem = child;\n    } else if (name) {\n      prevItem = null;\n    }\n  }\n}\n\n// Apply a CSS selector.\nfunction matches(dom, selector) {\n  return (dom.matches || dom.msMatchesSelector || dom.webkitMatchesSelector || dom.mozMatchesSelector).call(dom, selector)\n}\n\n// : (string) → [string]\n// Tokenize a style attribute into property/value pairs.\nfunction parseStyles(style) {\n  var re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g, m, result = [];\n  while (m = re.exec(style)) { result.push(m[1], m[2].trim()); }\n  return result\n}\n\nfunction copy(obj) {\n  var copy = {};\n  for (var prop in obj) { copy[prop] = obj[prop]; }\n  return copy\n}\n\n// Used when finding a mark at the top level of a fragment parse.\n// Checks whether it would be reasonable to apply a given mark type to\n// a given node, by looking at the way the mark occurs in the schema.\nfunction markMayApply(markType, nodeType) {\n  var nodes = nodeType.schema.nodes;\n  var loop = function ( name ) {\n    var parent = nodes[name];\n    if (!parent.allowsMarkType(markType)) { return }\n    var seen = [], scan = function (match) {\n      seen.push(match);\n      for (var i = 0; i < match.edgeCount; i++) {\n        var ref = match.edge(i);\n        var type = ref.type;\n        var next = ref.next;\n        if (type == nodeType) { return true }\n        if (seen.indexOf(next) < 0 && scan(next)) { return true }\n      }\n    };\n    if (scan(parent.contentMatch)) { return { v: true } }\n  };\n\n  for (var name in nodes) {\n    var returned = loop( name );\n\n    if ( returned ) return returned.v;\n  }\n}\n\nfunction findSameMarkInSet(mark, set) {\n  for (var i = 0; i < set.length; i++) {\n    if (mark.eq(set[i])) { return set[i] }\n  }\n}\n\n// DOMOutputSpec:: interface\n// A description of a DOM structure. Can be either a string, which is\n// interpreted as a text node, a DOM node, which is interpreted as\n// itself, a `{dom: Node, contentDOM: ?Node}` object, or an array.\n//\n// An array describes a DOM element. The first value in the array\n// should be a string—the name of the DOM element, optionally prefixed\n// by a namespace URL and a space. If the second element is plain\n// object, it is interpreted as a set of attributes for the element.\n// Any elements after that (including the 2nd if it's not an attribute\n// object) are interpreted as children of the DOM elements, and must\n// either be valid `DOMOutputSpec` values, or the number zero.\n//\n// The number zero (pronounced “hole”) is used to indicate the place\n// where a node's child nodes should be inserted. If it occurs in an\n// output spec, it should be the only child element in its parent\n// node.\n\n// ::- A DOM serializer knows how to convert ProseMirror nodes and\n// marks of various types to DOM nodes.\nvar DOMSerializer = function DOMSerializer(nodes, marks) {\n  // :: Object<(node: Node) → DOMOutputSpec>\n  // The node serialization functions.\n  this.nodes = nodes || {};\n  // :: Object<?(mark: Mark, inline: bool) → DOMOutputSpec>\n  // The mark serialization functions.\n  this.marks = marks || {};\n};\n\n// :: (Fragment, ?Object) → dom.DocumentFragment\n// Serialize the content of this fragment to a DOM fragment. When\n// not in the browser, the `document` option, containing a DOM\n// document, should be passed so that the serializer can create\n// nodes.\nDOMSerializer.prototype.serializeFragment = function serializeFragment (fragment, options, target) {\n    var this$1 = this;\n    if ( options === void 0 ) options = {};\n\n  if (!target) { target = doc(options).createDocumentFragment(); }\n\n  var top = target, active = null;\n  fragment.forEach(function (node) {\n    if (active || node.marks.length) {\n      if (!active) { active = []; }\n      var keep = 0, rendered = 0;\n      while (keep < active.length && rendered < node.marks.length) {\n        var next = node.marks[rendered];\n        if (!this$1.marks[next.type.name]) { rendered++; continue }\n        if (!next.eq(active[keep]) || next.type.spec.spanning === false) { break }\n        keep += 2; rendered++;\n      }\n      while (keep < active.length) {\n        top = active.pop();\n        active.pop();\n      }\n      while (rendered < node.marks.length) {\n        var add = node.marks[rendered++];\n        var markDOM = this$1.serializeMark(add, node.isInline, options);\n        if (markDOM) {\n          active.push(add, top);\n          top.appendChild(markDOM.dom);\n          top = markDOM.contentDOM || markDOM.dom;\n        }\n      }\n    }\n    top.appendChild(this$1.serializeNodeInner(node, options));\n  });\n\n  return target\n};\n\nDOMSerializer.prototype.serializeNodeInner = function serializeNodeInner (node, options) {\n    if ( options === void 0 ) options = {};\n\n  var ref =\n      DOMSerializer.renderSpec(doc(options), this.nodes[node.type.name](node));\n    var dom = ref.dom;\n    var contentDOM = ref.contentDOM;\n  if (contentDOM) {\n    if (node.isLeaf)\n      { throw new RangeError(\"Content hole not allowed in a leaf node spec\") }\n    if (options.onContent)\n      { options.onContent(node, contentDOM, options); }\n    else\n      { this.serializeFragment(node.content, options, contentDOM); }\n  }\n  return dom\n};\n\n// :: (Node, ?Object) → dom.Node\n// Serialize this node to a DOM node. This can be useful when you\n// need to serialize a part of a document, as opposed to the whole\n// document. To serialize a whole document, use\n// [`serializeFragment`](#model.DOMSerializer.serializeFragment) on\n// its [content](#model.Node.content).\nDOMSerializer.prototype.serializeNode = function serializeNode (node, options) {\n    if ( options === void 0 ) options = {};\n\n  var dom = this.serializeNodeInner(node, options);\n  for (var i = node.marks.length - 1; i >= 0; i--) {\n    var wrap = this.serializeMark(node.marks[i], node.isInline, options);\n    if (wrap) {\n(wrap.contentDOM || wrap.dom).appendChild(dom);\n      dom = wrap.dom;\n    }\n  }\n  return dom\n};\n\nDOMSerializer.prototype.serializeMark = function serializeMark (mark, inline, options) {\n    if ( options === void 0 ) options = {};\n\n  var toDOM = this.marks[mark.type.name];\n  return toDOM && DOMSerializer.renderSpec(doc(options), toDOM(mark, inline))\n};\n\n// :: (dom.Document, DOMOutputSpec) → {dom: dom.Node, contentDOM: ?dom.Node}\n// Render an [output spec](#model.DOMOutputSpec) to a DOM node. If\n// the spec has a hole (zero) in it, `contentDOM` will point at the\n// node with the hole.\nDOMSerializer.renderSpec = function renderSpec (doc, structure, xmlNS) {\n    if ( xmlNS === void 0 ) xmlNS = null;\n\n  if (typeof structure == \"string\")\n    { return {dom: doc.createTextNode(structure)} }\n  if (structure.nodeType != null)\n    { return {dom: structure} }\n  if (structure.dom && structure.dom.nodeType != null)\n    { return structure }\n  var tagName = structure[0], space = tagName.indexOf(\" \");\n  if (space > 0) {\n    xmlNS = tagName.slice(0, space);\n    tagName = tagName.slice(space + 1);\n  }\n  var contentDOM = null, dom = xmlNS ? doc.createElementNS(xmlNS, tagName) : doc.createElement(tagName);\n  var attrs = structure[1], start = 1;\n  if (attrs && typeof attrs == \"object\" && attrs.nodeType == null && !Array.isArray(attrs)) {\n    start = 2;\n    for (var name in attrs) { if (attrs[name] != null) {\n      var space$1 = name.indexOf(\" \");\n      if (space$1 > 0) { dom.setAttributeNS(name.slice(0, space$1), name.slice(space$1 + 1), attrs[name]); }\n      else { dom.setAttribute(name, attrs[name]); }\n    } }\n  }\n  for (var i = start; i < structure.length; i++) {\n    var child = structure[i];\n    if (child === 0) {\n      if (i < structure.length - 1 || i > start)\n        { throw new RangeError(\"Content hole must be the only child of its parent node\") }\n      return {dom: dom, contentDOM: dom}\n    } else {\n      var ref = DOMSerializer.renderSpec(doc, child, xmlNS);\n        var inner = ref.dom;\n        var innerContent = ref.contentDOM;\n      dom.appendChild(inner);\n      if (innerContent) {\n        if (contentDOM) { throw new RangeError(\"Multiple content holes\") }\n        contentDOM = innerContent;\n      }\n    }\n  }\n  return {dom: dom, contentDOM: contentDOM}\n};\n\n// :: (Schema) → DOMSerializer\n// Build a serializer using the [`toDOM`](#model.NodeSpec.toDOM)\n// properties in a schema's node and mark specs.\nDOMSerializer.fromSchema = function fromSchema (schema) {\n  return schema.cached.domSerializer ||\n    (schema.cached.domSerializer = new DOMSerializer(this.nodesFromSchema(schema), this.marksFromSchema(schema)))\n};\n\n// : (Schema) → Object<(node: Node) → DOMOutputSpec>\n// Gather the serializers in a schema's node specs into an object.\n// This can be useful as a base to build a custom serializer from.\nDOMSerializer.nodesFromSchema = function nodesFromSchema (schema) {\n  var result = gatherToDOM(schema.nodes);\n  if (!result.text) { result.text = function (node) { return node.text; }; }\n  return result\n};\n\n// : (Schema) → Object<(mark: Mark) → DOMOutputSpec>\n// Gather the serializers in a schema's mark specs into an object.\nDOMSerializer.marksFromSchema = function marksFromSchema (schema) {\n  return gatherToDOM(schema.marks)\n};\n\nfunction gatherToDOM(obj) {\n  var result = {};\n  for (var name in obj) {\n    var toDOM = obj[name].spec.toDOM;\n    if (toDOM) { result[name] = toDOM; }\n  }\n  return result\n}\n\nfunction doc(options) {\n  // declare global: window\n  return options.document || window.document\n}\n\nexport { ContentMatch, DOMParser, DOMSerializer, Fragment, Mark, MarkType, Node, NodeRange, NodeType, ReplaceError, ResolvedPos, Schema, Slice };\n","import { findWrapping, ReplaceAroundStep, canSplit, liftTarget } from 'prosemirror-transform';\nimport { NodeRange, Fragment, Slice } from 'prosemirror-model';\n\nvar olDOM = [\"ol\", 0], ulDOM = [\"ul\", 0], liDOM = [\"li\", 0];\n\n// :: NodeSpec\n// An ordered list [node spec](#model.NodeSpec). Has a single\n// attribute, `order`, which determines the number at which the list\n// starts counting, and defaults to 1. Represented as an `<ol>`\n// element.\nvar orderedList = {\n  attrs: {order: {default: 1}},\n  parseDOM: [{tag: \"ol\", getAttrs: function getAttrs(dom) {\n    return {order: dom.hasAttribute(\"start\") ? +dom.getAttribute(\"start\") : 1}\n  }}],\n  toDOM: function toDOM(node) {\n    return node.attrs.order == 1 ? olDOM : [\"ol\", {start: node.attrs.order}, 0]\n  }\n};\n\n// :: NodeSpec\n// A bullet list node spec, represented in the DOM as `<ul>`.\nvar bulletList = {\n  parseDOM: [{tag: \"ul\"}],\n  toDOM: function toDOM() { return ulDOM }\n};\n\n// :: NodeSpec\n// A list item (`<li>`) spec.\nvar listItem = {\n  parseDOM: [{tag: \"li\"}],\n  toDOM: function toDOM() { return liDOM },\n  defining: true\n};\n\nfunction add(obj, props) {\n  var copy = {};\n  for (var prop in obj) { copy[prop] = obj[prop]; }\n  for (var prop$1 in props) { copy[prop$1] = props[prop$1]; }\n  return copy\n}\n\n// :: (OrderedMap<NodeSpec>, string, ?string) → OrderedMap<NodeSpec>\n// Convenience function for adding list-related node types to a map\n// specifying the nodes for a schema. Adds\n// [`orderedList`](#schema-list.orderedList) as `\"ordered_list\"`,\n// [`bulletList`](#schema-list.bulletList) as `\"bullet_list\"`, and\n// [`listItem`](#schema-list.listItem) as `\"list_item\"`.\n//\n// `itemContent` determines the content expression for the list items.\n// If you want the commands defined in this module to apply to your\n// list structure, it should have a shape like `\"paragraph block*\"` or\n// `\"paragraph (ordered_list | bullet_list)*\"`. `listGroup` can be\n// given to assign a group name to the list node types, for example\n// `\"block\"`.\nfunction addListNodes(nodes, itemContent, listGroup) {\n  return nodes.append({\n    ordered_list: add(orderedList, {content: \"list_item+\", group: listGroup}),\n    bullet_list: add(bulletList, {content: \"list_item+\", group: listGroup}),\n    list_item: add(listItem, {content: itemContent})\n  })\n}\n\n// :: (NodeType, ?Object) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Returns a command function that wraps the selection in a list with\n// the given type an attributes. If `dispatch` is null, only return a\n// value to indicate whether this is possible, but don't actually\n// perform the change.\nfunction wrapInList(listType, attrs) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var range = $from.blockRange($to), doJoin = false, outerRange = range;\n    if (!range) { return false }\n    // This is at the top of an existing list item\n    if (range.depth >= 2 && $from.node(range.depth - 1).type.compatibleContent(listType) && range.startIndex == 0) {\n      // Don't do anything if this is the top of the list\n      if ($from.index(range.depth - 1) == 0) { return false }\n      var $insert = state.doc.resolve(range.start - 2);\n      outerRange = new NodeRange($insert, $insert, range.depth);\n      if (range.endIndex < range.parent.childCount)\n        { range = new NodeRange($from, state.doc.resolve($to.end(range.depth)), range.depth); }\n      doJoin = true;\n    }\n    var wrap = findWrapping(outerRange, listType, attrs, range);\n    if (!wrap) { return false }\n    if (dispatch) { dispatch(doWrapInList(state.tr, range, wrap, doJoin, listType).scrollIntoView()); }\n    return true\n  }\n}\n\nfunction doWrapInList(tr, range, wrappers, joinBefore, listType) {\n  var content = Fragment.empty;\n  for (var i = wrappers.length - 1; i >= 0; i--)\n    { content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content)); }\n\n  tr.step(new ReplaceAroundStep(range.start - (joinBefore ? 2 : 0), range.end, range.start, range.end,\n                                new Slice(content, 0, 0), wrappers.length, true));\n\n  var found = 0;\n  for (var i$1 = 0; i$1 < wrappers.length; i$1++) { if (wrappers[i$1].type == listType) { found = i$1 + 1; } }\n  var splitDepth = wrappers.length - found;\n\n  var splitPos = range.start + wrappers.length - (joinBefore ? 2 : 0), parent = range.parent;\n  for (var i$2 = range.startIndex, e = range.endIndex, first = true; i$2 < e; i$2++, first = false) {\n    if (!first && canSplit(tr.doc, splitPos, splitDepth)) {\n      tr.split(splitPos, splitDepth);\n      splitPos += 2 * splitDepth;\n    }\n    splitPos += parent.child(i$2).nodeSize;\n  }\n  return tr\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Build a command that splits a non-empty textblock at the top level\n// of a list item by also splitting that list item.\nfunction splitListItem(itemType) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var node = ref.node;\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) { return false }\n    var grandParent = $from.node(-1);\n    if (grandParent.type != itemType) { return false }\n    if ($from.parent.content.size == 0 && $from.node(-1).childCount == $from.indexAfter(-1)) {\n      // In an empty block. If this is a nested list, the wrapping\n      // list item should be split. Otherwise, bail out and let next\n      // command handle lifting.\n      if ($from.depth == 2 || $from.node(-3).type != itemType ||\n          $from.index(-2) != $from.node(-2).childCount - 1) { return false }\n      if (dispatch) {\n        var wrap = Fragment.empty;\n        var depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n        // Build a fragment containing empty versions of the structure\n        // from the outer list item to the parent node of the cursor\n        for (var d = $from.depth - depthBefore; d >= $from.depth - 3; d--)\n          { wrap = Fragment.from($from.node(d).copy(wrap)); }\n        var depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1\n            : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n        // Add a second list item with an empty default start node\n        wrap = wrap.append(Fragment.from(itemType.createAndFill()));\n        var start = $from.before($from.depth - (depthBefore - 1));\n        var tr$1 = state.tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n        var sel = -1;\n        tr$1.doc.nodesBetween(start, tr$1.doc.content.size, function (node, pos) {\n          if (sel > -1) { return false }\n          if (node.isTextblock && node.content.size == 0) { sel = pos + 1; }\n        });\n        if (sel > -1) { tr$1.setSelection(state.selection.constructor.near(tr$1.doc.resolve(sel))); }\n        dispatch(tr$1.scrollIntoView());\n      }\n      return true\n    }\n    var nextType = $to.pos == $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n    var tr = state.tr.delete($from.pos, $to.pos);\n    var types = nextType && [null, {type: nextType}];\n    if (!canSplit(tr.doc, $from.pos, 2, types)) { return false }\n    if (dispatch) { dispatch(tr.split($from.pos, 2, types).scrollIntoView()); }\n    return true\n  }\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to lift the list item around the selection up into\n// a wrapping list.\nfunction liftListItem(itemType) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var range = $from.blockRange($to, function (node) { return node.childCount && node.firstChild.type == itemType; });\n    if (!range) { return false }\n    if (!dispatch) { return true }\n    if ($from.node(range.depth - 1).type == itemType) // Inside a parent list\n      { return liftToOuterList(state, dispatch, itemType, range) }\n    else // Outer list node\n      { return liftOutOfList(state, dispatch, range) }\n  }\n}\n\nfunction liftToOuterList(state, dispatch, itemType, range) {\n  var tr = state.tr, end = range.end, endOfList = range.$to.end(range.depth);\n  if (end < endOfList) {\n    // There are siblings after the lifted items, which must become\n    // children of the last item\n    tr.step(new ReplaceAroundStep(end - 1, endOfList, end, endOfList,\n                                  new Slice(Fragment.from(itemType.create(null, range.parent.copy())), 1, 0), 1, true));\n    range = new NodeRange(tr.doc.resolve(range.$from.pos), tr.doc.resolve(endOfList), range.depth);\n  }\n  dispatch(tr.lift(range, liftTarget(range)).scrollIntoView());\n  return true\n}\n\nfunction liftOutOfList(state, dispatch, range) {\n  var tr = state.tr, list = range.parent;\n  // Merge the list items into a single big item\n  for (var pos = range.end, i = range.endIndex - 1, e = range.startIndex; i > e; i--) {\n    pos -= list.child(i).nodeSize;\n    tr.delete(pos - 1, pos + 1);\n  }\n  var $start = tr.doc.resolve(range.start), item = $start.nodeAfter;\n  if (tr.mapping.map(range.end) != range.start + $start.nodeAfter.nodeSize) { return false }\n  var atStart = range.startIndex == 0, atEnd = range.endIndex == list.childCount;\n  var parent = $start.node(-1), indexBefore = $start.index(-1);\n  if (!parent.canReplace(indexBefore + (atStart ? 0 : 1), indexBefore + 1,\n                         item.content.append(atEnd ? Fragment.empty : Fragment.from(list))))\n    { return false }\n  var start = $start.pos, end = start + item.nodeSize;\n  // Strip off the surrounding list. At the sides where we're not at\n  // the end of the list, the existing list is closed. At sides where\n  // this is the end, it is overwritten to its end.\n  tr.step(new ReplaceAroundStep(start - (atStart ? 1 : 0), end + (atEnd ? 1 : 0), start + 1, end - 1,\n                                new Slice((atStart ? Fragment.empty : Fragment.from(list.copy(Fragment.empty)))\n                                          .append(atEnd ? Fragment.empty : Fragment.from(list.copy(Fragment.empty))),\n                                          atStart ? 0 : 1, atEnd ? 0 : 1), atStart ? 0 : 1));\n  dispatch(tr.scrollIntoView());\n  return true\n}\n\n// :: (NodeType) → (state: EditorState, dispatch: ?(tr: Transaction)) → bool\n// Create a command to sink the list item around the selection down\n// into an inner list.\nfunction sinkListItem(itemType) {\n  return function(state, dispatch) {\n    var ref = state.selection;\n    var $from = ref.$from;\n    var $to = ref.$to;\n    var range = $from.blockRange($to, function (node) { return node.childCount && node.firstChild.type == itemType; });\n    if (!range) { return false }\n    var startIndex = range.startIndex;\n    if (startIndex == 0) { return false }\n    var parent = range.parent, nodeBefore = parent.child(startIndex - 1);\n    if (nodeBefore.type != itemType) { return false }\n\n    if (dispatch) {\n      var nestedBefore = nodeBefore.lastChild && nodeBefore.lastChild.type == parent.type;\n      var inner = Fragment.from(nestedBefore ? itemType.create() : null);\n      var slice = new Slice(Fragment.from(itemType.create(null, Fragment.from(parent.type.create(null, inner)))),\n                            nestedBefore ? 3 : 1, 0);\n      var before = range.start, after = range.end;\n      dispatch(state.tr.step(new ReplaceAroundStep(before - (nestedBefore ? 3 : 1), after,\n                                                   before, after, slice, 1, true))\n               .scrollIntoView());\n    }\n    return true\n  }\n}\n\nexport { addListNodes, bulletList, liftListItem, listItem, orderedList, sinkListItem, splitListItem, wrapInList };\n","import { Slice, Fragment, Mark, Node } from 'prosemirror-model';\nimport { ReplaceStep, ReplaceAroundStep, Transform } from 'prosemirror-transform';\n\nvar classesById = Object.create(null);\n\n// ::- Superclass for editor selections. Every selection type should\n// extend this. Should not be instantiated directly.\nvar Selection = function Selection($anchor, $head, ranges) {\n  // :: [SelectionRange]\n  // The ranges covered by the selection.\n  this.ranges = ranges || [new SelectionRange($anchor.min($head), $anchor.max($head))];\n  // :: ResolvedPos\n  // The resolved anchor of the selection (the side that stays in\n  // place when the selection is modified).\n  this.$anchor = $anchor;\n  // :: ResolvedPos\n  // The resolved head of the selection (the side that moves when\n  // the selection is modified).\n  this.$head = $head;\n};\n\nvar prototypeAccessors = { anchor: { configurable: true },head: { configurable: true },from: { configurable: true },to: { configurable: true },$from: { configurable: true },$to: { configurable: true },empty: { configurable: true } };\n\n// :: number\n// The selection's anchor, as an unresolved position.\nprototypeAccessors.anchor.get = function () { return this.$anchor.pos };\n\n// :: number\n// The selection's head.\nprototypeAccessors.head.get = function () { return this.$head.pos };\n\n// :: number\n// The lower bound of the selection's main range.\nprototypeAccessors.from.get = function () { return this.$from.pos };\n\n// :: number\n// The upper bound of the selection's main range.\nprototypeAccessors.to.get = function () { return this.$to.pos };\n\n// :: ResolvedPos\n// The resolved lowerbound of the selection's main range.\nprototypeAccessors.$from.get = function () {\n  return this.ranges[0].$from\n};\n\n// :: ResolvedPos\n// The resolved upper bound of the selection's main range.\nprototypeAccessors.$to.get = function () {\n  return this.ranges[0].$to\n};\n\n// :: bool\n// Indicates whether the selection contains any content.\nprototypeAccessors.empty.get = function () {\n  var ranges = this.ranges;\n  for (var i = 0; i < ranges.length; i++)\n    { if (ranges[i].$from.pos != ranges[i].$to.pos) { return false } }\n  return true\n};\n\n// eq:: (Selection) → bool\n// Test whether the selection is the same as another selection.\n\n// map:: (doc: Node, mapping: Mappable) → Selection\n// Map this selection through a [mappable](#transform.Mappable) thing. `doc`\n// should be the new document to which we are mapping.\n\n// :: () → Slice\n// Get the content of this selection as a slice.\nSelection.prototype.content = function content () {\n  return this.$from.node(0).slice(this.from, this.to, true)\n};\n\n// :: (Transaction, ?Slice)\n// Replace the selection with a slice or, if no slice is given,\n// delete the selection. Will append to the given transaction.\nSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = Slice.empty;\n\n  // Put the new selection at the position after the inserted\n  // content. When that ended in an inline node, search backwards,\n  // to get the position after that node. If not, search forward.\n  var lastNode = content.content.lastChild, lastParent = null;\n  for (var i = 0; i < content.openEnd; i++) {\n    lastParent = lastNode;\n    lastNode = lastNode.lastChild;\n  }\n\n  var mapFrom = tr.steps.length, ranges = this.ranges;\n  for (var i$1 = 0; i$1 < ranges.length; i$1++) {\n    var ref = ranges[i$1];\n      var $from = ref.$from;\n      var $to = ref.$to;\n      var mapping = tr.mapping.slice(mapFrom);\n    tr.replaceRange(mapping.map($from.pos), mapping.map($to.pos), i$1 ? Slice.empty : content);\n    if (i$1 == 0)\n      { selectionToInsertionEnd(tr, mapFrom, (lastNode ? lastNode.isInline : lastParent && lastParent.isTextblock) ? -1 : 1); }\n  }\n};\n\n// :: (Transaction, Node)\n// Replace the selection with the given node, appending the changes\n// to the given transaction.\nSelection.prototype.replaceWith = function replaceWith (tr, node) {\n  var mapFrom = tr.steps.length, ranges = this.ranges;\n  for (var i = 0; i < ranges.length; i++) {\n    var ref = ranges[i];\n      var $from = ref.$from;\n      var $to = ref.$to;\n      var mapping = tr.mapping.slice(mapFrom);\n    var from = mapping.map($from.pos), to = mapping.map($to.pos);\n    if (i) {\n      tr.deleteRange(from, to);\n    } else {\n      tr.replaceRangeWith(from, to, node);\n      selectionToInsertionEnd(tr, mapFrom, node.isInline ? -1 : 1);\n    }\n  }\n};\n\n// toJSON:: () → Object\n// Convert the selection to a JSON representation. When implementing\n// this for a custom selection class, make sure to give the object a\n// `type` property whose value matches the ID under which you\n// [registered](#state.Selection^jsonID) your class.\n\n// :: (ResolvedPos, number, ?bool) → ?Selection\n// Find a valid cursor or leaf node selection starting at the given\n// position and searching back if `dir` is negative, and forward if\n// positive. When `textOnly` is true, only consider cursor\n// selections. Will return null when no valid selection position is\n// found.\nSelection.findFrom = function findFrom ($pos, dir, textOnly) {\n  var inner = $pos.parent.inlineContent ? new TextSelection($pos)\n      : findSelectionIn($pos.node(0), $pos.parent, $pos.pos, $pos.index(), dir, textOnly);\n  if (inner) { return inner }\n\n  for (var depth = $pos.depth - 1; depth >= 0; depth--) {\n    var found = dir < 0\n        ? findSelectionIn($pos.node(0), $pos.node(depth), $pos.before(depth + 1), $pos.index(depth), dir, textOnly)\n        : findSelectionIn($pos.node(0), $pos.node(depth), $pos.after(depth + 1), $pos.index(depth) + 1, dir, textOnly);\n    if (found) { return found }\n  }\n};\n\n// :: (ResolvedPos, ?number) → Selection\n// Find a valid cursor or leaf node selection near the given\n// position. Searches forward first by default, but if `bias` is\n// negative, it will search backwards first.\nSelection.near = function near ($pos, bias) {\n    if ( bias === void 0 ) bias = 1;\n\n  return this.findFrom($pos, bias) || this.findFrom($pos, -bias) || new AllSelection($pos.node(0))\n};\n\n// :: (Node) → Selection\n// Find the cursor or leaf node selection closest to the start of\n// the given document. Will return an\n// [`AllSelection`](#state.AllSelection) if no valid position\n// exists.\nSelection.atStart = function atStart (doc) {\n  return findSelectionIn(doc, doc, 0, 0, 1) || new AllSelection(doc)\n};\n\n// :: (Node) → Selection\n// Find the cursor or leaf node selection closest to the end of the\n// given document.\nSelection.atEnd = function atEnd (doc) {\n  return findSelectionIn(doc, doc, doc.content.size, doc.childCount, -1) || new AllSelection(doc)\n};\n\n// :: (Node, Object) → Selection\n// Deserialize the JSON representation of a selection. Must be\n// implemented for custom classes (as a static class method).\nSelection.fromJSON = function fromJSON (doc, json) {\n  if (!json || !json.type) { throw new RangeError(\"Invalid input for Selection.fromJSON\") }\n  var cls = classesById[json.type];\n  if (!cls) { throw new RangeError((\"No selection type \" + (json.type) + \" defined\")) }\n  return cls.fromJSON(doc, json)\n};\n\n// :: (string, constructor<Selection>)\n// To be able to deserialize selections from JSON, custom selection\n// classes must register themselves with an ID string, so that they\n// can be disambiguated. Try to pick something that's unlikely to\n// clash with classes from other modules.\nSelection.jsonID = function jsonID (id, selectionClass) {\n  if (id in classesById) { throw new RangeError(\"Duplicate use of selection JSON ID \" + id) }\n  classesById[id] = selectionClass;\n  selectionClass.prototype.jsonID = id;\n  return selectionClass\n};\n\n// :: () → SelectionBookmark\n// Get a [bookmark](#state.SelectionBookmark) for this selection,\n// which is a value that can be mapped without having access to a\n// current document, and later resolved to a real selection for a\n// given document again. (This is used mostly by the history to\n// track and restore old selections.) The default implementation of\n// this method just converts the selection to a text selection and\n// returns the bookmark for that.\nSelection.prototype.getBookmark = function getBookmark () {\n  return TextSelection.between(this.$anchor, this.$head).getBookmark()\n};\n\nObject.defineProperties( Selection.prototype, prototypeAccessors );\n\n// :: bool\n// Controls whether, when a selection of this type is active in the\n// browser, the selected range should be visible to the user. Defaults\n// to `true`.\nSelection.prototype.visible = true;\n\n// SelectionBookmark:: interface\n// A lightweight, document-independent representation of a selection.\n// You can define a custom bookmark type for a custom selection class\n// to make the history handle it well.\n//\n//   map:: (mapping: Mapping) → SelectionBookmark\n//   Map the bookmark through a set of changes.\n//\n//   resolve:: (doc: Node) → Selection\n//   Resolve the bookmark to a real selection again. This may need to\n//   do some error checking and may fall back to a default (usually\n//   [`TextSelection.between`](#state.TextSelection^between)) if\n//   mapping made the bookmark invalid.\n\n// ::- Represents a selected range in a document.\nvar SelectionRange = function SelectionRange($from, $to) {\n  // :: ResolvedPos\n  // The lower bound of the range.\n  this.$from = $from;\n  // :: ResolvedPos\n  // The upper bound of the range.\n  this.$to = $to;\n};\n\n// ::- A text selection represents a classical editor selection, with\n// a head (the moving side) and anchor (immobile side), both of which\n// point into textblock nodes. It can be empty (a regular cursor\n// position).\nvar TextSelection = /*@__PURE__*/(function (Selection) {\n  function TextSelection($anchor, $head) {\n    if ( $head === void 0 ) $head = $anchor;\n\n    Selection.call(this, $anchor, $head);\n  }\n\n  if ( Selection ) TextSelection.__proto__ = Selection;\n  TextSelection.prototype = Object.create( Selection && Selection.prototype );\n  TextSelection.prototype.constructor = TextSelection;\n\n  var prototypeAccessors$1 = { $cursor: { configurable: true } };\n\n  // :: ?ResolvedPos\n  // Returns a resolved position if this is a cursor selection (an\n  // empty text selection), and null otherwise.\n  prototypeAccessors$1.$cursor.get = function () { return this.$anchor.pos == this.$head.pos ? this.$head : null };\n\n  TextSelection.prototype.map = function map (doc, mapping) {\n    var $head = doc.resolve(mapping.map(this.head));\n    if (!$head.parent.inlineContent) { return Selection.near($head) }\n    var $anchor = doc.resolve(mapping.map(this.anchor));\n    return new TextSelection($anchor.parent.inlineContent ? $anchor : $head, $head)\n  };\n\n  TextSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = Slice.empty;\n\n    Selection.prototype.replace.call(this, tr, content);\n    if (content == Slice.empty) {\n      var marks = this.$from.marksAcross(this.$to);\n      if (marks) { tr.ensureMarks(marks); }\n    }\n  };\n\n  TextSelection.prototype.eq = function eq (other) {\n    return other instanceof TextSelection && other.anchor == this.anchor && other.head == this.head\n  };\n\n  TextSelection.prototype.getBookmark = function getBookmark () {\n    return new TextBookmark(this.anchor, this.head)\n  };\n\n  TextSelection.prototype.toJSON = function toJSON () {\n    return {type: \"text\", anchor: this.anchor, head: this.head}\n  };\n\n  TextSelection.fromJSON = function fromJSON (doc, json) {\n    if (typeof json.anchor != \"number\" || typeof json.head != \"number\")\n      { throw new RangeError(\"Invalid input for TextSelection.fromJSON\") }\n    return new TextSelection(doc.resolve(json.anchor), doc.resolve(json.head))\n  };\n\n  // :: (Node, number, ?number) → TextSelection\n  // Create a text selection from non-resolved positions.\n  TextSelection.create = function create (doc, anchor, head) {\n    if ( head === void 0 ) head = anchor;\n\n    var $anchor = doc.resolve(anchor);\n    return new this($anchor, head == anchor ? $anchor : doc.resolve(head))\n  };\n\n  // :: (ResolvedPos, ResolvedPos, ?number) → Selection\n  // Return a text selection that spans the given positions or, if\n  // they aren't text positions, find a text selection near them.\n  // `bias` determines whether the method searches forward (default)\n  // or backwards (negative number) first. Will fall back to calling\n  // [`Selection.near`](#state.Selection^near) when the document\n  // doesn't contain a valid text position.\n  TextSelection.between = function between ($anchor, $head, bias) {\n    var dPos = $anchor.pos - $head.pos;\n    if (!bias || dPos) { bias = dPos >= 0 ? 1 : -1; }\n    if (!$head.parent.inlineContent) {\n      var found = Selection.findFrom($head, bias, true) || Selection.findFrom($head, -bias, true);\n      if (found) { $head = found.$head; }\n      else { return Selection.near($head, bias) }\n    }\n    if (!$anchor.parent.inlineContent) {\n      if (dPos == 0) {\n        $anchor = $head;\n      } else {\n        $anchor = (Selection.findFrom($anchor, -bias, true) || Selection.findFrom($anchor, bias, true)).$anchor;\n        if (($anchor.pos < $head.pos) != (dPos < 0)) { $anchor = $head; }\n      }\n    }\n    return new TextSelection($anchor, $head)\n  };\n\n  Object.defineProperties( TextSelection.prototype, prototypeAccessors$1 );\n\n  return TextSelection;\n}(Selection));\n\nSelection.jsonID(\"text\", TextSelection);\n\nvar TextBookmark = function TextBookmark(anchor, head) {\n  this.anchor = anchor;\n  this.head = head;\n};\nTextBookmark.prototype.map = function map (mapping) {\n  return new TextBookmark(mapping.map(this.anchor), mapping.map(this.head))\n};\nTextBookmark.prototype.resolve = function resolve (doc) {\n  return TextSelection.between(doc.resolve(this.anchor), doc.resolve(this.head))\n};\n\n// ::- A node selection is a selection that points at a single node.\n// All nodes marked [selectable](#model.NodeSpec.selectable) can be\n// the target of a node selection. In such a selection, `from` and\n// `to` point directly before and after the selected node, `anchor`\n// equals `from`, and `head` equals `to`..\nvar NodeSelection = /*@__PURE__*/(function (Selection) {\n  function NodeSelection($pos) {\n    var node = $pos.nodeAfter;\n    var $end = $pos.node(0).resolve($pos.pos + node.nodeSize);\n    Selection.call(this, $pos, $end);\n    // :: Node The selected node.\n    this.node = node;\n  }\n\n  if ( Selection ) NodeSelection.__proto__ = Selection;\n  NodeSelection.prototype = Object.create( Selection && Selection.prototype );\n  NodeSelection.prototype.constructor = NodeSelection;\n\n  NodeSelection.prototype.map = function map (doc, mapping) {\n    var ref = mapping.mapResult(this.anchor);\n    var deleted = ref.deleted;\n    var pos = ref.pos;\n    var $pos = doc.resolve(pos);\n    if (deleted) { return Selection.near($pos) }\n    return new NodeSelection($pos)\n  };\n\n  NodeSelection.prototype.content = function content () {\n    return new Slice(Fragment.from(this.node), 0, 0)\n  };\n\n  NodeSelection.prototype.eq = function eq (other) {\n    return other instanceof NodeSelection && other.anchor == this.anchor\n  };\n\n  NodeSelection.prototype.toJSON = function toJSON () {\n    return {type: \"node\", anchor: this.anchor}\n  };\n\n  NodeSelection.prototype.getBookmark = function getBookmark () { return new NodeBookmark(this.anchor) };\n\n  NodeSelection.fromJSON = function fromJSON (doc, json) {\n    if (typeof json.anchor != \"number\")\n      { throw new RangeError(\"Invalid input for NodeSelection.fromJSON\") }\n    return new NodeSelection(doc.resolve(json.anchor))\n  };\n\n  // :: (Node, number) → NodeSelection\n  // Create a node selection from non-resolved positions.\n  NodeSelection.create = function create (doc, from) {\n    return new this(doc.resolve(from))\n  };\n\n  // :: (Node) → bool\n  // Determines whether the given node may be selected as a node\n  // selection.\n  NodeSelection.isSelectable = function isSelectable (node) {\n    return !node.isText && node.type.spec.selectable !== false\n  };\n\n  return NodeSelection;\n}(Selection));\n\nNodeSelection.prototype.visible = false;\n\nSelection.jsonID(\"node\", NodeSelection);\n\nvar NodeBookmark = function NodeBookmark(anchor) {\n  this.anchor = anchor;\n};\nNodeBookmark.prototype.map = function map (mapping) {\n  var ref = mapping.mapResult(this.anchor);\n    var deleted = ref.deleted;\n    var pos = ref.pos;\n  return deleted ? new TextBookmark(pos, pos) : new NodeBookmark(pos)\n};\nNodeBookmark.prototype.resolve = function resolve (doc) {\n  var $pos = doc.resolve(this.anchor), node = $pos.nodeAfter;\n  if (node && NodeSelection.isSelectable(node)) { return new NodeSelection($pos) }\n  return Selection.near($pos)\n};\n\n// ::- A selection type that represents selecting the whole document\n// (which can not necessarily be expressed with a text selection, when\n// there are for example leaf block nodes at the start or end of the\n// document).\nvar AllSelection = /*@__PURE__*/(function (Selection) {\n  function AllSelection(doc) {\n    Selection.call(this, doc.resolve(0), doc.resolve(doc.content.size));\n  }\n\n  if ( Selection ) AllSelection.__proto__ = Selection;\n  AllSelection.prototype = Object.create( Selection && Selection.prototype );\n  AllSelection.prototype.constructor = AllSelection;\n\n  AllSelection.prototype.replace = function replace (tr, content) {\n    if ( content === void 0 ) content = Slice.empty;\n\n    if (content == Slice.empty) {\n      tr.delete(0, tr.doc.content.size);\n      var sel = Selection.atStart(tr.doc);\n      if (!sel.eq(tr.selection)) { tr.setSelection(sel); }\n    } else {\n      Selection.prototype.replace.call(this, tr, content);\n    }\n  };\n\n  AllSelection.prototype.toJSON = function toJSON () { return {type: \"all\"} };\n\n  AllSelection.fromJSON = function fromJSON (doc) { return new AllSelection(doc) };\n\n  AllSelection.prototype.map = function map (doc) { return new AllSelection(doc) };\n\n  AllSelection.prototype.eq = function eq (other) { return other instanceof AllSelection };\n\n  AllSelection.prototype.getBookmark = function getBookmark () { return AllBookmark };\n\n  return AllSelection;\n}(Selection));\n\nSelection.jsonID(\"all\", AllSelection);\n\nvar AllBookmark = {\n  map: function map() { return this },\n  resolve: function resolve(doc) { return new AllSelection(doc) }\n};\n\n// FIXME we'll need some awareness of text direction when scanning for selections\n\n// Try to find a selection inside the given node. `pos` points at the\n// position where the search starts. When `text` is true, only return\n// text selections.\nfunction findSelectionIn(doc, node, pos, index, dir, text) {\n  if (node.inlineContent) { return TextSelection.create(doc, pos) }\n  for (var i = index - (dir > 0 ? 0 : 1); dir > 0 ? i < node.childCount : i >= 0; i += dir) {\n    var child = node.child(i);\n    if (!child.isAtom) {\n      var inner = findSelectionIn(doc, child, pos + dir, dir < 0 ? child.childCount : 0, dir, text);\n      if (inner) { return inner }\n    } else if (!text && NodeSelection.isSelectable(child)) {\n      return NodeSelection.create(doc, pos - (dir < 0 ? child.nodeSize : 0))\n    }\n    pos += child.nodeSize * dir;\n  }\n}\n\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n  var last = tr.steps.length - 1;\n  if (last < startLen) { return }\n  var step = tr.steps[last];\n  if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) { return }\n  var map = tr.mapping.maps[last], end;\n  map.forEach(function (_from, _to, _newFrom, newTo) { if (end == null) { end = newTo; } });\n  tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nvar UPDATED_SEL = 1, UPDATED_MARKS = 2, UPDATED_SCROLL = 4;\n\n// ::- An editor state transaction, which can be applied to a state to\n// create an updated state. Use\n// [`EditorState.tr`](#state.EditorState.tr) to create an instance.\n//\n// Transactions track changes to the document (they are a subclass of\n// [`Transform`](#transform.Transform)), but also other state changes,\n// like selection updates and adjustments of the set of [stored\n// marks](#state.EditorState.storedMarks). In addition, you can store\n// metadata properties in a transaction, which are extra pieces of\n// information that client code or plugins can use to describe what a\n// transacion represents, so that they can update their [own\n// state](#state.StateField) accordingly.\n//\n// The [editor view](#view.EditorView) uses a few metadata properties:\n// it will attach a property `\"pointer\"` with the value `true` to\n// selection transactions directly caused by mouse or touch input, and\n// a `\"uiEvent\"` property of that may be `\"paste\"`, `\"cut\"`, or `\"drop\"`.\nvar Transaction = /*@__PURE__*/(function (Transform) {\n  function Transaction(state) {\n    Transform.call(this, state.doc);\n    // :: number\n    // The timestamp associated with this transaction, in the same\n    // format as `Date.now()`.\n    this.time = Date.now();\n    this.curSelection = state.selection;\n    // The step count for which the current selection is valid.\n    this.curSelectionFor = 0;\n    // :: ?[Mark]\n    // The stored marks set by this transaction, if any.\n    this.storedMarks = state.storedMarks;\n    // Bitfield to track which aspects of the state were updated by\n    // this transaction.\n    this.updated = 0;\n    // Object used to store metadata properties for the transaction.\n    this.meta = Object.create(null);\n  }\n\n  if ( Transform ) Transaction.__proto__ = Transform;\n  Transaction.prototype = Object.create( Transform && Transform.prototype );\n  Transaction.prototype.constructor = Transaction;\n\n  var prototypeAccessors = { selection: { configurable: true },selectionSet: { configurable: true },storedMarksSet: { configurable: true },isGeneric: { configurable: true },scrolledIntoView: { configurable: true } };\n\n  // :: Selection\n  // The transaction's current selection. This defaults to the editor\n  // selection [mapped](#state.Selection.map) through the steps in the\n  // transaction, but can be overwritten with\n  // [`setSelection`](#state.Transaction.setSelection).\n  prototypeAccessors.selection.get = function () {\n    if (this.curSelectionFor < this.steps.length) {\n      this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor));\n      this.curSelectionFor = this.steps.length;\n    }\n    return this.curSelection\n  };\n\n  // :: (Selection) → Transaction\n  // Update the transaction's current selection. Will determine the\n  // selection that the editor gets when the transaction is applied.\n  Transaction.prototype.setSelection = function setSelection (selection) {\n    if (selection.$from.doc != this.doc)\n      { throw new RangeError(\"Selection passed to setSelection must point at the current document\") }\n    this.curSelection = selection;\n    this.curSelectionFor = this.steps.length;\n    this.updated = (this.updated | UPDATED_SEL) & ~UPDATED_MARKS;\n    this.storedMarks = null;\n    return this\n  };\n\n  // :: bool\n  // Whether the selection was explicitly updated by this transaction.\n  prototypeAccessors.selectionSet.get = function () {\n    return (this.updated & UPDATED_SEL) > 0\n  };\n\n  // :: (?[Mark]) → Transaction\n  // Set the current stored marks.\n  Transaction.prototype.setStoredMarks = function setStoredMarks (marks) {\n    this.storedMarks = marks;\n    this.updated |= UPDATED_MARKS;\n    return this\n  };\n\n  // :: ([Mark]) → Transaction\n  // Make sure the current stored marks or, if that is null, the marks\n  // at the selection, match the given set of marks. Does nothing if\n  // this is already the case.\n  Transaction.prototype.ensureMarks = function ensureMarks (marks) {\n    if (!Mark.sameSet(this.storedMarks || this.selection.$from.marks(), marks))\n      { this.setStoredMarks(marks); }\n    return this\n  };\n\n  // :: (Mark) → Transaction\n  // Add a mark to the set of stored marks.\n  Transaction.prototype.addStoredMark = function addStoredMark (mark) {\n    return this.ensureMarks(mark.addToSet(this.storedMarks || this.selection.$head.marks()))\n  };\n\n  // :: (union<Mark, MarkType>) → Transaction\n  // Remove a mark or mark type from the set of stored marks.\n  Transaction.prototype.removeStoredMark = function removeStoredMark (mark) {\n    return this.ensureMarks(mark.removeFromSet(this.storedMarks || this.selection.$head.marks()))\n  };\n\n  // :: bool\n  // Whether the stored marks were explicitly set for this transaction.\n  prototypeAccessors.storedMarksSet.get = function () {\n    return (this.updated & UPDATED_MARKS) > 0\n  };\n\n  Transaction.prototype.addStep = function addStep (step, doc) {\n    Transform.prototype.addStep.call(this, step, doc);\n    this.updated = this.updated & ~UPDATED_MARKS;\n    this.storedMarks = null;\n  };\n\n  // :: (number) → Transaction\n  // Update the timestamp for the transaction.\n  Transaction.prototype.setTime = function setTime (time) {\n    this.time = time;\n    return this\n  };\n\n  // :: (Slice) → Transaction\n  // Replace the current selection with the given slice.\n  Transaction.prototype.replaceSelection = function replaceSelection (slice) {\n    this.selection.replace(this, slice);\n    return this\n  };\n\n  // :: (Node, ?bool) → Transaction\n  // Replace the selection with the given node. When `inheritMarks` is\n  // true and the content is inline, it inherits the marks from the\n  // place where it is inserted.\n  Transaction.prototype.replaceSelectionWith = function replaceSelectionWith (node, inheritMarks) {\n    var selection = this.selection;\n    if (inheritMarks !== false)\n      { node = node.mark(this.storedMarks || (selection.empty ? selection.$from.marks() : (selection.$from.marksAcross(selection.$to) || Mark.none))); }\n    selection.replaceWith(this, node);\n    return this\n  };\n\n  // :: () → Transaction\n  // Delete the selection.\n  Transaction.prototype.deleteSelection = function deleteSelection () {\n    this.selection.replace(this);\n    return this\n  };\n\n  // :: (string, from: ?number, to: ?number) → Transaction\n  // Replace the given range, or the selection if no range is given,\n  // with a text node containing the given string.\n  Transaction.prototype.insertText = function insertText (text, from, to) {\n    if ( to === void 0 ) to = from;\n\n    var schema = this.doc.type.schema;\n    if (from == null) {\n      if (!text) { return this.deleteSelection() }\n      return this.replaceSelectionWith(schema.text(text), true)\n    } else {\n      if (!text) { return this.deleteRange(from, to) }\n      var marks = this.storedMarks;\n      if (!marks) {\n        var $from = this.doc.resolve(from);\n        marks = to == from ? $from.marks() : $from.marksAcross(this.doc.resolve(to));\n      }\n      this.replaceRangeWith(from, to, schema.text(text, marks));\n      if (!this.selection.empty) { this.setSelection(Selection.near(this.selection.$to)); }\n      return this\n    }\n  };\n\n  // :: (union<string, Plugin, PluginKey>, any) → Transaction\n  // Store a metadata property in this transaction, keyed either by\n  // name or by plugin.\n  Transaction.prototype.setMeta = function setMeta (key, value) {\n    this.meta[typeof key == \"string\" ? key : key.key] = value;\n    return this\n  };\n\n  // :: (union<string, Plugin, PluginKey>) → any\n  // Retrieve a metadata property for a given name or plugin.\n  Transaction.prototype.getMeta = function getMeta (key) {\n    return this.meta[typeof key == \"string\" ? key : key.key]\n  };\n\n  // :: bool\n  // Returns true if this transaction doesn't contain any metadata,\n  // and can thus safely be extended.\n  prototypeAccessors.isGeneric.get = function () {\n    for (var _ in this.meta) { return false }\n    return true\n  };\n\n  // :: () → Transaction\n  // Indicate that the editor should scroll the selection into view\n  // when updated to the state produced by this transaction.\n  Transaction.prototype.scrollIntoView = function scrollIntoView () {\n    this.updated |= UPDATED_SCROLL;\n    return this\n  };\n\n  prototypeAccessors.scrolledIntoView.get = function () {\n    return (this.updated & UPDATED_SCROLL) > 0\n  };\n\n  Object.defineProperties( Transaction.prototype, prototypeAccessors );\n\n  return Transaction;\n}(Transform));\n\nfunction bind(f, self) {\n  return !self || !f ? f : f.bind(self)\n}\n\nvar FieldDesc = function FieldDesc(name, desc, self) {\n  this.name = name;\n  this.init = bind(desc.init, self);\n  this.apply = bind(desc.apply, self);\n};\n\nvar baseFields = [\n  new FieldDesc(\"doc\", {\n    init: function init(config) { return config.doc || config.schema.topNodeType.createAndFill() },\n    apply: function apply(tr) { return tr.doc }\n  }),\n\n  new FieldDesc(\"selection\", {\n    init: function init(config, instance) { return config.selection || Selection.atStart(instance.doc) },\n    apply: function apply(tr) { return tr.selection }\n  }),\n\n  new FieldDesc(\"storedMarks\", {\n    init: function init(config) { return config.storedMarks || null },\n    apply: function apply(tr, _marks, _old, state) { return state.selection.$cursor ? tr.storedMarks : null }\n  }),\n\n  new FieldDesc(\"scrollToSelection\", {\n    init: function init() { return 0 },\n    apply: function apply(tr, prev) { return tr.scrolledIntoView ? prev + 1 : prev }\n  })\n];\n\n// Object wrapping the part of a state object that stays the same\n// across transactions. Stored in the state's `config` property.\nvar Configuration = function Configuration(schema, plugins) {\n  var this$1 = this;\n\n  this.schema = schema;\n  this.fields = baseFields.concat();\n  this.plugins = [];\n  this.pluginsByKey = Object.create(null);\n  if (plugins) { plugins.forEach(function (plugin) {\n    if (this$1.pluginsByKey[plugin.key])\n      { throw new RangeError(\"Adding different instances of a keyed plugin (\" + plugin.key + \")\") }\n    this$1.plugins.push(plugin);\n    this$1.pluginsByKey[plugin.key] = plugin;\n    if (plugin.spec.state)\n      { this$1.fields.push(new FieldDesc(plugin.key, plugin.spec.state, plugin)); }\n  }); }\n};\n\n// ::- The state of a ProseMirror editor is represented by an object\n// of this type. A state is a persistent data structure—it isn't\n// updated, but rather a new state value is computed from an old one\n// using the [`apply`](#state.EditorState.apply) method.\n//\n// A state holds a number of built-in fields, and plugins can\n// [define](#state.PluginSpec.state) additional fields.\nvar EditorState = function EditorState(config) {\n  this.config = config;\n};\n\nvar prototypeAccessors$1 = { schema: { configurable: true },plugins: { configurable: true },tr: { configurable: true } };\n\n// doc:: Node\n// The current document.\n\n// selection:: Selection\n// The selection.\n\n// storedMarks:: ?[Mark]\n// A set of marks to apply to the next input. Will be null when\n// no explicit marks have been set.\n\n// :: Schema\n// The schema of the state's document.\nprototypeAccessors$1.schema.get = function () {\n  return this.config.schema\n};\n\n// :: [Plugin]\n// The plugins that are active in this state.\nprototypeAccessors$1.plugins.get = function () {\n  return this.config.plugins\n};\n\n// :: (Transaction) → EditorState\n// Apply the given transaction to produce a new state.\nEditorState.prototype.apply = function apply (tr) {\n  return this.applyTransaction(tr).state\n};\n\n// : (Transaction) → bool\nEditorState.prototype.filterTransaction = function filterTransaction (tr, ignore) {\n    if ( ignore === void 0 ) ignore = -1;\n\n  for (var i = 0; i < this.config.plugins.length; i++) { if (i != ignore) {\n    var plugin = this.config.plugins[i];\n    if (plugin.spec.filterTransaction && !plugin.spec.filterTransaction.call(plugin, tr, this))\n      { return false }\n  } }\n  return true\n};\n\n// :: (Transaction) → {state: EditorState, transactions: [Transaction]}\n// Verbose variant of [`apply`](#state.EditorState.apply) that\n// returns the precise transactions that were applied (which might\n// be influenced by the [transaction\n// hooks](#state.PluginSpec.filterTransaction) of\n// plugins) along with the new state.\nEditorState.prototype.applyTransaction = function applyTransaction (rootTr) {\n  if (!this.filterTransaction(rootTr)) { return {state: this, transactions: []} }\n\n  var trs = [rootTr], newState = this.applyInner(rootTr), seen = null;\n  // This loop repeatedly gives plugins a chance to respond to\n  // transactions as new transactions are added, making sure to only\n  // pass the transactions the plugin did not see before.\n   for (;;) {\n    var haveNew = false;\n    for (var i = 0; i < this.config.plugins.length; i++) {\n      var plugin = this.config.plugins[i];\n      if (plugin.spec.appendTransaction) {\n        var n = seen ? seen[i].n : 0, oldState = seen ? seen[i].state : this;\n        var tr = n < trs.length &&\n            plugin.spec.appendTransaction.call(plugin, n ? trs.slice(n) : trs, oldState, newState);\n        if (tr && newState.filterTransaction(tr, i)) {\n          tr.setMeta(\"appendedTransaction\", rootTr);\n          if (!seen) {\n            seen = [];\n            for (var j = 0; j < this.config.plugins.length; j++)\n              { seen.push(j < i ? {state: newState, n: trs.length} : {state: this, n: 0}); }\n          }\n          trs.push(tr);\n          newState = newState.applyInner(tr);\n          haveNew = true;\n        }\n        if (seen) { seen[i] = {state: newState, n: trs.length}; }\n      }\n    }\n    if (!haveNew) { return {state: newState, transactions: trs} }\n  }\n};\n\n// : (Transaction) → EditorState\nEditorState.prototype.applyInner = function applyInner (tr) {\n  if (!tr.before.eq(this.doc)) { throw new RangeError(\"Applying a mismatched transaction\") }\n  var newInstance = new EditorState(this.config), fields = this.config.fields;\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    newInstance[field.name] = field.apply(tr, this[field.name], this, newInstance);\n  }\n  for (var i$1 = 0; i$1 < applyListeners.length; i$1++) { applyListeners[i$1](this, tr, newInstance); }\n  return newInstance\n};\n\n// :: Transaction\n// Start a [transaction](#state.Transaction) from this state.\nprototypeAccessors$1.tr.get = function () { return new Transaction(this) };\n\n// :: (Object) → EditorState\n// Create a new state.\n//\n// config::- Configuration options. Must contain `schema` or `doc` (or both).\n//\n//    schema:: ?Schema\n//    The schema to use (only relevant if no `doc` is specified).\n//\n//    doc:: ?Node\n//    The starting document.\n//\n//    selection:: ?Selection\n//    A valid selection in the document.\n//\n//    storedMarks:: ?[Mark]\n//    The initial set of [stored marks](#state.EditorState.storedMarks).\n//\n//    plugins:: ?[Plugin]\n//    The plugins that should be active in this state.\nEditorState.create = function create (config) {\n  var $config = new Configuration(config.doc ? config.doc.type.schema : config.schema, config.plugins);\n  var instance = new EditorState($config);\n  for (var i = 0; i < $config.fields.length; i++)\n    { instance[$config.fields[i].name] = $config.fields[i].init(config, instance); }\n  return instance\n};\n\n// :: (Object) → EditorState\n// Create a new state based on this one, but with an adjusted set of\n// active plugins. State fields that exist in both sets of plugins\n// are kept unchanged. Those that no longer exist are dropped, and\n// those that are new are initialized using their\n// [`init`](#state.StateField.init) method, passing in the new\n// configuration object..\n//\n// config::- configuration options\n//\n//   plugins:: [Plugin]\n//   New set of active plugins.\nEditorState.prototype.reconfigure = function reconfigure (config) {\n  var $config = new Configuration(this.schema, config.plugins);\n  var fields = $config.fields, instance = new EditorState($config);\n  for (var i = 0; i < fields.length; i++) {\n    var name = fields[i].name;\n    instance[name] = this.hasOwnProperty(name) ? this[name] : fields[i].init(config, instance);\n  }\n  return instance\n};\n\n// :: (?union<Object<Plugin>, string, number>) → Object\n// Serialize this state to JSON. If you want to serialize the state\n// of plugins, pass an object mapping property names to use in the\n// resulting JSON object to plugin objects. The argument may also be\n// a string or number, in which case it is ignored, to support the\n// way `JSON.stringify` calls `toString` methods.\nEditorState.prototype.toJSON = function toJSON (pluginFields) {\n  var result = {doc: this.doc.toJSON(), selection: this.selection.toJSON()};\n  if (this.storedMarks) { result.storedMarks = this.storedMarks.map(function (m) { return m.toJSON(); }); }\n  if (pluginFields && typeof pluginFields == 'object') { for (var prop in pluginFields) {\n    if (prop == \"doc\" || prop == \"selection\")\n      { throw new RangeError(\"The JSON fields `doc` and `selection` are reserved\") }\n    var plugin = pluginFields[prop], state = plugin.spec.state;\n    if (state && state.toJSON) { result[prop] = state.toJSON.call(plugin, this[plugin.key]); }\n  } }\n  return result\n};\n\n// :: (Object, Object, ?Object<Plugin>) → EditorState\n// Deserialize a JSON representation of a state. `config` should\n// have at least a `schema` field, and should contain array of\n// plugins to initialize the state with. `pluginFields` can be used\n// to deserialize the state of plugins, by associating plugin\n// instances with the property names they use in the JSON object.\n//\n// config::- configuration options\n//\n//   schema:: Schema\n//   The schema to use.\n//\n//   plugins:: ?[Plugin]\n//   The set of active plugins.\nEditorState.fromJSON = function fromJSON (config, json, pluginFields) {\n  if (!json) { throw new RangeError(\"Invalid input for EditorState.fromJSON\") }\n  if (!config.schema) { throw new RangeError(\"Required config field 'schema' missing\") }\n  var $config = new Configuration(config.schema, config.plugins);\n  var instance = new EditorState($config);\n  $config.fields.forEach(function (field) {\n    if (field.name == \"doc\") {\n      instance.doc = Node.fromJSON(config.schema, json.doc);\n    } else if (field.name == \"selection\") {\n      instance.selection = Selection.fromJSON(instance.doc, json.selection);\n    } else if (field.name == \"storedMarks\") {\n      if (json.storedMarks) { instance.storedMarks = json.storedMarks.map(config.schema.markFromJSON); }\n    } else {\n      if (pluginFields) { for (var prop in pluginFields) {\n        var plugin = pluginFields[prop], state = plugin.spec.state;\n        if (plugin.key == field.name && state && state.fromJSON &&\n            Object.prototype.hasOwnProperty.call(json, prop)) {\n          // This field belongs to a plugin mapped to a JSON field, read it from there.\n          instance[field.name] = state.fromJSON.call(plugin, config, json[prop], instance);\n          return\n        }\n      } }\n      instance[field.name] = field.init(config, instance);\n    }\n  });\n  return instance\n};\n\n// Kludge to allow the view to track mappings between different\n// instances of a state.\n//\n// FIXME this is no longer needed as of prosemirror-view 1.9.0,\n// though due to backwards-compat we should probably keep it around\n// for a while (if only as a no-op)\nEditorState.addApplyListener = function addApplyListener (f) {\n  applyListeners.push(f);\n};\nEditorState.removeApplyListener = function removeApplyListener (f) {\n  var found = applyListeners.indexOf(f);\n  if (found > -1) { applyListeners.splice(found, 1); }\n};\n\nObject.defineProperties( EditorState.prototype, prototypeAccessors$1 );\n\nvar applyListeners = [];\n\n// PluginSpec:: interface\n//\n// This is the type passed to the [`Plugin`](#state.Plugin)\n// constructor. It provides a definition for a plugin.\n//\n//   props:: ?EditorProps\n//   The [view props](#view.EditorProps) added by this plugin. Props\n//   that are functions will be bound to have the plugin instance as\n//   their `this` binding.\n//\n//   state:: ?StateField<any>\n//   Allows a plugin to define a [state field](#state.StateField), an\n//   extra slot in the state object in which it can keep its own data.\n//\n//   key:: ?PluginKey\n//   Can be used to make this a keyed plugin. You can have only one\n//   plugin with a given key in a given state, but it is possible to\n//   access the plugin's configuration and state through the key,\n//   without having access to the plugin instance object.\n//\n//   view:: ?(EditorView) → Object\n//   When the plugin needs to interact with the editor view, or\n//   set something up in the DOM, use this field. The function\n//   will be called when the plugin's state is associated with an\n//   editor view.\n//\n//     return::-\n//     Should return an object with the following optional\n//     properties:\n//\n//       update:: ?(view: EditorView, prevState: EditorState)\n//       Called whenever the view's state is updated.\n//\n//       destroy:: ?()\n//       Called when the view is destroyed or receives a state\n//       with different plugins.\n//\n//   filterTransaction:: ?(Transaction, EditorState) → bool\n//   When present, this will be called before a transaction is\n//   applied by the state, allowing the plugin to cancel it (by\n//   returning false).\n//\n//   appendTransaction:: ?(transactions: [Transaction], oldState: EditorState, newState: EditorState) → ?Transaction\n//   Allows the plugin to append another transaction to be applied\n//   after the given array of transactions. When another plugin\n//   appends a transaction after this was called, it is called again\n//   with the new state and new transactions—but only the new\n//   transactions, i.e. it won't be passed transactions that it\n//   already saw.\n\nfunction bindProps(obj, self, target) {\n  for (var prop in obj) {\n    var val = obj[prop];\n    if (val instanceof Function) { val = val.bind(self); }\n    else if (prop == \"handleDOMEvents\") { val = bindProps(val, self, {}); }\n    target[prop] = val;\n  }\n  return target\n}\n\n// ::- Plugins bundle functionality that can be added to an editor.\n// They are part of the [editor state](#state.EditorState) and\n// may influence that state and the view that contains it.\nvar Plugin = function Plugin(spec) {\n  // :: EditorProps\n  // The [props](#view.EditorProps) exported by this plugin.\n  this.props = {};\n  if (spec.props) { bindProps(spec.props, this, this.props); }\n  // :: Object\n  // The plugin's [spec object](#state.PluginSpec).\n  this.spec = spec;\n  this.key = spec.key ? spec.key.key : createKey(\"plugin\");\n};\n\n// :: (EditorState) → any\n// Extract the plugin's state field from an editor state.\nPlugin.prototype.getState = function getState (state) { return state[this.key] };\n\n// StateField:: interface<T>\n// A plugin spec may provide a state field (under its\n// [`state`](#state.PluginSpec.state) property) of this type, which\n// describes the state it wants to keep. Functions provided here are\n// always called with the plugin instance as their `this` binding.\n//\n//   init:: (config: Object, instance: EditorState) → T\n//   Initialize the value of the field. `config` will be the object\n//   passed to [`EditorState.create`](#state.EditorState^create). Note\n//   that `instance` is a half-initialized state instance, and will\n//   not have values for plugin fields initialized after this one.\n//\n//   apply:: (tr: Transaction, value: T, oldState: EditorState, newState: EditorState) → T\n//   Apply the given transaction to this state field, producing a new\n//   field value. Note that the `newState` argument is again a partially\n//   constructed state does not yet contain the state from plugins\n//   coming after this one.\n//\n//   toJSON:: ?(value: T) → *\n//   Convert this field to JSON. Optional, can be left off to disable\n//   JSON serialization for the field.\n//\n//   fromJSON:: ?(config: Object, value: *, state: EditorState) → T\n//   Deserialize the JSON representation of this field. Note that the\n//   `state` argument is again a half-initialized state.\n\nvar keys = Object.create(null);\n\nfunction createKey(name) {\n  if (name in keys) { return name + \"$\" + ++keys[name] }\n  keys[name] = 0;\n  return name + \"$\"\n}\n\n// ::- A key is used to [tag](#state.PluginSpec.key)\n// plugins in a way that makes it possible to find them, given an\n// editor state. Assigning a key does mean only one plugin of that\n// type can be active in a state.\nvar PluginKey = function PluginKey(name) {\nif ( name === void 0 ) name = \"key\";\n this.key = createKey(name); };\n\n// :: (EditorState) → ?Plugin\n// Get the active plugin with this key, if any, from an editor\n// state.\nPluginKey.prototype.get = function get (state) { return state.config.pluginsByKey[this.key] };\n\n// :: (EditorState) → ?any\n// Get the plugin's state from an editor state.\nPluginKey.prototype.getState = function getState (state) { return state[this.key] };\n\nexport { AllSelection, EditorState, NodeSelection, Plugin, PluginKey, Selection, SelectionRange, TextSelection, Transaction };\n","import { ReplaceError, Slice, Fragment, MarkType } from 'prosemirror-model';\n\n// Mappable:: interface\n// There are several things that positions can be mapped through.\n// Such objects conform to this interface.\n//\n//   map:: (pos: number, assoc: ?number) → number\n//   Map a position through this object. When given, `assoc` (should\n//   be -1 or 1, defaults to 1) determines with which side the\n//   position is associated, which determines in which direction to\n//   move when a chunk of content is inserted at the mapped position.\n//\n//   mapResult:: (pos: number, assoc: ?number) → MapResult\n//   Map a position, and return an object containing additional\n//   information about the mapping. The result's `deleted` field tells\n//   you whether the position was deleted (completely enclosed in a\n//   replaced range) during the mapping. When content on only one side\n//   is deleted, the position itself is only considered deleted when\n//   `assoc` points in the direction of the deleted content.\n\n// Recovery values encode a range index and an offset. They are\n// represented as numbers, because tons of them will be created when\n// mapping, for example, a large number of decorations. The number's\n// lower 16 bits provide the index, the remaining bits the offset.\n//\n// Note: We intentionally don't use bit shift operators to en- and\n// decode these, since those clip to 32 bits, which we might in rare\n// cases want to overflow. A 64-bit float can represent 48-bit\n// integers precisely.\n\nvar lower16 = 0xffff;\nvar factor16 = Math.pow(2, 16);\n\nfunction makeRecover(index, offset) { return index + offset * factor16 }\nfunction recoverIndex(value) { return value & lower16 }\nfunction recoverOffset(value) { return (value - (value & lower16)) / factor16 }\n\n// ::- An object representing a mapped position with extra\n// information.\nvar MapResult = function MapResult(pos, deleted, recover) {\n  if ( deleted === void 0 ) deleted = false;\n  if ( recover === void 0 ) recover = null;\n\n  // :: number The mapped version of the position.\n  this.pos = pos;\n  // :: bool Tells you whether the position was deleted, that is,\n  // whether the step removed its surroundings from the document.\n  this.deleted = deleted;\n  this.recover = recover;\n};\n\n// :: class extends Mappable\n// A map describing the deletions and insertions made by a step, which\n// can be used to find the correspondence between positions in the\n// pre-step version of a document and the same position in the\n// post-step version.\nvar StepMap = function StepMap(ranges, inverted) {\n  if ( inverted === void 0 ) inverted = false;\n\n  if (!ranges.length && StepMap.empty) { return StepMap.empty }\n  this.ranges = ranges;\n  this.inverted = inverted;\n};\n\nStepMap.prototype.recover = function recover (value) {\n  var diff = 0, index = recoverIndex(value);\n  if (!this.inverted) { for (var i = 0; i < index; i++)\n    { diff += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1]; } }\n  return this.ranges[index * 3] + diff + recoverOffset(value)\n};\n\n// : (number, ?number) → MapResult\nStepMap.prototype.mapResult = function mapResult (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, false) };\n\n// : (number, ?number) → number\nStepMap.prototype.map = function map (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, true) };\n\nStepMap.prototype._map = function _map (pos, assoc, simple) {\n  var diff = 0, oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0; i < this.ranges.length; i += 3) {\n    var start = this.ranges[i] - (this.inverted ? diff : 0);\n    if (start > pos) { break }\n    var oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex], end = start + oldSize;\n    if (pos <= end) {\n      var side = !oldSize ? assoc : pos == start ? -1 : pos == end ? 1 : assoc;\n      var result = start + diff + (side < 0 ? 0 : newSize);\n      if (simple) { return result }\n      var recover = pos == (assoc < 0 ? start : end) ? null : makeRecover(i / 3, pos - start);\n      return new MapResult(result, assoc < 0 ? pos != start : pos != end, recover)\n    }\n    diff += newSize - oldSize;\n  }\n  return simple ? pos + diff : new MapResult(pos + diff)\n};\n\nStepMap.prototype.touches = function touches (pos, recover) {\n  var diff = 0, index = recoverIndex(recover);\n  var oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0; i < this.ranges.length; i += 3) {\n    var start = this.ranges[i] - (this.inverted ? diff : 0);\n    if (start > pos) { break }\n    var oldSize = this.ranges[i + oldIndex], end = start + oldSize;\n    if (pos <= end && i == index * 3) { return true }\n    diff += this.ranges[i + newIndex] - oldSize;\n  }\n  return false\n};\n\n// :: ((oldStart: number, oldEnd: number, newStart: number, newEnd: number))\n// Calls the given function on each of the changed ranges included in\n// this map.\nStepMap.prototype.forEach = function forEach (f) {\n  var oldIndex = this.inverted ? 2 : 1, newIndex = this.inverted ? 1 : 2;\n  for (var i = 0, diff = 0; i < this.ranges.length; i += 3) {\n    var start = this.ranges[i], oldStart = start - (this.inverted ? diff : 0), newStart = start + (this.inverted ? 0 : diff);\n    var oldSize = this.ranges[i + oldIndex], newSize = this.ranges[i + newIndex];\n    f(oldStart, oldStart + oldSize, newStart, newStart + newSize);\n    diff += newSize - oldSize;\n  }\n};\n\n// :: () → StepMap\n// Create an inverted version of this map. The result can be used to\n// map positions in the post-step document to the pre-step document.\nStepMap.prototype.invert = function invert () {\n  return new StepMap(this.ranges, !this.inverted)\n};\n\nStepMap.prototype.toString = function toString () {\n  return (this.inverted ? \"-\" : \"\") + JSON.stringify(this.ranges)\n};\n\n// :: (n: number) → StepMap\n// Create a map that moves all positions by offset `n` (which may be\n// negative). This can be useful when applying steps meant for a\n// sub-document to a larger document, or vice-versa.\nStepMap.offset = function offset (n) {\n  return n == 0 ? StepMap.empty : new StepMap(n < 0 ? [0, -n, 0] : [0, 0, n])\n};\n\nStepMap.empty = new StepMap([]);\n\n// :: class extends Mappable\n// A mapping represents a pipeline of zero or more [step\n// maps](#transform.StepMap). It has special provisions for losslessly\n// handling mapping positions through a series of steps in which some\n// steps are inverted versions of earlier steps. (This comes up when\n// ‘[rebasing](/docs/guide/#transform.rebasing)’ steps for\n// collaboration or history management.)\nvar Mapping = function Mapping(maps, mirror, from, to) {\n  // :: [StepMap]\n  // The step maps in this mapping.\n  this.maps = maps || [];\n  // :: number\n  // The starting position in the `maps` array, used when `map` or\n  // `mapResult` is called.\n  this.from = from || 0;\n  // :: number\n  // The end position in the `maps` array.\n  this.to = to == null ? this.maps.length : to;\n  this.mirror = mirror;\n};\n\n// :: (?number, ?number) → Mapping\n// Create a mapping that maps only through a part of this one.\nMapping.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.maps.length;\n\n  return new Mapping(this.maps, this.mirror, from, to)\n};\n\nMapping.prototype.copy = function copy () {\n  return new Mapping(this.maps.slice(), this.mirror && this.mirror.slice(), this.from, this.to)\n};\n\n// :: (StepMap, ?number)\n// Add a step map to the end of this mapping. If `mirrors` is\n// given, it should be the index of the step map that is the mirror\n// image of this one.\nMapping.prototype.appendMap = function appendMap (map, mirrors) {\n  this.to = this.maps.push(map);\n  if (mirrors != null) { this.setMirror(this.maps.length - 1, mirrors); }\n};\n\n// :: (Mapping)\n// Add all the step maps in a given mapping to this one (preserving\n// mirroring information).\nMapping.prototype.appendMapping = function appendMapping (mapping) {\n  for (var i = 0, startSize = this.maps.length; i < mapping.maps.length; i++) {\n    var mirr = mapping.getMirror(i);\n    this.appendMap(mapping.maps[i], mirr != null && mirr < i ? startSize + mirr : null);\n  }\n};\n\n// :: (number) → ?number\n// Finds the offset of the step map that mirrors the map at the\n// given offset, in this mapping (as per the second argument to\n// `appendMap`).\nMapping.prototype.getMirror = function getMirror (n) {\n  if (this.mirror) { for (var i = 0; i < this.mirror.length; i++)\n    { if (this.mirror[i] == n) { return this.mirror[i + (i % 2 ? -1 : 1)] } } }\n};\n\nMapping.prototype.setMirror = function setMirror (n, m) {\n  if (!this.mirror) { this.mirror = []; }\n  this.mirror.push(n, m);\n};\n\n// :: (Mapping)\n// Append the inverse of the given mapping to this one.\nMapping.prototype.appendMappingInverted = function appendMappingInverted (mapping) {\n  for (var i = mapping.maps.length - 1, totalSize = this.maps.length + mapping.maps.length; i >= 0; i--) {\n    var mirr = mapping.getMirror(i);\n    this.appendMap(mapping.maps[i].invert(), mirr != null && mirr > i ? totalSize - mirr - 1 : null);\n  }\n};\n\n// :: () → Mapping\n// Create an inverted version of this mapping.\nMapping.prototype.invert = function invert () {\n  var inverse = new Mapping;\n  inverse.appendMappingInverted(this);\n  return inverse\n};\n\n// : (number, ?number) → number\n// Map a position through this mapping.\nMapping.prototype.map = function map (pos, assoc) {\n    if ( assoc === void 0 ) assoc = 1;\n\n  if (this.mirror) { return this._map(pos, assoc, true) }\n  for (var i = this.from; i < this.to; i++)\n    { pos = this.maps[i].map(pos, assoc); }\n  return pos\n};\n\n// : (number, ?number) → MapResult\n// Map a position through this mapping, returning a mapping\n// result.\nMapping.prototype.mapResult = function mapResult (pos, assoc) {\n  if ( assoc === void 0 ) assoc = 1;\n return this._map(pos, assoc, false) };\n\nMapping.prototype._map = function _map (pos, assoc, simple) {\n  var deleted = false;\n\n  for (var i = this.from; i < this.to; i++) {\n    var map = this.maps[i], result = map.mapResult(pos, assoc);\n    if (result.recover != null) {\n      var corr = this.getMirror(i);\n      if (corr != null && corr > i && corr < this.to) {\n        i = corr;\n        pos = this.maps[corr].recover(result.recover);\n        continue\n      }\n    }\n\n    if (result.deleted) { deleted = true; }\n    pos = result.pos;\n  }\n\n  return simple ? pos : new MapResult(pos, deleted)\n};\n\nfunction TransformError(message) {\n  var err = Error.call(this, message);\n  err.__proto__ = TransformError.prototype;\n  return err\n}\n\nTransformError.prototype = Object.create(Error.prototype);\nTransformError.prototype.constructor = TransformError;\nTransformError.prototype.name = \"TransformError\";\n\n// ::- Abstraction to build up and track an array of\n// [steps](#transform.Step) representing a document transformation.\n//\n// Most transforming methods return the `Transform` object itself, so\n// that they can be chained.\nvar Transform = function Transform(doc) {\n  // :: Node\n  // The current document (the result of applying the steps in the\n  // transform).\n  this.doc = doc;\n  // :: [Step]\n  // The steps in this transform.\n  this.steps = [];\n  // :: [Node]\n  // The documents before each of the steps.\n  this.docs = [];\n  // :: Mapping\n  // A mapping with the maps for each of the steps in this transform.\n  this.mapping = new Mapping;\n};\n\nvar prototypeAccessors = { before: { configurable: true },docChanged: { configurable: true } };\n\n// :: Node The starting document.\nprototypeAccessors.before.get = function () { return this.docs.length ? this.docs[0] : this.doc };\n\n// :: (step: Step) → this\n// Apply a new step in this transform, saving the result. Throws an\n// error when the step fails.\nTransform.prototype.step = function step (object) {\n  var result = this.maybeStep(object);\n  if (result.failed) { throw new TransformError(result.failed) }\n  return this\n};\n\n// :: (Step) → StepResult\n// Try to apply a step in this transformation, ignoring it if it\n// fails. Returns the step result.\nTransform.prototype.maybeStep = function maybeStep (step) {\n  var result = step.apply(this.doc);\n  if (!result.failed) { this.addStep(step, result.doc); }\n  return result\n};\n\n// :: bool\n// True when the document has been changed (when there are any\n// steps).\nprototypeAccessors.docChanged.get = function () {\n  return this.steps.length > 0\n};\n\nTransform.prototype.addStep = function addStep (step, doc) {\n  this.docs.push(this.doc);\n  this.steps.push(step);\n  this.mapping.appendMap(step.getMap());\n  this.doc = doc;\n};\n\nObject.defineProperties( Transform.prototype, prototypeAccessors );\n\nfunction mustOverride() { throw new Error(\"Override me\") }\n\nvar stepsByID = Object.create(null);\n\n// ::- A step object represents an atomic change. It generally applies\n// only to the document it was created for, since the positions\n// stored in it will only make sense for that document.\n//\n// New steps are defined by creating classes that extend `Step`,\n// overriding the `apply`, `invert`, `map`, `getMap` and `fromJSON`\n// methods, and registering your class with a unique\n// JSON-serialization identifier using\n// [`Step.jsonID`](#transform.Step^jsonID).\nvar Step = function Step () {};\n\nStep.prototype.apply = function apply (_doc) { return mustOverride() };\n\n// :: () → StepMap\n// Get the step map that represents the changes made by this step,\n// and which can be used to transform between positions in the old\n// and the new document.\nStep.prototype.getMap = function getMap () { return StepMap.empty };\n\n// :: (doc: Node) → Step\n// Create an inverted version of this step. Needs the document as it\n// was before the step as argument.\nStep.prototype.invert = function invert (_doc) { return mustOverride() };\n\n// :: (mapping: Mappable) → ?Step\n// Map this step through a mappable thing, returning either a\n// version of that step with its positions adjusted, or `null` if\n// the step was entirely deleted by the mapping.\nStep.prototype.map = function map (_mapping) { return mustOverride() };\n\n// :: (other: Step) → ?Step\n// Try to merge this step with another one, to be applied directly\n// after it. Returns the merged step when possible, null if the\n// steps can't be merged.\nStep.prototype.merge = function merge (_other) { return null };\n\n// :: () → Object\n// Create a JSON-serializeable representation of this step. When\n// defining this for a custom subclass, make sure the result object\n// includes the step type's [JSON id](#transform.Step^jsonID) under\n// the `stepType` property.\nStep.prototype.toJSON = function toJSON () { return mustOverride() };\n\n// :: (Schema, Object) → Step\n// Deserialize a step from its JSON representation. Will call\n// through to the step class' own implementation of this method.\nStep.fromJSON = function fromJSON (schema, json) {\n  if (!json || !json.stepType) { throw new RangeError(\"Invalid input for Step.fromJSON\") }\n  var type = stepsByID[json.stepType];\n  if (!type) { throw new RangeError((\"No step type \" + (json.stepType) + \" defined\")) }\n  return type.fromJSON(schema, json)\n};\n\n// :: (string, constructor<Step>)\n// To be able to serialize steps to JSON, each step needs a string\n// ID to attach to its JSON representation. Use this method to\n// register an ID for your step classes. Try to pick something\n// that's unlikely to clash with steps from other modules.\nStep.jsonID = function jsonID (id, stepClass) {\n  if (id in stepsByID) { throw new RangeError(\"Duplicate use of step JSON ID \" + id) }\n  stepsByID[id] = stepClass;\n  stepClass.prototype.jsonID = id;\n  return stepClass\n};\n\n// ::- The result of [applying](#transform.Step.apply) a step. Contains either a\n// new document or a failure value.\nvar StepResult = function StepResult(doc, failed) {\n  // :: ?Node The transformed document.\n  this.doc = doc;\n  // :: ?string Text providing information about a failed step.\n  this.failed = failed;\n};\n\n// :: (Node) → StepResult\n// Create a successful step result.\nStepResult.ok = function ok (doc) { return new StepResult(doc, null) };\n\n// :: (string) → StepResult\n// Create a failed step result.\nStepResult.fail = function fail (message) { return new StepResult(null, message) };\n\n// :: (Node, number, number, Slice) → StepResult\n// Call [`Node.replace`](#model.Node.replace) with the given\n// arguments. Create a successful result if it succeeds, and a\n// failed one if it throws a `ReplaceError`.\nStepResult.fromReplace = function fromReplace (doc, from, to, slice) {\n  try {\n    return StepResult.ok(doc.replace(from, to, slice))\n  } catch (e) {\n    if (e instanceof ReplaceError) { return StepResult.fail(e.message) }\n    throw e\n  }\n};\n\n// ::- Replace a part of the document with a slice of new content.\nvar ReplaceStep = /*@__PURE__*/(function (Step) {\n  function ReplaceStep(from, to, slice, structure) {\n    Step.call(this);\n    // :: number\n    // The start position of the replaced range.\n    this.from = from;\n    // :: number\n    // The end position of the replaced range.\n    this.to = to;\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice;\n    this.structure = !!structure;\n  }\n\n  if ( Step ) ReplaceStep.__proto__ = Step;\n  ReplaceStep.prototype = Object.create( Step && Step.prototype );\n  ReplaceStep.prototype.constructor = ReplaceStep;\n\n  ReplaceStep.prototype.apply = function apply (doc) {\n    if (this.structure && contentBetween(doc, this.from, this.to))\n      { return StepResult.fail(\"Structure replace would overwrite content\") }\n    return StepResult.fromReplace(doc, this.from, this.to, this.slice)\n  };\n\n  ReplaceStep.prototype.getMap = function getMap () {\n    return new StepMap([this.from, this.to - this.from, this.slice.size])\n  };\n\n  ReplaceStep.prototype.invert = function invert (doc) {\n    return new ReplaceStep(this.from, this.from + this.slice.size, doc.slice(this.from, this.to))\n  };\n\n  ReplaceStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted) { return null }\n    return new ReplaceStep(from.pos, Math.max(from.pos, to.pos), this.slice)\n  };\n\n  ReplaceStep.prototype.merge = function merge (other) {\n    if (!(other instanceof ReplaceStep) || other.structure || this.structure) { return null }\n\n    if (this.from + this.slice.size == other.from && !this.slice.openEnd && !other.slice.openStart) {\n      var slice = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(this.slice.content.append(other.slice.content), this.slice.openStart, other.slice.openEnd);\n      return new ReplaceStep(this.from, this.to + (other.to - other.from), slice, this.structure)\n    } else if (other.to == this.from && !this.slice.openStart && !other.slice.openEnd) {\n      var slice$1 = this.slice.size + other.slice.size == 0 ? Slice.empty\n          : new Slice(other.slice.content.append(this.slice.content), other.slice.openStart, this.slice.openEnd);\n      return new ReplaceStep(other.from, this.to, slice$1, this.structure)\n    } else {\n      return null\n    }\n  };\n\n  ReplaceStep.prototype.toJSON = function toJSON () {\n    var json = {stepType: \"replace\", from: this.from, to: this.to};\n    if (this.slice.size) { json.slice = this.slice.toJSON(); }\n    if (this.structure) { json.structure = true; }\n    return json\n  };\n\n  ReplaceStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for ReplaceStep.fromJSON\") }\n    return new ReplaceStep(json.from, json.to, Slice.fromJSON(schema, json.slice), !!json.structure)\n  };\n\n  return ReplaceStep;\n}(Step));\n\nStep.jsonID(\"replace\", ReplaceStep);\n\n// ::- Replace a part of the document with a slice of content, but\n// preserve a range of the replaced content by moving it into the\n// slice.\nvar ReplaceAroundStep = /*@__PURE__*/(function (Step) {\n  function ReplaceAroundStep(from, to, gapFrom, gapTo, slice, insert, structure) {\n    Step.call(this);\n    // :: number\n    // The start position of the replaced range.\n    this.from = from;\n    // :: number\n    // The end position of the replaced range.\n    this.to = to;\n    // :: number\n    // The start of preserved range.\n    this.gapFrom = gapFrom;\n    // :: number\n    // The end of preserved range.\n    this.gapTo = gapTo;\n    // :: Slice\n    // The slice to insert.\n    this.slice = slice;\n    // :: number\n    // The position in the slice where the preserved range should be\n    // inserted.\n    this.insert = insert;\n    this.structure = !!structure;\n  }\n\n  if ( Step ) ReplaceAroundStep.__proto__ = Step;\n  ReplaceAroundStep.prototype = Object.create( Step && Step.prototype );\n  ReplaceAroundStep.prototype.constructor = ReplaceAroundStep;\n\n  ReplaceAroundStep.prototype.apply = function apply (doc) {\n    if (this.structure && (contentBetween(doc, this.from, this.gapFrom) ||\n                           contentBetween(doc, this.gapTo, this.to)))\n      { return StepResult.fail(\"Structure gap-replace would overwrite content\") }\n\n    var gap = doc.slice(this.gapFrom, this.gapTo);\n    if (gap.openStart || gap.openEnd)\n      { return StepResult.fail(\"Gap is not a flat range\") }\n    var inserted = this.slice.insertAt(this.insert, gap.content);\n    if (!inserted) { return StepResult.fail(\"Content does not fit in gap\") }\n    return StepResult.fromReplace(doc, this.from, this.to, inserted)\n  };\n\n  ReplaceAroundStep.prototype.getMap = function getMap () {\n    return new StepMap([this.from, this.gapFrom - this.from, this.insert,\n                        this.gapTo, this.to - this.gapTo, this.slice.size - this.insert])\n  };\n\n  ReplaceAroundStep.prototype.invert = function invert (doc) {\n    var gap = this.gapTo - this.gapFrom;\n    return new ReplaceAroundStep(this.from, this.from + this.slice.size + gap,\n                                 this.from + this.insert, this.from + this.insert + gap,\n                                 doc.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from),\n                                 this.gapFrom - this.from, this.structure)\n  };\n\n  ReplaceAroundStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    var gapFrom = mapping.map(this.gapFrom, -1), gapTo = mapping.map(this.gapTo, 1);\n    if ((from.deleted && to.deleted) || gapFrom < from.pos || gapTo > to.pos) { return null }\n    return new ReplaceAroundStep(from.pos, to.pos, gapFrom, gapTo, this.slice, this.insert, this.structure)\n  };\n\n  ReplaceAroundStep.prototype.toJSON = function toJSON () {\n    var json = {stepType: \"replaceAround\", from: this.from, to: this.to,\n                gapFrom: this.gapFrom, gapTo: this.gapTo, insert: this.insert};\n    if (this.slice.size) { json.slice = this.slice.toJSON(); }\n    if (this.structure) { json.structure = true; }\n    return json\n  };\n\n  ReplaceAroundStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\" ||\n        typeof json.gapFrom != \"number\" || typeof json.gapTo != \"number\" || typeof json.insert != \"number\")\n      { throw new RangeError(\"Invalid input for ReplaceAroundStep.fromJSON\") }\n    return new ReplaceAroundStep(json.from, json.to, json.gapFrom, json.gapTo,\n                                 Slice.fromJSON(schema, json.slice), json.insert, !!json.structure)\n  };\n\n  return ReplaceAroundStep;\n}(Step));\n\nStep.jsonID(\"replaceAround\", ReplaceAroundStep);\n\nfunction contentBetween(doc, from, to) {\n  var $from = doc.resolve(from), dist = to - from, depth = $from.depth;\n  while (dist > 0 && depth > 0 && $from.indexAfter(depth) == $from.node(depth).childCount) {\n    depth--;\n    dist--;\n  }\n  if (dist > 0) {\n    var next = $from.node(depth).maybeChild($from.indexAfter(depth));\n    while (dist > 0) {\n      if (!next || next.isLeaf) { return true }\n      next = next.firstChild;\n      dist--;\n    }\n  }\n  return false\n}\n\nfunction canCut(node, start, end) {\n  return (start == 0 || node.canReplace(start, node.childCount)) &&\n    (end == node.childCount || node.canReplace(0, end))\n}\n\n// :: (NodeRange) → ?number\n// Try to find a target depth to which the content in the given range\n// can be lifted. Will not go across\n// [isolating](#model.NodeSpec.isolating) parent nodes.\nfunction liftTarget(range) {\n  var parent = range.parent;\n  var content = parent.content.cutByIndex(range.startIndex, range.endIndex);\n  for (var depth = range.depth;; --depth) {\n    var node = range.$from.node(depth);\n    var index = range.$from.index(depth), endIndex = range.$to.indexAfter(depth);\n    if (depth < range.depth && node.canReplace(index, endIndex, content))\n      { return depth }\n    if (depth == 0 || node.type.spec.isolating || !canCut(node, index, endIndex)) { break }\n  }\n}\n\n// :: (NodeRange, number) → this\n// Split the content in the given range off from its parent, if there\n// is sibling content before or after it, and move it up the tree to\n// the depth specified by `target`. You'll probably want to use\n// [`liftTarget`](#transform.liftTarget) to compute `target`, to make\n// sure the lift is valid.\nTransform.prototype.lift = function(range, target) {\n  var $from = range.$from;\n  var $to = range.$to;\n  var depth = range.depth;\n\n  var gapStart = $from.before(depth + 1), gapEnd = $to.after(depth + 1);\n  var start = gapStart, end = gapEnd;\n\n  var before = Fragment.empty, openStart = 0;\n  for (var d = depth, splitting = false; d > target; d--)\n    { if (splitting || $from.index(d) > 0) {\n      splitting = true;\n      before = Fragment.from($from.node(d).copy(before));\n      openStart++;\n    } else {\n      start--;\n    } }\n  var after = Fragment.empty, openEnd = 0;\n  for (var d$1 = depth, splitting$1 = false; d$1 > target; d$1--)\n    { if (splitting$1 || $to.after(d$1 + 1) < $to.end(d$1)) {\n      splitting$1 = true;\n      after = Fragment.from($to.node(d$1).copy(after));\n      openEnd++;\n    } else {\n      end++;\n    } }\n\n  return this.step(new ReplaceAroundStep(start, end, gapStart, gapEnd,\n                                         new Slice(before.append(after), openStart, openEnd),\n                                         before.size - openStart, true))\n};\n\n// :: (NodeRange, NodeType, ?Object, ?NodeRange) → ?[{type: NodeType, attrs: ?Object}]\n// Try to find a valid way to wrap the content in the given range in a\n// node of the given type. May introduce extra nodes around and inside\n// the wrapper node, if necessary. Returns null if no valid wrapping\n// could be found. When `innerRange` is given, that range's content is\n// used as the content to fit into the wrapping, instead of the\n// content of `range`.\nfunction findWrapping(range, nodeType, attrs, innerRange) {\n  if ( innerRange === void 0 ) innerRange = range;\n\n  var around = findWrappingOutside(range, nodeType);\n  var inner = around && findWrappingInside(innerRange, nodeType);\n  if (!inner) { return null }\n  return around.map(withAttrs).concat({type: nodeType, attrs: attrs}).concat(inner.map(withAttrs))\n}\n\nfunction withAttrs(type) { return {type: type, attrs: null} }\n\nfunction findWrappingOutside(range, type) {\n  var parent = range.parent;\n  var startIndex = range.startIndex;\n  var endIndex = range.endIndex;\n  var around = parent.contentMatchAt(startIndex).findWrapping(type);\n  if (!around) { return null }\n  var outer = around.length ? around[0] : type;\n  return parent.canReplaceWith(startIndex, endIndex, outer) ? around : null\n}\n\nfunction findWrappingInside(range, type) {\n  var parent = range.parent;\n  var startIndex = range.startIndex;\n  var endIndex = range.endIndex;\n  var inner = parent.child(startIndex);\n  var inside = type.contentMatch.findWrapping(inner.type);\n  if (!inside) { return null }\n  var lastType = inside.length ? inside[inside.length - 1] : type;\n  var innerMatch = lastType.contentMatch;\n  for (var i = startIndex; innerMatch && i < endIndex; i++)\n    { innerMatch = innerMatch.matchType(parent.child(i).type); }\n  if (!innerMatch || !innerMatch.validEnd) { return null }\n  return inside\n}\n\n// :: (NodeRange, [{type: NodeType, attrs: ?Object}]) → this\n// Wrap the given [range](#model.NodeRange) in the given set of wrappers.\n// The wrappers are assumed to be valid in this position, and should\n// probably be computed with [`findWrapping`](#transform.findWrapping).\nTransform.prototype.wrap = function(range, wrappers) {\n  var content = Fragment.empty;\n  for (var i = wrappers.length - 1; i >= 0; i--) {\n    if (content.size) {\n      var match = wrappers[i].type.contentMatch.matchFragment(content);\n      if (!match || !match.validEnd)\n        { throw new RangeError(\"Wrapper type given to Transform.wrap does not form valid content of its parent wrapper\") }\n    }\n    content = Fragment.from(wrappers[i].type.create(wrappers[i].attrs, content));\n  }\n\n  var start = range.start, end = range.end;\n  return this.step(new ReplaceAroundStep(start, end, start, end, new Slice(content, 0, 0), wrappers.length, true))\n};\n\n// :: (number, ?number, NodeType, ?Object) → this\n// Set the type of all textblocks (partly) between `from` and `to` to\n// the given node type with the given attributes.\nTransform.prototype.setBlockType = function(from, to, type, attrs) {\n  var this$1 = this;\n  if ( to === void 0 ) to = from;\n\n  if (!type.isTextblock) { throw new RangeError(\"Type given to setBlockType should be a textblock\") }\n  var mapFrom = this.steps.length;\n  this.doc.nodesBetween(from, to, function (node, pos) {\n    if (node.isTextblock && !node.hasMarkup(type, attrs) && canChangeType(this$1.doc, this$1.mapping.slice(mapFrom).map(pos), type)) {\n      // Ensure all markup that isn't allowed in the new node type is cleared\n      this$1.clearIncompatible(this$1.mapping.slice(mapFrom).map(pos, 1), type);\n      var mapping = this$1.mapping.slice(mapFrom);\n      var startM = mapping.map(pos, 1), endM = mapping.map(pos + node.nodeSize, 1);\n      this$1.step(new ReplaceAroundStep(startM, endM, startM + 1, endM - 1,\n                                      new Slice(Fragment.from(type.create(attrs, null, node.marks)), 0, 0), 1, true));\n      return false\n    }\n  });\n  return this\n};\n\nfunction canChangeType(doc, pos, type) {\n  var $pos = doc.resolve(pos), index = $pos.index();\n  return $pos.parent.canReplaceWith(index, index + 1, type)\n}\n\n// :: (number, ?NodeType, ?Object, ?[Mark]) → this\n// Change the type, attributes, and/or marks of the node at `pos`.\n// When `type` isn't given, the existing node type is preserved,\nTransform.prototype.setNodeMarkup = function(pos, type, attrs, marks) {\n  var node = this.doc.nodeAt(pos);\n  if (!node) { throw new RangeError(\"No node at given position\") }\n  if (!type) { type = node.type; }\n  var newNode = type.create(attrs, null, marks || node.marks);\n  if (node.isLeaf)\n    { return this.replaceWith(pos, pos + node.nodeSize, newNode) }\n\n  if (!type.validContent(node.content))\n    { throw new RangeError(\"Invalid content for node type \" + type.name) }\n\n  return this.step(new ReplaceAroundStep(pos, pos + node.nodeSize, pos + 1, pos + node.nodeSize - 1,\n                                         new Slice(Fragment.from(newNode), 0, 0), 1, true))\n};\n\n// :: (Node, number, number, ?[?{type: NodeType, attrs: ?Object}]) → bool\n// Check whether splitting at the given position is allowed.\nfunction canSplit(doc, pos, depth, typesAfter) {\n  if ( depth === void 0 ) depth = 1;\n\n  var $pos = doc.resolve(pos), base = $pos.depth - depth;\n  var innerType = (typesAfter && typesAfter[typesAfter.length - 1]) || $pos.parent;\n  if (base < 0 || $pos.parent.type.spec.isolating ||\n      !$pos.parent.canReplace($pos.index(), $pos.parent.childCount) ||\n      !innerType.type.validContent($pos.parent.content.cutByIndex($pos.index(), $pos.parent.childCount)))\n    { return false }\n  for (var d = $pos.depth - 1, i = depth - 2; d > base; d--, i--) {\n    var node = $pos.node(d), index$1 = $pos.index(d);\n    if (node.type.spec.isolating) { return false }\n    var rest = node.content.cutByIndex(index$1, node.childCount);\n    var after = (typesAfter && typesAfter[i]) || node;\n    if (after != node) { rest = rest.replaceChild(0, after.type.create(after.attrs)); }\n    if (!node.canReplace(index$1 + 1, node.childCount) || !after.type.validContent(rest))\n      { return false }\n  }\n  var index = $pos.indexAfter(base);\n  var baseType = typesAfter && typesAfter[0];\n  return $pos.node(base).canReplaceWith(index, index, baseType ? baseType.type : $pos.node(base + 1).type)\n}\n\n// :: (number, ?number, ?[?{type: NodeType, attrs: ?Object}]) → this\n// Split the node at the given position, and optionally, if `depth` is\n// greater than one, any number of nodes above that. By default, the\n// parts split off will inherit the node type of the original node.\n// This can be changed by passing an array of types and attributes to\n// use after the split.\nTransform.prototype.split = function(pos, depth, typesAfter) {\n  if ( depth === void 0 ) depth = 1;\n\n  var $pos = this.doc.resolve(pos), before = Fragment.empty, after = Fragment.empty;\n  for (var d = $pos.depth, e = $pos.depth - depth, i = depth - 1; d > e; d--, i--) {\n    before = Fragment.from($pos.node(d).copy(before));\n    var typeAfter = typesAfter && typesAfter[i];\n    after = Fragment.from(typeAfter ? typeAfter.type.create(typeAfter.attrs, after) : $pos.node(d).copy(after));\n  }\n  return this.step(new ReplaceStep(pos, pos, new Slice(before.append(after), depth, depth), true))\n};\n\n// :: (Node, number) → bool\n// Test whether the blocks before and after a given position can be\n// joined.\nfunction canJoin(doc, pos) {\n  var $pos = doc.resolve(pos), index = $pos.index();\n  return joinable($pos.nodeBefore, $pos.nodeAfter) &&\n    $pos.parent.canReplace(index, index + 1)\n}\n\nfunction joinable(a, b) {\n  return a && b && !a.isLeaf && a.canAppend(b)\n}\n\n// :: (Node, number, ?number) → ?number\n// Find an ancestor of the given position that can be joined to the\n// block before (or after if `dir` is positive). Returns the joinable\n// point, if any.\nfunction joinPoint(doc, pos, dir) {\n  if ( dir === void 0 ) dir = -1;\n\n  var $pos = doc.resolve(pos);\n  for (var d = $pos.depth;; d--) {\n    var before = (void 0), after = (void 0), index = $pos.index(d);\n    if (d == $pos.depth) {\n      before = $pos.nodeBefore;\n      after = $pos.nodeAfter;\n    } else if (dir > 0) {\n      before = $pos.node(d + 1);\n      index++;\n      after = $pos.node(d).maybeChild(index);\n    } else {\n      before = $pos.node(d).maybeChild(index - 1);\n      after = $pos.node(d + 1);\n    }\n    if (before && !before.isTextblock && joinable(before, after) &&\n        $pos.node(d).canReplace(index, index + 1)) { return pos }\n    if (d == 0) { break }\n    pos = dir < 0 ? $pos.before(d) : $pos.after(d);\n  }\n}\n\n// :: (number, ?number) → this\n// Join the blocks around the given position. If depth is 2, their\n// last and first siblings are also joined, and so on.\nTransform.prototype.join = function(pos, depth) {\n  if ( depth === void 0 ) depth = 1;\n\n  var step = new ReplaceStep(pos - depth, pos + depth, Slice.empty, true);\n  return this.step(step)\n};\n\n// :: (Node, number, NodeType) → ?number\n// Try to find a point where a node of the given type can be inserted\n// near `pos`, by searching up the node hierarchy when `pos` itself\n// isn't a valid place but is at the start or end of a node. Return\n// null if no position was found.\nfunction insertPoint(doc, pos, nodeType) {\n  var $pos = doc.resolve(pos);\n  if ($pos.parent.canReplaceWith($pos.index(), $pos.index(), nodeType)) { return pos }\n\n  if ($pos.parentOffset == 0)\n    { for (var d = $pos.depth - 1; d >= 0; d--) {\n      var index = $pos.index(d);\n      if ($pos.node(d).canReplaceWith(index, index, nodeType)) { return $pos.before(d + 1) }\n      if (index > 0) { return null }\n    } }\n  if ($pos.parentOffset == $pos.parent.content.size)\n    { for (var d$1 = $pos.depth - 1; d$1 >= 0; d$1--) {\n      var index$1 = $pos.indexAfter(d$1);\n      if ($pos.node(d$1).canReplaceWith(index$1, index$1, nodeType)) { return $pos.after(d$1 + 1) }\n      if (index$1 < $pos.node(d$1).childCount) { return null }\n    } }\n}\n\n// :: (Node, number, Slice) → ?number\n// Finds a position at or around the given position where the given\n// slice can be inserted. Will look at parent nodes' nearest boundary\n// and try there, even if the original position wasn't directly at the\n// start or end of that node. Returns null when no position was found.\nfunction dropPoint(doc, pos, slice) {\n  var $pos = doc.resolve(pos);\n  if (!slice.content.size) { return pos }\n  var content = slice.content;\n  for (var i = 0; i < slice.openStart; i++) { content = content.firstChild.content; }\n  for (var pass = 1; pass <= (slice.openStart == 0 && slice.size ? 2 : 1); pass++) {\n    for (var d = $pos.depth; d >= 0; d--) {\n      var bias = d == $pos.depth ? 0 : $pos.pos <= ($pos.start(d + 1) + $pos.end(d + 1)) / 2 ? -1 : 1;\n      var insertPos = $pos.index(d) + (bias > 0 ? 1 : 0);\n      var parent = $pos.node(d), fits = false;\n      if (pass == 1) {\n        fits = parent.canReplace(insertPos, insertPos, content);\n      } else {\n        var wrapping = parent.contentMatchAt(insertPos).findWrapping(content.firstChild.type);\n        fits = wrapping && parent.canReplaceWith(insertPos, insertPos, wrapping[0]);\n      }\n      if (fits)\n        { return bias == 0 ? $pos.pos : bias < 0 ? $pos.before(d + 1) : $pos.after(d + 1) }\n    }\n  }\n  return null\n}\n\nfunction mapFragment(fragment, f, parent) {\n  var mapped = [];\n  for (var i = 0; i < fragment.childCount; i++) {\n    var child = fragment.child(i);\n    if (child.content.size) { child = child.copy(mapFragment(child.content, f, child)); }\n    if (child.isInline) { child = f(child, parent, i); }\n    mapped.push(child);\n  }\n  return Fragment.fromArray(mapped)\n}\n\n// ::- Add a mark to all inline content between two positions.\nvar AddMarkStep = /*@__PURE__*/(function (Step) {\n  function AddMarkStep(from, to, mark) {\n    Step.call(this);\n    // :: number\n    // The start of the marked range.\n    this.from = from;\n    // :: number\n    // The end of the marked range.\n    this.to = to;\n    // :: Mark\n    // The mark to add.\n    this.mark = mark;\n  }\n\n  if ( Step ) AddMarkStep.__proto__ = Step;\n  AddMarkStep.prototype = Object.create( Step && Step.prototype );\n  AddMarkStep.prototype.constructor = AddMarkStep;\n\n  AddMarkStep.prototype.apply = function apply (doc) {\n    var this$1 = this;\n\n    var oldSlice = doc.slice(this.from, this.to), $from = doc.resolve(this.from);\n    var parent = $from.node($from.sharedDepth(this.to));\n    var slice = new Slice(mapFragment(oldSlice.content, function (node, parent) {\n      if (!node.isAtom || !parent.type.allowsMarkType(this$1.mark.type)) { return node }\n      return node.mark(this$1.mark.addToSet(node.marks))\n    }, parent), oldSlice.openStart, oldSlice.openEnd);\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  };\n\n  AddMarkStep.prototype.invert = function invert () {\n    return new RemoveMarkStep(this.from, this.to, this.mark)\n  };\n\n  AddMarkStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted || from.pos >= to.pos) { return null }\n    return new AddMarkStep(from.pos, to.pos, this.mark)\n  };\n\n  AddMarkStep.prototype.merge = function merge (other) {\n    if (other instanceof AddMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      { return new AddMarkStep(Math.min(this.from, other.from),\n                             Math.max(this.to, other.to), this.mark) }\n  };\n\n  AddMarkStep.prototype.toJSON = function toJSON () {\n    return {stepType: \"addMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  };\n\n  AddMarkStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for AddMarkStep.fromJSON\") }\n    return new AddMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  };\n\n  return AddMarkStep;\n}(Step));\n\nStep.jsonID(\"addMark\", AddMarkStep);\n\n// ::- Remove a mark from all inline content between two positions.\nvar RemoveMarkStep = /*@__PURE__*/(function (Step) {\n  function RemoveMarkStep(from, to, mark) {\n    Step.call(this);\n    // :: number\n    // The start of the unmarked range.\n    this.from = from;\n    // :: number\n    // The end of the unmarked range.\n    this.to = to;\n    // :: Mark\n    // The mark to remove.\n    this.mark = mark;\n  }\n\n  if ( Step ) RemoveMarkStep.__proto__ = Step;\n  RemoveMarkStep.prototype = Object.create( Step && Step.prototype );\n  RemoveMarkStep.prototype.constructor = RemoveMarkStep;\n\n  RemoveMarkStep.prototype.apply = function apply (doc) {\n    var this$1 = this;\n\n    var oldSlice = doc.slice(this.from, this.to);\n    var slice = new Slice(mapFragment(oldSlice.content, function (node) {\n      return node.mark(this$1.mark.removeFromSet(node.marks))\n    }), oldSlice.openStart, oldSlice.openEnd);\n    return StepResult.fromReplace(doc, this.from, this.to, slice)\n  };\n\n  RemoveMarkStep.prototype.invert = function invert () {\n    return new AddMarkStep(this.from, this.to, this.mark)\n  };\n\n  RemoveMarkStep.prototype.map = function map (mapping) {\n    var from = mapping.mapResult(this.from, 1), to = mapping.mapResult(this.to, -1);\n    if (from.deleted && to.deleted || from.pos >= to.pos) { return null }\n    return new RemoveMarkStep(from.pos, to.pos, this.mark)\n  };\n\n  RemoveMarkStep.prototype.merge = function merge (other) {\n    if (other instanceof RemoveMarkStep &&\n        other.mark.eq(this.mark) &&\n        this.from <= other.to && this.to >= other.from)\n      { return new RemoveMarkStep(Math.min(this.from, other.from),\n                                Math.max(this.to, other.to), this.mark) }\n  };\n\n  RemoveMarkStep.prototype.toJSON = function toJSON () {\n    return {stepType: \"removeMark\", mark: this.mark.toJSON(),\n            from: this.from, to: this.to}\n  };\n\n  RemoveMarkStep.fromJSON = function fromJSON (schema, json) {\n    if (typeof json.from != \"number\" || typeof json.to != \"number\")\n      { throw new RangeError(\"Invalid input for RemoveMarkStep.fromJSON\") }\n    return new RemoveMarkStep(json.from, json.to, schema.markFromJSON(json.mark))\n  };\n\n  return RemoveMarkStep;\n}(Step));\n\nStep.jsonID(\"removeMark\", RemoveMarkStep);\n\n// :: (number, number, Mark) → this\n// Add the given mark to the inline content between `from` and `to`.\nTransform.prototype.addMark = function(from, to, mark) {\n  var this$1 = this;\n\n  var removed = [], added = [], removing = null, adding = null;\n  this.doc.nodesBetween(from, to, function (node, pos, parent) {\n    if (!node.isInline) { return }\n    var marks = node.marks;\n    if (!mark.isInSet(marks) && parent.type.allowsMarkType(mark.type)) {\n      var start = Math.max(pos, from), end = Math.min(pos + node.nodeSize, to);\n      var newSet = mark.addToSet(marks);\n\n      for (var i = 0; i < marks.length; i++) {\n        if (!marks[i].isInSet(newSet)) {\n          if (removing && removing.to == start && removing.mark.eq(marks[i]))\n            { removing.to = end; }\n          else\n            { removed.push(removing = new RemoveMarkStep(start, end, marks[i])); }\n        }\n      }\n\n      if (adding && adding.to == start)\n        { adding.to = end; }\n      else\n        { added.push(adding = new AddMarkStep(start, end, mark)); }\n    }\n  });\n\n  removed.forEach(function (s) { return this$1.step(s); });\n  added.forEach(function (s) { return this$1.step(s); });\n  return this\n};\n\n// :: (number, number, ?union<Mark, MarkType>) → this\n// Remove marks from inline nodes between `from` and `to`. When `mark`\n// is a single mark, remove precisely that mark. When it is a mark type,\n// remove all marks of that type. When it is null, remove all marks of\n// any type.\nTransform.prototype.removeMark = function(from, to, mark) {\n  var this$1 = this;\n  if ( mark === void 0 ) mark = null;\n\n  var matched = [], step = 0;\n  this.doc.nodesBetween(from, to, function (node, pos) {\n    if (!node.isInline) { return }\n    step++;\n    var toRemove = null;\n    if (mark instanceof MarkType) {\n      var set = node.marks, found;\n      while (found = mark.isInSet(set)) {\n(toRemove || (toRemove = [])).push(found);\n        set = found.removeFromSet(set);\n      }\n    } else if (mark) {\n      if (mark.isInSet(node.marks)) { toRemove = [mark]; }\n    } else {\n      toRemove = node.marks;\n    }\n    if (toRemove && toRemove.length) {\n      var end = Math.min(pos + node.nodeSize, to);\n      for (var i = 0; i < toRemove.length; i++) {\n        var style = toRemove[i], found$1 = (void 0);\n        for (var j = 0; j < matched.length; j++) {\n          var m = matched[j];\n          if (m.step == step - 1 && style.eq(matched[j].style)) { found$1 = m; }\n        }\n        if (found$1) {\n          found$1.to = end;\n          found$1.step = step;\n        } else {\n          matched.push({style: style, from: Math.max(pos, from), to: end, step: step});\n        }\n      }\n    }\n  });\n  matched.forEach(function (m) { return this$1.step(new RemoveMarkStep(m.from, m.to, m.style)); });\n  return this\n};\n\n// :: (number, NodeType, ?ContentMatch) → this\n// Removes all marks and nodes from the content of the node at `pos`\n// that don't match the given new parent node type. Accepts an\n// optional starting [content match](#model.ContentMatch) as third\n// argument.\nTransform.prototype.clearIncompatible = function(pos, parentType, match) {\n  if ( match === void 0 ) match = parentType.contentMatch;\n\n  var node = this.doc.nodeAt(pos);\n  var delSteps = [], cur = pos + 1;\n  for (var i = 0; i < node.childCount; i++) {\n    var child = node.child(i), end = cur + child.nodeSize;\n    var allowed = match.matchType(child.type, child.attrs);\n    if (!allowed) {\n      delSteps.push(new ReplaceStep(cur, end, Slice.empty));\n    } else {\n      match = allowed;\n      for (var j = 0; j < child.marks.length; j++) { if (!parentType.allowsMarkType(child.marks[j].type))\n        { this.step(new RemoveMarkStep(cur, end, child.marks[j])); } }\n    }\n    cur = end;\n  }\n  if (!match.validEnd) {\n    var fill = match.fillBefore(Fragment.empty, true);\n    this.replace(cur, cur, new Slice(fill, 0, 0));\n  }\n  for (var i$1 = delSteps.length - 1; i$1 >= 0; i$1--) { this.step(delSteps[i$1]); }\n  return this\n};\n\n// :: (Node, number, ?number, ?Slice) → ?Step\n// ‘Fit’ a slice into a given position in the document, producing a\n// [step](#transform.Step) that inserts it. Will return null if\n// there's no meaningful way to insert the slice here, or inserting it\n// would be a no-op (an empty slice over an empty range).\nfunction replaceStep(doc, from, to, slice) {\n  if ( to === void 0 ) to = from;\n  if ( slice === void 0 ) slice = Slice.empty;\n\n  if (from == to && !slice.size) { return null }\n\n  var $from = doc.resolve(from), $to = doc.resolve(to);\n  // Optimization -- avoid work if it's obvious that it's not needed.\n  if (fitsTrivially($from, $to, slice)) { return new ReplaceStep(from, to, slice) }\n  return new Fitter($from, $to, slice).fit()\n}\n\n// :: (number, ?number, ?Slice) → this\n// Replace the part of the document between `from` and `to` with the\n// given `slice`.\nTransform.prototype.replace = function(from, to, slice) {\n  if ( to === void 0 ) to = from;\n  if ( slice === void 0 ) slice = Slice.empty;\n\n  var step = replaceStep(this.doc, from, to, slice);\n  if (step) { this.step(step); }\n  return this\n};\n\n// :: (number, number, union<Fragment, Node, [Node]>) → this\n// Replace the given range with the given content, which may be a\n// fragment, node, or array of nodes.\nTransform.prototype.replaceWith = function(from, to, content) {\n  return this.replace(from, to, new Slice(Fragment.from(content), 0, 0))\n};\n\n// :: (number, number) → this\n// Delete the content between the given positions.\nTransform.prototype.delete = function(from, to) {\n  return this.replace(from, to, Slice.empty)\n};\n\n// :: (number, union<Fragment, Node, [Node]>) → this\n// Insert the given content at the given position.\nTransform.prototype.insert = function(pos, content) {\n  return this.replaceWith(pos, pos, content)\n};\n\nfunction fitsTrivially($from, $to, slice) {\n  return !slice.openStart && !slice.openEnd && $from.start() == $to.start() &&\n    $from.parent.canReplace($from.index(), $to.index(), slice.content)\n}\n\n// Algorithm for 'placing' the elements of a slice into a gap:\n//\n// We consider the content of each node that is open to the left to be\n// independently placeable. I.e. in <p(\"foo\"), p(\"bar\")>, when the\n// paragraph on the left is open, \"foo\" can be placed (somewhere on\n// the left side of the replacement gap) independently from p(\"bar\").\n//\n// This class tracks the state of the placement progress in the\n// following properties:\n//\n//  - `frontier` holds a stack of `{type, match}` objects that\n//    represent the open side of the replacement. It starts at\n//    `$from`, then moves forward as content is placed, and is finally\n//    reconciled with `$to`.\n//\n//  - `unplaced` is a slice that represents the content that hasn't\n//    been placed yet.\n//\n//  - `placed` is a fragment of placed content. Its open-start value\n//    is implicit in `$from`, and its open-end value in `frontier`.\nvar Fitter = function Fitter($from, $to, slice) {\n  this.$to = $to;\n  this.$from = $from;\n  this.unplaced = slice;\n\n  this.frontier = [];\n  for (var i = 0; i <= $from.depth; i++) {\n    var node = $from.node(i);\n    this.frontier.push({\n      type: node.type,\n      match: node.contentMatchAt($from.indexAfter(i))\n    });\n  }\n\n  this.placed = Fragment.empty;\n  for (var i$1 = $from.depth; i$1 > 0; i$1--)\n    { this.placed = Fragment.from($from.node(i$1).copy(this.placed)); }\n};\n\nvar prototypeAccessors$1 = { depth: { configurable: true } };\n\nprototypeAccessors$1.depth.get = function () { return this.frontier.length - 1 };\n\nFitter.prototype.fit = function fit () {\n  // As long as there's unplaced content, try to place some of it.\n  // If that fails, either increase the open score of the unplaced\n  // slice, or drop nodes from it, and then try again.\n  while (this.unplaced.size) {\n    var fit = this.findFittable();\n    if (fit) { this.placeNodes(fit); }\n    else { this.openMore() || this.dropNode(); }\n  }\n  // When there's inline content directly after the frontier _and_\n  // directly after `this.$to`, we must generate a `ReplaceAround`\n  // step that pulls that content into the node after the frontier.\n  // That means the fitting must be done to the end of the textblock\n  // node after `this.$to`, not `this.$to` itself.\n  var moveInline = this.mustMoveInline(), placedSize = this.placed.size - this.depth - this.$from.depth;\n  var $from = this.$from, $to = this.close(moveInline < 0 ? this.$to : $from.doc.resolve(moveInline));\n  if (!$to) { return null }\n\n  // If closing to `$to` succeeded, create a step\n  var content = this.placed, openStart = $from.depth, openEnd = $to.depth;\n  while (openStart && openEnd && content.childCount == 1) { // Normalize by dropping open parent nodes\n    content = content.firstChild.content;\n    openStart--; openEnd--;\n  }\n  var slice = new Slice(content, openStart, openEnd);\n  if (moveInline > -1)\n    { return new ReplaceAroundStep($from.pos, moveInline, this.$to.pos, this.$to.end(), slice, placedSize) }\n  if (slice.size || $from.pos != this.$to.pos) // Don't generate no-op steps\n    { return new ReplaceStep($from.pos, $to.pos, slice) }\n};\n\n// Find a position on the start spine of `this.unplaced` that has\n// content that can be moved somewhere on the frontier. Returns two\n// depths, one for the slice and one for the frontier.\nFitter.prototype.findFittable = function findFittable () {\n  // Only try wrapping nodes (pass 2) after finding a place without\n  // wrapping failed.\n  for (var pass = 1; pass <= 2; pass++) {\n    for (var sliceDepth = this.unplaced.openStart; sliceDepth >= 0; sliceDepth--) {\n      var fragment = (void 0), parent = (void 0);\n      if (sliceDepth) {\n        parent = contentAt(this.unplaced.content, sliceDepth - 1).firstChild;\n        fragment = parent.content;\n      } else {\n        fragment = this.unplaced.content;\n      }\n      var first = fragment.firstChild;\n      for (var frontierDepth = this.depth; frontierDepth >= 0; frontierDepth--) {\n        var ref = this.frontier[frontierDepth];\n          var type = ref.type;\n          var match = ref.match;\n          var wrap = (void 0), inject = (void 0);\n        // In pass 1, if the next node matches, or there is no next\n        // node but the parents look compatible, we've found a\n        // place.\n        if (pass == 1 && (first ? match.matchType(first.type) || (inject = match.fillBefore(Fragment.from(first), false))\n                          : type.compatibleContent(parent.type)))\n          { return {sliceDepth: sliceDepth, frontierDepth: frontierDepth, parent: parent, inject: inject} }\n        // In pass 2, look for a set of wrapping nodes that make\n        // `first` fit here.\n        else if (pass == 2 && first && (wrap = match.findWrapping(first.type)))\n          { return {sliceDepth: sliceDepth, frontierDepth: frontierDepth, parent: parent, wrap: wrap} }\n        // Don't continue looking further up if the parent node\n        // would fit here.\n        if (parent && match.matchType(parent.type)) { break }\n      }\n    }\n  }\n};\n\nFitter.prototype.openMore = function openMore () {\n  var ref = this.unplaced;\n    var content = ref.content;\n    var openStart = ref.openStart;\n    var openEnd = ref.openEnd;\n  var inner = contentAt(content, openStart);\n  if (!inner.childCount || inner.firstChild.isLeaf) { return false }\n  this.unplaced = new Slice(content, openStart + 1,\n                            Math.max(openEnd, inner.size + openStart >= content.size - openEnd ? openStart + 1 : 0));\n  return true\n};\n\nFitter.prototype.dropNode = function dropNode () {\n  var ref = this.unplaced;\n    var content = ref.content;\n    var openStart = ref.openStart;\n    var openEnd = ref.openEnd;\n  var inner = contentAt(content, openStart);\n  if (inner.childCount <= 1 && openStart > 0) {\n    var openAtEnd = content.size - openStart <= openStart + inner.size;\n    this.unplaced = new Slice(dropFromFragment(content, openStart - 1, 1), openStart - 1,\n                              openAtEnd ? openStart - 1 : openEnd);\n  } else {\n    this.unplaced = new Slice(dropFromFragment(content, openStart, 1), openStart, openEnd);\n  }\n};\n\n// : ({sliceDepth: number, frontierDepth: number, parent: ?Node, wrap: ?[NodeType], inject: ?Fragment})\n// Move content from the unplaced slice at `sliceDepth` to the\n// frontier node at `frontierDepth`. Close that frontier node when\n// applicable.\nFitter.prototype.placeNodes = function placeNodes (ref) {\n    var sliceDepth = ref.sliceDepth;\n    var frontierDepth = ref.frontierDepth;\n    var parent = ref.parent;\n    var inject = ref.inject;\n    var wrap = ref.wrap;\n\n  while (this.depth > frontierDepth) { this.closeFrontierNode(); }\n  if (wrap) { for (var i = 0; i < wrap.length; i++) { this.openFrontierNode(wrap[i]); } }\n\n  var slice = this.unplaced, fragment = parent ? parent.content : slice.content;\n  var openStart = slice.openStart - sliceDepth;\n  var taken = 0, add = [];\n  var ref$1 = this.frontier[frontierDepth];\n    var match = ref$1.match;\n    var type = ref$1.type;\n  if (inject) {\n    for (var i$1 = 0; i$1 < inject.childCount; i$1++) { add.push(inject.child(i$1)); }\n    match = match.matchFragment(inject);\n  }\n  // Computes the amount of (end) open nodes at the end of the\n  // fragment. When 0, the parent is open, but no more. When\n  // negative, nothing is open.\n  var openEndCount = (fragment.size + sliceDepth) - (slice.content.size - slice.openEnd);\n  // Scan over the fragment, fitting as many child nodes as\n  // possible.\n  while (taken < fragment.childCount) {\n    var next = fragment.child(taken), matches = match.matchType(next.type);\n    if (!matches) { break }\n    taken++;\n    if (taken > 1 || openStart == 0 || next.content.size) { // Drop empty open nodes\n      match = matches;\n      add.push(closeNodeStart(next.mark(type.allowedMarks(next.marks)), taken == 1 ? openStart : 0,\n                              taken == fragment.childCount ? openEndCount : -1));\n    }\n  }\n  var toEnd = taken == fragment.childCount;\n  if (!toEnd) { openEndCount = -1; }\n\n  this.placed = addToFragment(this.placed, frontierDepth, Fragment.from(add));\n  this.frontier[frontierDepth].match = match;\n\n  // If the parent types match, and the entire node was moved, and\n  // it's not open, close this frontier node right away.\n  if (toEnd && openEndCount < 0 && parent && parent.type == this.frontier[this.depth].type && this.frontier.length > 1)\n    { this.closeFrontierNode(); }\n\n  // Add new frontier nodes for any open nodes at the end.\n  for (var i$2 = 0, cur = fragment; i$2 < openEndCount; i$2++) {\n    var node = cur.lastChild;\n    this.frontier.push({type: node.type, match: node.contentMatchAt(node.childCount)});\n    cur = node.content;\n  }\n\n  // Update `this.unplaced`. Drop the entire node from which we\n  // placed it we got to its end, otherwise just drop the placed\n  // nodes.\n  this.unplaced = !toEnd ? new Slice(dropFromFragment(slice.content, sliceDepth, taken), slice.openStart, slice.openEnd)\n    : sliceDepth == 0 ? Slice.empty\n    : new Slice(dropFromFragment(slice.content, sliceDepth - 1, 1),\n                sliceDepth - 1, openEndCount < 0 ? slice.openEnd : sliceDepth - 1);\n};\n\nFitter.prototype.mustMoveInline = function mustMoveInline () {\n  if (!this.$to.parent.isTextblock || this.$to.end() == this.$to.pos) { return -1 }\n  var top = this.frontier[this.depth], level;\n  if (!top.type.isTextblock || !contentAfterFits(this.$to, this.$to.depth, top.type, top.match, false) ||\n      (this.$to.depth == this.depth && (level = this.findCloseLevel(this.$to)) && level.depth == this.depth)) { return -1 }\n\n  var ref = this.$to;\n    var depth = ref.depth;\n    var after = this.$to.after(depth);\n  while (depth > 1 && after == this.$to.end(--depth)) { ++after; }\n  return after\n};\n\nFitter.prototype.findCloseLevel = function findCloseLevel ($to) {\n  scan: for (var i = Math.min(this.depth, $to.depth); i >= 0; i--) {\n    var ref = this.frontier[i];\n      var match = ref.match;\n      var type = ref.type;\n    var dropInner = i < $to.depth && $to.end(i + 1) == $to.pos + ($to.depth - (i + 1));\n    var fit = contentAfterFits($to, i, type, match, dropInner);\n    if (!fit) { continue }\n    for (var d = i - 1; d >= 0; d--) {\n      var ref$1 = this.frontier[d];\n        var match$1 = ref$1.match;\n        var type$1 = ref$1.type;\n      var matches = contentAfterFits($to, d, type$1, match$1, true);\n      if (!matches || matches.childCount) { continue scan }\n    }\n    return {depth: i, fit: fit, move: dropInner ? $to.doc.resolve($to.after(i + 1)) : $to}\n  }\n};\n\nFitter.prototype.close = function close ($to) {\n  var close = this.findCloseLevel($to);\n  if (!close) { return null }\n\n  while (this.depth > close.depth) { this.closeFrontierNode(); }\n  if (close.fit.childCount) { this.placed = addToFragment(this.placed, close.depth, close.fit); }\n  $to = close.move;\n  for (var d = close.depth + 1; d <= $to.depth; d++) {\n    var node = $to.node(d), add = node.type.contentMatch.fillBefore(node.content, true, $to.index(d));\n    this.openFrontierNode(node.type, node.attrs, add);\n  }\n  return $to\n};\n\nFitter.prototype.openFrontierNode = function openFrontierNode (type, attrs, content) {\n  var top = this.frontier[this.depth];\n  top.match = top.match.matchType(type);\n  this.placed = addToFragment(this.placed, this.depth, Fragment.from(type.create(attrs, content)));\n  this.frontier.push({type: type, match: type.contentMatch});\n};\n\nFitter.prototype.closeFrontierNode = function closeFrontierNode () {\n  var open = this.frontier.pop();\n  var add = open.match.fillBefore(Fragment.empty, true);\n  if (add.childCount) { this.placed = addToFragment(this.placed, this.frontier.length, add); }\n};\n\nObject.defineProperties( Fitter.prototype, prototypeAccessors$1 );\n\nfunction dropFromFragment(fragment, depth, count) {\n  if (depth == 0) { return fragment.cutByIndex(count) }\n  return fragment.replaceChild(0, fragment.firstChild.copy(dropFromFragment(fragment.firstChild.content, depth - 1, count)))\n}\n\nfunction addToFragment(fragment, depth, content) {\n  if (depth == 0) { return fragment.append(content) }\n  return fragment.replaceChild(fragment.childCount - 1,\n                               fragment.lastChild.copy(addToFragment(fragment.lastChild.content, depth - 1, content)))\n}\n\nfunction contentAt(fragment, depth) {\n  for (var i = 0; i < depth; i++) { fragment = fragment.firstChild.content; }\n  return fragment\n}\n\nfunction closeNodeStart(node, openStart, openEnd) {\n  if (openStart <= 0) { return node }\n  var frag = node.content;\n  if (openStart > 1)\n    { frag = frag.replaceChild(0, closeNodeStart(frag.firstChild, openStart - 1, frag.childCount == 1 ? openEnd - 1 : 0)); }\n  if (openStart > 0) {\n    frag = node.type.contentMatch.fillBefore(frag).append(frag);\n    if (openEnd <= 0) { frag = frag.append(node.type.contentMatch.matchFragment(frag).fillBefore(Fragment.empty, true)); }\n  }\n  return node.copy(frag)\n}\n\nfunction contentAfterFits($to, depth, type, match, open) {\n  var node = $to.node(depth), index = open ? $to.indexAfter(depth) : $to.index(depth);\n  if (index == node.childCount && !type.compatibleContent(node.type)) { return null }\n  var fit = match.fillBefore(node.content, true, index);\n  return fit && !invalidMarks(type, node.content, index) ? fit : null\n}\n\nfunction invalidMarks(type, fragment, start) {\n  for (var i = start; i < fragment.childCount; i++)\n    { if (!type.allowsMarks(fragment.child(i).marks)) { return true } }\n  return false\n}\n\n// :: (number, number, Slice) → this\n// Replace a range of the document with a given slice, using `from`,\n// `to`, and the slice's [`openStart`](#model.Slice.openStart) property\n// as hints, rather than fixed start and end points. This method may\n// grow the replaced area or close open nodes in the slice in order to\n// get a fit that is more in line with WYSIWYG expectations, by\n// dropping fully covered parent nodes of the replaced region when\n// they are marked [non-defining](#model.NodeSpec.defining), or\n// including an open parent node from the slice that _is_ marked as\n// [defining](#model.NodeSpec.defining).\n//\n// This is the method, for example, to handle paste. The similar\n// [`replace`](#transform.Transform.replace) method is a more\n// primitive tool which will _not_ move the start and end of its given\n// range, and is useful in situations where you need more precise\n// control over what happens.\nTransform.prototype.replaceRange = function(from, to, slice) {\n  if (!slice.size) { return this.deleteRange(from, to) }\n\n  var $from = this.doc.resolve(from), $to = this.doc.resolve(to);\n  if (fitsTrivially($from, $to, slice))\n    { return this.step(new ReplaceStep(from, to, slice)) }\n\n  var targetDepths = coveredDepths($from, this.doc.resolve(to));\n  // Can't replace the whole document, so remove 0 if it's present\n  if (targetDepths[targetDepths.length - 1] == 0) { targetDepths.pop(); }\n  // Negative numbers represent not expansion over the whole node at\n  // that depth, but replacing from $from.before(-D) to $to.pos.\n  var preferredTarget = -($from.depth + 1);\n  targetDepths.unshift(preferredTarget);\n  // This loop picks a preferred target depth, if one of the covering\n  // depths is not outside of a defining node, and adds negative\n  // depths for any depth that has $from at its start and does not\n  // cross a defining node.\n  for (var d = $from.depth, pos = $from.pos - 1; d > 0; d--, pos--) {\n    var spec = $from.node(d).type.spec;\n    if (spec.defining || spec.isolating) { break }\n    if (targetDepths.indexOf(d) > -1) { preferredTarget = d; }\n    else if ($from.before(d) == pos) { targetDepths.splice(1, 0, -d); }\n  }\n  // Try to fit each possible depth of the slice into each possible\n  // target depth, starting with the preferred depths.\n  var preferredTargetIndex = targetDepths.indexOf(preferredTarget);\n\n  var leftNodes = [], preferredDepth = slice.openStart;\n  for (var content = slice.content, i = 0;; i++) {\n    var node = content.firstChild;\n    leftNodes.push(node);\n    if (i == slice.openStart) { break }\n    content = node.content;\n  }\n  // Back up if the node directly above openStart, or the node above\n  // that separated only by a non-defining textblock node, is defining.\n  if (preferredDepth > 0 && leftNodes[preferredDepth - 1].type.spec.defining &&\n      $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 1].type)\n    { preferredDepth -= 1; }\n  else if (preferredDepth >= 2 && leftNodes[preferredDepth - 1].isTextblock && leftNodes[preferredDepth - 2].type.spec.defining &&\n           $from.node(preferredTargetIndex).type != leftNodes[preferredDepth - 2].type)\n    { preferredDepth -= 2; }\n\n  for (var j = slice.openStart; j >= 0; j--) {\n    var openDepth = (j + preferredDepth + 1) % (slice.openStart + 1);\n    var insert = leftNodes[openDepth];\n    if (!insert) { continue }\n    for (var i$1 = 0; i$1 < targetDepths.length; i$1++) {\n      // Loop over possible expansion levels, starting with the\n      // preferred one\n      var targetDepth = targetDepths[(i$1 + preferredTargetIndex) % targetDepths.length], expand = true;\n      if (targetDepth < 0) { expand = false; targetDepth = -targetDepth; }\n      var parent = $from.node(targetDepth - 1), index = $from.index(targetDepth - 1);\n      if (parent.canReplaceWith(index, index, insert.type, insert.marks))\n        { return this.replace($from.before(targetDepth), expand ? $to.after(targetDepth) : to,\n                            new Slice(closeFragment(slice.content, 0, slice.openStart, openDepth),\n                                      openDepth, slice.openEnd)) }\n    }\n  }\n\n  var startSteps = this.steps.length;\n  for (var i$2 = targetDepths.length - 1; i$2 >= 0; i$2--) {\n    this.replace(from, to, slice);\n    if (this.steps.length > startSteps) { break }\n    var depth = targetDepths[i$2];\n    if (depth < 0) { continue }\n    from = $from.before(depth); to = $to.after(depth);\n  }\n  return this\n};\n\nfunction closeFragment(fragment, depth, oldOpen, newOpen, parent) {\n  if (depth < oldOpen) {\n    var first = fragment.firstChild;\n    fragment = fragment.replaceChild(0, first.copy(closeFragment(first.content, depth + 1, oldOpen, newOpen, first)));\n  }\n  if (depth > newOpen) {\n    var match = parent.contentMatchAt(0);\n    var start = match.fillBefore(fragment).append(fragment);\n    fragment = start.append(match.matchFragment(start).fillBefore(Fragment.empty, true));\n  }\n  return fragment\n}\n\n// :: (number, number, Node) → this\n// Replace the given range with a node, but use `from` and `to` as\n// hints, rather than precise positions. When from and to are the same\n// and are at the start or end of a parent node in which the given\n// node doesn't fit, this method may _move_ them out towards a parent\n// that does allow the given node to be placed. When the given range\n// completely covers a parent node, this method may completely replace\n// that parent node.\nTransform.prototype.replaceRangeWith = function(from, to, node) {\n  if (!node.isInline && from == to && this.doc.resolve(from).parent.content.size) {\n    var point = insertPoint(this.doc, from, node.type);\n    if (point != null) { from = to = point; }\n  }\n  return this.replaceRange(from, to, new Slice(Fragment.from(node), 0, 0))\n};\n\n// :: (number, number) → this\n// Delete the given range, expanding it to cover fully covered\n// parent nodes until a valid replace is found.\nTransform.prototype.deleteRange = function(from, to) {\n  var $from = this.doc.resolve(from), $to = this.doc.resolve(to);\n  var covered = coveredDepths($from, $to);\n  for (var i = 0; i < covered.length; i++) {\n    var depth = covered[i], last = i == covered.length - 1;\n    if ((last && depth == 0) || $from.node(depth).type.contentMatch.validEnd)\n      { return this.delete($from.start(depth), $to.end(depth)) }\n    if (depth > 0 && (last || $from.node(depth - 1).canReplace($from.index(depth - 1), $to.indexAfter(depth - 1))))\n      { return this.delete($from.before(depth), $to.after(depth)) }\n  }\n  for (var d = 1; d <= $from.depth && d <= $to.depth; d++) {\n    if (from - $from.start(d) == $from.depth - d && to > $from.end(d) && $to.end(d) - to != $to.depth - d)\n      { return this.delete($from.before(d), to) }\n  }\n  return this.delete(from, to)\n};\n\n// : (ResolvedPos, ResolvedPos) → [number]\n// Returns an array of all depths for which $from - $to spans the\n// whole content of the nodes at that depth.\nfunction coveredDepths($from, $to) {\n  var result = [], minDepth = Math.min($from.depth, $to.depth);\n  for (var d = minDepth; d >= 0; d--) {\n    var start = $from.start(d);\n    if (start < $from.pos - ($from.depth - d) ||\n        $to.end(d) > $to.pos + ($to.depth - d) ||\n        $from.node(d).type.spec.isolating ||\n        $to.node(d).type.spec.isolating) { break }\n    if (start == $to.start(d) ||\n        (d == $from.depth && d == $to.depth && $from.parent.inlineContent && $to.parent.inlineContent &&\n         d && $to.start(d - 1) == start - 1))\n      { result.push(d); }\n  }\n  return result\n}\n\nexport { AddMarkStep, MapResult, Mapping, RemoveMarkStep, ReplaceAroundStep, ReplaceStep, Step, StepMap, StepResult, Transform, TransformError, canJoin, canSplit, dropPoint, findWrapping, insertPoint, joinPoint, liftTarget, replaceStep };\n","import { TextSelection, NodeSelection, Selection, AllSelection } from 'prosemirror-state';\nimport { DOMSerializer, Fragment, Mark, DOMParser, Slice } from 'prosemirror-model';\nimport { dropPoint } from 'prosemirror-transform';\n\nvar result = {};\n\nif (typeof navigator != \"undefined\" && typeof document != \"undefined\") {\n  var ie_edge = /Edge\\/(\\d+)/.exec(navigator.userAgent);\n  var ie_upto10 = /MSIE \\d/.test(navigator.userAgent);\n  var ie_11up = /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent);\n\n  var ie = result.ie = !!(ie_upto10 || ie_11up || ie_edge);\n  result.ie_version = ie_upto10 ? document.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : null;\n  result.gecko = !ie && /gecko\\/(\\d+)/i.test(navigator.userAgent);\n  result.gecko_version = result.gecko && +(/Firefox\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1];\n  var chrome = !ie && /Chrome\\/(\\d+)/.exec(navigator.userAgent);\n  result.chrome = !!chrome;\n  result.chrome_version = chrome && +chrome[1];\n  // Is true for both iOS and iPadOS for convenience\n  result.safari = !ie && /Apple Computer/.test(navigator.vendor);\n  result.ios = result.safari && (/Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2);\n  result.mac = result.ios || /Mac/.test(navigator.platform);\n  result.android = /Android \\d/.test(navigator.userAgent);\n  result.webkit = \"webkitFontSmoothing\" in document.documentElement.style;\n  result.webkit_version = result.webkit && +(/\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1];\n}\n\nvar domIndex = function(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling;\n    if (!node) { return index }\n  }\n};\n\nvar parentNode = function(node) {\n  var parent = node.assignedSlot || node.parentNode;\n  return parent && parent.nodeType == 11 ? parent.host : parent\n};\n\nvar reusedRange = null;\n\n// Note that this will always return the same range, because DOM range\n// objects are every expensive, and keep slowing down subsequent DOM\n// updates, for some reason.\nvar textRange = function(node, from, to) {\n  var range = reusedRange || (reusedRange = document.createRange());\n  range.setEnd(node, to == null ? node.nodeValue.length : to);\n  range.setStart(node, from || 0);\n  return range\n};\n\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nvar isEquivalentPosition = function(node, off, targetNode, targetOff) {\n  return targetNode && (scanFor(node, off, targetNode, targetOff, -1) ||\n                        scanFor(node, off, targetNode, targetOff, 1))\n};\n\nvar atomElements = /^(img|br|input|textarea|hr)$/i;\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) { return true }\n    if (off == (dir < 0 ? 0 : nodeSize(node))) {\n      var parent = node.parentNode;\n      if (!parent || parent.nodeType != 1 || hasBlockDesc(node) || atomElements.test(node.nodeName) ||\n          node.contentEditable == \"false\")\n        { return false }\n      off = domIndex(node) + (dir < 0 ? 0 : 1);\n      node = parent;\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n      if (node.contentEditable == \"false\") { return false }\n      off = dir < 0 ? nodeSize(node) : 0;\n    } else {\n      return false\n    }\n  }\n}\n\nfunction nodeSize(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isOnEdge(node, offset, parent) {\n  for (var atStart = offset == 0, atEnd = offset == nodeSize(node); atStart || atEnd;) {\n    if (node == parent) { return true }\n    var index = domIndex(node);\n    node = node.parentNode;\n    if (!node) { return false }\n    atStart = atStart && index == 0;\n    atEnd = atEnd && index == nodeSize(node);\n  }\n}\n\nfunction hasBlockDesc(dom) {\n  var desc;\n  for (var cur = dom; cur; cur = cur.parentNode) { if (desc = cur.pmViewDesc) { break } }\n  return desc && desc.node && desc.node.isBlock && (desc.dom == dom || desc.contentDOM == dom)\n}\n\n// Work around Chrome issue https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n// (isCollapsed inappropriately returns true in shadow dom)\nvar selectionCollapsed = function(domSel) {\n  var collapsed = domSel.isCollapsed;\n  if (collapsed && result.chrome && domSel.rangeCount && !domSel.getRangeAt(0).collapsed)\n    { collapsed = false; }\n  return collapsed\n};\n\nfunction keyEvent(keyCode, key) {\n  var event = document.createEvent(\"Event\");\n  event.initEvent(\"keydown\", true, true);\n  event.keyCode = keyCode;\n  event.key = event.code = key;\n  return event\n}\n\nfunction windowRect(doc) {\n  return {left: 0, right: doc.documentElement.clientWidth,\n          top: 0, bottom: doc.documentElement.clientHeight}\n}\n\nfunction getSide(value, side) {\n  return typeof value == \"number\" ? value : value[side]\n}\n\nfunction clientRect(node) {\n  var rect = node.getBoundingClientRect();\n  // Adjust for elements with style \"transform: scale()\"\n  var scaleX = (rect.width / node.offsetWidth) || 1;\n  var scaleY = (rect.height / node.offsetHeight) || 1;\n  // Make sure scrollbar width isn't included in the rectangle\n  return {left: rect.left, right: rect.left + node.clientWidth * scaleX,\n          top: rect.top, bottom: rect.top + node.clientHeight * scaleY}\n}\n\nfunction scrollRectIntoView(view, rect, startDOM) {\n  var scrollThreshold = view.someProp(\"scrollThreshold\") || 0, scrollMargin = view.someProp(\"scrollMargin\") || 5;\n  var doc = view.dom.ownerDocument;\n  for (var parent = startDOM || view.dom;; parent = parentNode(parent)) {\n    if (!parent) { break }\n    if (parent.nodeType != 1) { continue }\n    var atTop = parent == doc.body || parent.nodeType != 1;\n    var bounding = atTop ? windowRect(doc) : clientRect(parent);\n    var moveX = 0, moveY = 0;\n    if (rect.top < bounding.top + getSide(scrollThreshold, \"top\"))\n      { moveY = -(bounding.top - rect.top + getSide(scrollMargin, \"top\")); }\n    else if (rect.bottom > bounding.bottom - getSide(scrollThreshold, \"bottom\"))\n      { moveY = rect.bottom - bounding.bottom + getSide(scrollMargin, \"bottom\"); }\n    if (rect.left < bounding.left + getSide(scrollThreshold, \"left\"))\n      { moveX = -(bounding.left - rect.left + getSide(scrollMargin, \"left\")); }\n    else if (rect.right > bounding.right - getSide(scrollThreshold, \"right\"))\n      { moveX = rect.right - bounding.right + getSide(scrollMargin, \"right\"); }\n    if (moveX || moveY) {\n      if (atTop) {\n        doc.defaultView.scrollBy(moveX, moveY);\n      } else {\n        var startX = parent.scrollLeft, startY = parent.scrollTop;\n        if (moveY) { parent.scrollTop += moveY; }\n        if (moveX) { parent.scrollLeft += moveX; }\n        var dX = parent.scrollLeft - startX, dY = parent.scrollTop - startY;\n        rect = {left: rect.left - dX, top: rect.top - dY, right: rect.right - dX, bottom: rect.bottom - dY};\n      }\n    }\n    if (atTop) { break }\n  }\n}\n\n// Store the scroll position of the editor's parent nodes, along with\n// the top position of an element near the top of the editor, which\n// will be used to make sure the visible viewport remains stable even\n// when the size of the content above changes.\nfunction storeScrollPos(view) {\n  var rect = view.dom.getBoundingClientRect(), startY = Math.max(0, rect.top);\n  var refDOM, refTop;\n  for (var x = (rect.left + rect.right) / 2, y = startY + 1;\n       y < Math.min(innerHeight, rect.bottom); y += 5) {\n    var dom = view.root.elementFromPoint(x, y);\n    if (dom == view.dom || !view.dom.contains(dom)) { continue }\n    var localRect = dom.getBoundingClientRect();\n    if (localRect.top >= startY - 20) {\n      refDOM = dom;\n      refTop = localRect.top;\n      break\n    }\n  }\n  return {refDOM: refDOM, refTop: refTop, stack: scrollStack(view.dom)}\n}\n\nfunction scrollStack(dom) {\n  var stack = [], doc = dom.ownerDocument;\n  for (; dom; dom = parentNode(dom)) {\n    stack.push({dom: dom, top: dom.scrollTop, left: dom.scrollLeft});\n    if (dom == doc) { break }\n  }\n  return stack\n}\n\n// Reset the scroll position of the editor's parent nodes to that what\n// it was before, when storeScrollPos was called.\nfunction resetScrollPos(ref) {\n  var refDOM = ref.refDOM;\n  var refTop = ref.refTop;\n  var stack = ref.stack;\n\n  var newRefTop = refDOM ? refDOM.getBoundingClientRect().top : 0;\n  restoreScrollStack(stack, newRefTop == 0 ? 0 : newRefTop - refTop);\n}\n\nfunction restoreScrollStack(stack, dTop) {\n  for (var i = 0; i < stack.length; i++) {\n    var ref = stack[i];\n    var dom = ref.dom;\n    var top = ref.top;\n    var left = ref.left;\n    if (dom.scrollTop != top + dTop) { dom.scrollTop = top + dTop; }\n    if (dom.scrollLeft != left) { dom.scrollLeft = left; }\n  }\n}\n\nvar preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n  if (dom.setActive) { return dom.setActive() } // in IE\n  if (preventScrollSupported) { return dom.focus(preventScrollSupported) }\n\n  var stored = scrollStack(dom);\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {preventScroll: true};\n      return true\n    }\n  } : undefined);\n  if (!preventScrollSupported) {\n    preventScrollSupported = false;\n    restoreScrollStack(stored, 0);\n  }\n}\n\nfunction findOffsetInNode(node, coords) {\n  var closest, dxClosest = 2e8, coordsClosest, offset = 0;\n  var rowBot = coords.top, rowTop = coords.top;\n  for (var child = node.firstChild, childIndex = 0; child; child = child.nextSibling, childIndex++) {\n    var rects = (void 0);\n    if (child.nodeType == 1) { rects = child.getClientRects(); }\n    else if (child.nodeType == 3) { rects = textRange(child).getClientRects(); }\n    else { continue }\n\n    for (var i = 0; i < rects.length; i++) {\n      var rect = rects[i];\n      if (rect.top <= rowBot && rect.bottom >= rowTop) {\n        rowBot = Math.max(rect.bottom, rowBot);\n        rowTop = Math.min(rect.top, rowTop);\n        var dx = rect.left > coords.left ? rect.left - coords.left\n            : rect.right < coords.left ? coords.left - rect.right : 0;\n        if (dx < dxClosest) {\n          closest = child;\n          dxClosest = dx;\n          coordsClosest = dx && closest.nodeType == 3 ? {left: rect.right < coords.left ? rect.right : rect.left, top: coords.top} : coords;\n          if (child.nodeType == 1 && dx)\n            { offset = childIndex + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0); }\n          continue\n        }\n      }\n      if (!closest && (coords.left >= rect.right && coords.top >= rect.top ||\n                       coords.left >= rect.left && coords.top >= rect.bottom))\n        { offset = childIndex + 1; }\n    }\n  }\n  if (closest && closest.nodeType == 3) { return findOffsetInText(closest, coordsClosest) }\n  if (!closest || (dxClosest && closest.nodeType == 1)) { return {node: node, offset: offset} }\n  return findOffsetInNode(closest, coordsClosest)\n}\n\nfunction findOffsetInText(node, coords) {\n  var len = node.nodeValue.length;\n  var range = document.createRange();\n  for (var i = 0; i < len; i++) {\n    range.setEnd(node, i + 1);\n    range.setStart(node, i);\n    var rect = singleRect(range, 1);\n    if (rect.top == rect.bottom) { continue }\n    if (inRect(coords, rect))\n      { return {node: node, offset: i + (coords.left >= (rect.left + rect.right) / 2 ? 1 : 0)} }\n  }\n  return {node: node, offset: 0}\n}\n\nfunction inRect(coords, rect) {\n  return coords.left >= rect.left - 1 && coords.left <= rect.right + 1&&\n    coords.top >= rect.top - 1 && coords.top <= rect.bottom + 1\n}\n\nfunction targetKludge(dom, coords) {\n  var parent = dom.parentNode;\n  if (parent && /^li$/i.test(parent.nodeName) && coords.left < dom.getBoundingClientRect().left)\n    { return parent }\n  return dom\n}\n\nfunction posFromElement(view, elt, coords) {\n  var ref = findOffsetInNode(elt, coords);\n  var node = ref.node;\n  var offset = ref.offset;\n  var bias = -1;\n  if (node.nodeType == 1 && !node.firstChild) {\n    var rect = node.getBoundingClientRect();\n    bias = rect.left != rect.right && coords.left > (rect.left + rect.right) / 2 ? 1 : -1;\n  }\n  return view.docView.posFromDOM(node, offset, bias)\n}\n\nfunction posFromCaret(view, node, offset, coords) {\n  // Browser (in caretPosition/RangeFromPoint) will agressively\n  // normalize towards nearby inline nodes. Since we are interested in\n  // positions between block nodes too, we first walk up the hierarchy\n  // of nodes to see if there are block nodes that the coordinates\n  // fall outside of. If so, we take the position before/after that\n  // block. If not, we call `posFromDOM` on the raw node/offset.\n  var outside = -1;\n  for (var cur = node;;) {\n    if (cur == view.dom) { break }\n    var desc = view.docView.nearestDesc(cur, true);\n    if (!desc) { return null }\n    if (desc.node.isBlock && desc.parent) {\n      var rect = desc.dom.getBoundingClientRect();\n      if (rect.left > coords.left || rect.top > coords.top) { outside = desc.posBefore; }\n      else if (rect.right < coords.left || rect.bottom < coords.top) { outside = desc.posAfter; }\n      else { break }\n    }\n    cur = desc.dom.parentNode;\n  }\n  return outside > -1 ? outside : view.docView.posFromDOM(node, offset)\n}\n\nfunction elementFromPoint(element, coords, box) {\n  var len = element.childNodes.length;\n  if (len && box.top < box.bottom) {\n    for (var startI = Math.max(0, Math.min(len - 1, Math.floor(len * (coords.top - box.top) / (box.bottom - box.top)) - 2)), i = startI;;) {\n      var child = element.childNodes[i];\n      if (child.nodeType == 1) {\n        var rects = child.getClientRects();\n        for (var j = 0; j < rects.length; j++) {\n          var rect = rects[j];\n          if (inRect(coords, rect)) { return elementFromPoint(child, coords, rect) }\n        }\n      }\n      if ((i = (i + 1) % len) == startI) { break }\n    }\n  }\n  return element\n}\n\n// Given an x,y position on the editor, get the position in the document.\nfunction posAtCoords(view, coords) {\n  var assign, assign$1;\n\n  var doc = view.dom.ownerDocument, node, offset;\n  if (doc.caretPositionFromPoint) {\n    try { // Firefox throws for this call in hard-to-predict circumstances (#994)\n      var pos$1 = doc.caretPositionFromPoint(coords.left, coords.top);\n      if (pos$1) { ((assign = pos$1, node = assign.offsetNode, offset = assign.offset)); }\n    } catch (_) {}\n  }\n  if (!node && doc.caretRangeFromPoint) {\n    var range = doc.caretRangeFromPoint(coords.left, coords.top);\n    if (range) { ((assign$1 = range, node = assign$1.startContainer, offset = assign$1.startOffset)); }\n  }\n\n  var elt = (view.root.elementFromPoint ? view.root : doc).elementFromPoint(coords.left, coords.top + 1), pos;\n  if (!elt || !view.dom.contains(elt.nodeType != 1 ? elt.parentNode : elt)) {\n    var box = view.dom.getBoundingClientRect();\n    if (!inRect(coords, box)) { return null }\n    elt = elementFromPoint(view.dom, coords, box);\n    if (!elt) { return null }\n  }\n  // Safari's caretRangeFromPoint returns nonsense when on a draggable element\n  if (result.safari) {\n    for (var p = elt; node && p; p = parentNode(p))\n      { if (p.draggable) { node = offset = null; } }\n  }\n  elt = targetKludge(elt, coords);\n  if (node) {\n    if (result.gecko && node.nodeType == 1) {\n      // Firefox will sometimes return offsets into <input> nodes, which\n      // have no actual children, from caretPositionFromPoint (#953)\n      offset = Math.min(offset, node.childNodes.length);\n      // It'll also move the returned position before image nodes,\n      // even if those are behind it.\n      if (offset < node.childNodes.length) {\n        var next = node.childNodes[offset], box$1;\n        if (next.nodeName == \"IMG\" && (box$1 = next.getBoundingClientRect()).right <= coords.left &&\n            box$1.bottom > coords.top)\n          { offset++; }\n      }\n    }\n    // Suspiciously specific kludge to work around caret*FromPoint\n    // never returning a position at the end of the document\n    if (node == view.dom && offset == node.childNodes.length - 1 && node.lastChild.nodeType == 1 &&\n        coords.top > node.lastChild.getBoundingClientRect().bottom)\n      { pos = view.state.doc.content.size; }\n    // Ignore positions directly after a BR, since caret*FromPoint\n    // 'round up' positions that would be more accurately placed\n    // before the BR node.\n    else if (offset == 0 || node.nodeType != 1 || node.childNodes[offset - 1].nodeName != \"BR\")\n      { pos = posFromCaret(view, node, offset, coords); }\n  }\n  if (pos == null) { pos = posFromElement(view, elt, coords); }\n\n  var desc = view.docView.nearestDesc(elt, true);\n  return {pos: pos, inside: desc ? desc.posAtStart - desc.border : -1}\n}\n\nfunction singleRect(object, bias) {\n  var rects = object.getClientRects();\n  return !rects.length ? object.getBoundingClientRect() : rects[bias < 0 ? 0 : rects.length - 1]\n}\n\nvar BIDI = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n\n// : (EditorView, number, number) → {left: number, top: number, right: number, bottom: number}\n// Given a position in the document model, get a bounding box of the\n// character at that position, relative to the window.\nfunction coordsAtPos(view, pos, side) {\n  var ref = view.docView.domFromPos(pos, side < 0 ? -1 : 1);\n  var node = ref.node;\n  var offset = ref.offset;\n\n  var supportEmptyRange = result.webkit || result.gecko;\n  if (node.nodeType == 3) {\n    // These browsers support querying empty text ranges. Prefer that in\n    // bidi context or when at the end of a node.\n    if (supportEmptyRange && (BIDI.test(node.nodeValue) || (side < 0 ? !offset : offset == node.nodeValue.length))) {\n      var rect = singleRect(textRange(node, offset, offset), side);\n      // Firefox returns bad results (the position before the space)\n      // when querying a position directly after line-broken\n      // whitespace. Detect this situation and and kludge around it\n      if (result.gecko && offset && /\\s/.test(node.nodeValue[offset - 1]) && offset < node.nodeValue.length) {\n        var rectBefore = singleRect(textRange(node, offset - 1, offset - 1), -1);\n        if (rectBefore.top == rect.top) {\n          var rectAfter = singleRect(textRange(node, offset, offset + 1), -1);\n          if (rectAfter.top != rect.top)\n            { return flattenV(rectAfter, rectAfter.left < rectBefore.left) }\n        }\n      }\n      return rect\n    } else {\n      var from = offset, to = offset, takeSide = side < 0 ? 1 : -1;\n      if (side < 0 && !offset) { to++; takeSide = -1; }\n      else if (side >= 0 && offset == node.nodeValue.length) { from--; takeSide = 1; }\n      else if (side < 0) { from--; }\n      else { to ++; }\n      return flattenV(singleRect(textRange(node, from, to), takeSide), takeSide < 0)\n    }\n  }\n\n  // Return a horizontal line in block context\n  if (!view.state.doc.resolve(pos).parent.inlineContent) {\n    if (offset && (side < 0 || offset == nodeSize(node))) {\n      var before = node.childNodes[offset - 1];\n      if (before.nodeType == 1) { return flattenH(before.getBoundingClientRect(), false) }\n    }\n    if (offset < nodeSize(node)) {\n      var after = node.childNodes[offset];\n      if (after.nodeType == 1) { return flattenH(after.getBoundingClientRect(), true) }\n    }\n    return flattenH(node.getBoundingClientRect(), side >= 0)\n  }\n\n  // Inline, not in text node (this is not Bidi-safe)\n  if (offset && (side < 0 || offset == nodeSize(node))) {\n    var before$1 = node.childNodes[offset - 1];\n    var target = before$1.nodeType == 3 ? textRange(before$1, nodeSize(before$1) - (supportEmptyRange ? 0 : 1))\n        // BR nodes tend to only return the rectangle before them.\n        // Only use them if they are the last element in their parent\n        : before$1.nodeType == 1 && (before$1.nodeName != \"BR\" || !before$1.nextSibling) ? before$1 : null;\n    if (target) { return flattenV(singleRect(target, 1), false) }\n  }\n  if (offset < nodeSize(node)) {\n    var after$1 = node.childNodes[offset];\n    while (after$1.pmViewDesc && after$1.pmViewDesc.ignoreForCoords) { after$1 = after$1.nextSibling; }\n    var target$1 = !after$1 ? null : after$1.nodeType == 3 ? textRange(after$1, 0, (supportEmptyRange ? 0 : 1))\n        : after$1.nodeType == 1 ? after$1 : null;\n    if (target$1) { return flattenV(singleRect(target$1, -1), true) }\n  }\n  // All else failed, just try to get a rectangle for the target node\n  return flattenV(singleRect(node.nodeType == 3 ? textRange(node) : node, -side), side >= 0)\n}\n\nfunction flattenV(rect, left) {\n  if (rect.width == 0) { return rect }\n  var x = left ? rect.left : rect.right;\n  return {top: rect.top, bottom: rect.bottom, left: x, right: x}\n}\n\nfunction flattenH(rect, top) {\n  if (rect.height == 0) { return rect }\n  var y = top ? rect.top : rect.bottom;\n  return {top: y, bottom: y, left: rect.left, right: rect.right}\n}\n\nfunction withFlushedState(view, state, f) {\n  var viewState = view.state, active = view.root.activeElement;\n  if (viewState != state) { view.updateState(state); }\n  if (active != view.dom) { view.focus(); }\n  try {\n    return f()\n  } finally {\n    if (viewState != state) { view.updateState(viewState); }\n    if (active != view.dom && active) { active.focus(); }\n  }\n}\n\n// : (EditorView, number, number)\n// Whether vertical position motion in a given direction\n// from a position would leave a text block.\nfunction endOfTextblockVertical(view, state, dir) {\n  var sel = state.selection;\n  var $pos = dir == \"up\" ? sel.$from : sel.$to;\n  return withFlushedState(view, state, function () {\n    var ref = view.docView.domFromPos($pos.pos, dir == \"up\" ? -1 : 1);\n    var dom = ref.node;\n    for (;;) {\n      var nearest = view.docView.nearestDesc(dom, true);\n      if (!nearest) { break }\n      if (nearest.node.isBlock) { dom = nearest.dom; break }\n      dom = nearest.dom.parentNode;\n    }\n    var coords = coordsAtPos(view, $pos.pos, 1);\n    for (var child = dom.firstChild; child; child = child.nextSibling) {\n      var boxes = (void 0);\n      if (child.nodeType == 1) { boxes = child.getClientRects(); }\n      else if (child.nodeType == 3) { boxes = textRange(child, 0, child.nodeValue.length).getClientRects(); }\n      else { continue }\n      for (var i = 0; i < boxes.length; i++) {\n        var box = boxes[i];\n        if (box.bottom > box.top + 1 &&\n            (dir == \"up\" ? coords.top - box.top > (box.bottom - coords.top) * 2\n             : box.bottom - coords.bottom > (coords.bottom - box.top) * 2))\n          { return false }\n      }\n    }\n    return true\n  })\n}\n\nvar maybeRTL = /[\\u0590-\\u08ac]/;\n\nfunction endOfTextblockHorizontal(view, state, dir) {\n  var ref = state.selection;\n  var $head = ref.$head;\n  if (!$head.parent.isTextblock) { return false }\n  var offset = $head.parentOffset, atStart = !offset, atEnd = offset == $head.parent.content.size;\n  var sel = view.root.getSelection();\n  // If the textblock is all LTR, or the browser doesn't support\n  // Selection.modify (Edge), fall back to a primitive approach\n  if (!maybeRTL.test($head.parent.textContent) || !sel.modify)\n    { return dir == \"left\" || dir == \"backward\" ? atStart : atEnd }\n\n  return withFlushedState(view, state, function () {\n    // This is a huge hack, but appears to be the best we can\n    // currently do: use `Selection.modify` to move the selection by\n    // one character, and see if that moves the cursor out of the\n    // textblock (or doesn't move it at all, when at the start/end of\n    // the document).\n    var oldRange = sel.getRangeAt(0), oldNode = sel.focusNode, oldOff = sel.focusOffset;\n    var oldBidiLevel = sel.caretBidiLevel; // Only for Firefox\n    sel.modify(\"move\", dir, \"character\");\n    var parentDOM = $head.depth ? view.docView.domAfterPos($head.before()) : view.dom;\n    var result = !parentDOM.contains(sel.focusNode.nodeType == 1 ? sel.focusNode : sel.focusNode.parentNode) ||\n        (oldNode == sel.focusNode && oldOff == sel.focusOffset);\n    // Restore the previous selection\n    sel.removeAllRanges();\n    sel.addRange(oldRange);\n    if (oldBidiLevel != null) { sel.caretBidiLevel = oldBidiLevel; }\n    return result\n  })\n}\n\nvar cachedState = null, cachedDir = null, cachedResult = false;\nfunction endOfTextblock(view, state, dir) {\n  if (cachedState == state && cachedDir == dir) { return cachedResult }\n  cachedState = state; cachedDir = dir;\n  return cachedResult = dir == \"up\" || dir == \"down\"\n    ? endOfTextblockVertical(view, state, dir)\n    : endOfTextblockHorizontal(view, state, dir)\n}\n\n// NodeView:: interface\n//\n// By default, document nodes are rendered using the result of the\n// [`toDOM`](#model.NodeSpec.toDOM) method of their spec, and managed\n// entirely by the editor. For some use cases, such as embedded\n// node-specific editing interfaces, you want more control over\n// the behavior of a node's in-editor representation, and need to\n// [define](#view.EditorProps.nodeViews) a custom node view.\n//\n// Mark views only support `dom` and `contentDOM`, and don't support\n// any of the node view methods.\n//\n// Objects returned as node views must conform to this interface.\n//\n//   dom:: ?dom.Node\n//   The outer DOM node that represents the document node. When not\n//   given, the default strategy is used to create a DOM node.\n//\n//   contentDOM:: ?dom.Node\n//   The DOM node that should hold the node's content. Only meaningful\n//   if the node view also defines a `dom` property and if its node\n//   type is not a leaf node type. When this is present, ProseMirror\n//   will take care of rendering the node's children into it. When it\n//   is not present, the node view itself is responsible for rendering\n//   (or deciding not to render) its child nodes.\n//\n//   update:: ?(node: Node, decorations: [Decoration], innerDecorations: DecorationSource) → bool\n//   When given, this will be called when the view is updating itself.\n//   It will be given a node (possibly of a different type), an array\n//   of active decorations around the node (which are automatically\n//   drawn, and the node view may ignore if it isn't interested in\n//   them), and a [decoration source](#view.DecorationSource) that\n//   represents any decorations that apply to the content of the node\n//   (which again may be ignored). It should return true if it was\n//   able to update to that node, and false otherwise. If the node\n//   view has a `contentDOM` property (or no `dom` property), updating\n//   its child nodes will be handled by ProseMirror.\n//\n//   selectNode:: ?()\n//   Can be used to override the way the node's selected status (as a\n//   node selection) is displayed.\n//\n//   deselectNode:: ?()\n//   When defining a `selectNode` method, you should also provide a\n//   `deselectNode` method to remove the effect again.\n//\n//   setSelection:: ?(anchor: number, head: number, root: dom.Document)\n//   This will be called to handle setting the selection inside the\n//   node. The `anchor` and `head` positions are relative to the start\n//   of the node. By default, a DOM selection will be created between\n//   the DOM positions corresponding to those positions, but if you\n//   override it you can do something else.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to prevent the editor view from trying to handle some\n//   or all DOM events that bubble up from the node view. Events for\n//   which this returns true are not handled by the editor.\n//\n//   ignoreMutation:: ?(dom.MutationRecord) → bool\n//   Called when a DOM\n//   [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver)\n//   or a selection change happens within the view. When the change is\n//   a selection change, the record will have a `type` property of\n//   `\"selection\"` (which doesn't occur for native mutation records).\n//   Return false if the editor should re-read the selection or\n//   re-parse the range around the mutation, true if it can safely be\n//   ignored.\n//\n//   destroy:: ?()\n//   Called when the node view is removed from the editor or the whole\n//   editor is destroyed. (Not available for marks.)\n\n// View descriptions are data structures that describe the DOM that is\n// used to represent the editor's content. They are used for:\n//\n// - Incremental redrawing when the document changes\n//\n// - Figuring out what part of the document a given DOM position\n//   corresponds to\n//\n// - Wiring in custom implementations of the editing interface for a\n//   given node\n//\n// They form a doubly-linked mutable tree, starting at `view.docView`.\n\nvar NOT_DIRTY = 0, CHILD_DIRTY = 1, CONTENT_DIRTY = 2, NODE_DIRTY = 3;\n\n// Superclass for the various kinds of descriptions. Defines their\n// basic structure and shared methods.\nvar ViewDesc = function ViewDesc(parent, children, dom, contentDOM) {\n  this.parent = parent;\n  this.children = children;\n  this.dom = dom;\n  // An expando property on the DOM node provides a link back to its\n  // description.\n  dom.pmViewDesc = this;\n  // This is the node that holds the child views. It may be null for\n  // descs that don't have children.\n  this.contentDOM = contentDOM;\n  this.dirty = NOT_DIRTY;\n};\n\nvar prototypeAccessors = { size: { configurable: true },border: { configurable: true },posBefore: { configurable: true },posAtStart: { configurable: true },posAfter: { configurable: true },posAtEnd: { configurable: true },contentLost: { configurable: true },domAtom: { configurable: true },ignoreForCoords: { configurable: true } };\n\n// Used to check whether a given description corresponds to a\n// widget/mark/node.\nViewDesc.prototype.matchesWidget = function matchesWidget () { return false };\nViewDesc.prototype.matchesMark = function matchesMark () { return false };\nViewDesc.prototype.matchesNode = function matchesNode () { return false };\nViewDesc.prototype.matchesHack = function matchesHack (_nodeName) { return false };\n\n// : () → ?ParseRule\n// When parsing in-editor content (in domchange.js), we allow\n// descriptions to determine the parse rules that should be used to\n// parse them.\nViewDesc.prototype.parseRule = function parseRule () { return null };\n\n// : (dom.Event) → bool\n// Used by the editor's event handler to ignore events that come\n// from certain descs.\nViewDesc.prototype.stopEvent = function stopEvent () { return false };\n\n// The size of the content represented by this desc.\nprototypeAccessors.size.get = function () {\n  var size = 0;\n  for (var i = 0; i < this.children.length; i++) { size += this.children[i].size; }\n  return size\n};\n\n// For block nodes, this represents the space taken up by their\n// start/end tokens.\nprototypeAccessors.border.get = function () { return 0 };\n\nViewDesc.prototype.destroy = function destroy () {\n  this.parent = null;\n  if (this.dom.pmViewDesc == this) { this.dom.pmViewDesc = null; }\n  for (var i = 0; i < this.children.length; i++)\n    { this.children[i].destroy(); }\n};\n\nViewDesc.prototype.posBeforeChild = function posBeforeChild (child) {\n  for (var i = 0, pos = this.posAtStart; i < this.children.length; i++) {\n    var cur = this.children[i];\n    if (cur == child) { return pos }\n    pos += cur.size;\n  }\n};\n\nprototypeAccessors.posBefore.get = function () {\n  return this.parent.posBeforeChild(this)\n};\n\nprototypeAccessors.posAtStart.get = function () {\n  return this.parent ? this.parent.posBeforeChild(this) + this.border : 0\n};\n\nprototypeAccessors.posAfter.get = function () {\n  return this.posBefore + this.size\n};\n\nprototypeAccessors.posAtEnd.get = function () {\n  return this.posAtStart + this.size - 2 * this.border\n};\n\n// : (dom.Node, number, ?number) → number\nViewDesc.prototype.localPosFromDOM = function localPosFromDOM (dom, offset, bias) {\n  // If the DOM position is in the content, use the child desc after\n  // it to figure out a position.\n  if (this.contentDOM && this.contentDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode)) {\n    if (bias < 0) {\n      var domBefore, desc;\n      if (dom == this.contentDOM) {\n        domBefore = dom.childNodes[offset - 1];\n      } else {\n        while (dom.parentNode != this.contentDOM) { dom = dom.parentNode; }\n        domBefore = dom.previousSibling;\n      }\n      while (domBefore && !((desc = domBefore.pmViewDesc) && desc.parent == this)) { domBefore = domBefore.previousSibling; }\n      return domBefore ? this.posBeforeChild(desc) + desc.size : this.posAtStart\n    } else {\n      var domAfter, desc$1;\n      if (dom == this.contentDOM) {\n        domAfter = dom.childNodes[offset];\n      } else {\n        while (dom.parentNode != this.contentDOM) { dom = dom.parentNode; }\n        domAfter = dom.nextSibling;\n      }\n      while (domAfter && !((desc$1 = domAfter.pmViewDesc) && desc$1.parent == this)) { domAfter = domAfter.nextSibling; }\n      return domAfter ? this.posBeforeChild(desc$1) : this.posAtEnd\n    }\n  }\n  // Otherwise, use various heuristics, falling back on the bias\n  // parameter, to determine whether to return the position at the\n  // start or at the end of this view desc.\n  var atEnd;\n  if (dom == this.dom && this.contentDOM) {\n    atEnd = offset > domIndex(this.contentDOM);\n  } else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM)) {\n    atEnd = dom.compareDocumentPosition(this.contentDOM) & 2;\n  } else if (this.dom.firstChild) {\n    if (offset == 0) { for (var search = dom;; search = search.parentNode) {\n      if (search == this.dom) { atEnd = false; break }\n      if (search.parentNode.firstChild != search) { break }\n    } }\n    if (atEnd == null && offset == dom.childNodes.length) { for (var search$1 = dom;; search$1 = search$1.parentNode) {\n      if (search$1 == this.dom) { atEnd = true; break }\n      if (search$1.parentNode.lastChild != search$1) { break }\n    } }\n  }\n  return (atEnd == null ? bias > 0 : atEnd) ? this.posAtEnd : this.posAtStart\n};\n\n// Scan up the dom finding the first desc that is a descendant of\n// this one.\nViewDesc.prototype.nearestDesc = function nearestDesc (dom, onlyNodes) {\n  for (var first = true, cur = dom; cur; cur = cur.parentNode) {\n    var desc = this.getDesc(cur);\n    if (desc && (!onlyNodes || desc.node)) {\n      // If dom is outside of this desc's nodeDOM, don't count it.\n      if (first && desc.nodeDOM &&\n          !(desc.nodeDOM.nodeType == 1 ? desc.nodeDOM.contains(dom.nodeType == 1 ? dom : dom.parentNode) : desc.nodeDOM == dom))\n        { first = false; }\n      else\n        { return desc }\n    }\n  }\n};\n\nViewDesc.prototype.getDesc = function getDesc (dom) {\n  var desc = dom.pmViewDesc;\n  for (var cur = desc; cur; cur = cur.parent) { if (cur == this) { return desc } }\n};\n\nViewDesc.prototype.posFromDOM = function posFromDOM (dom, offset, bias) {\n  for (var scan = dom; scan; scan = scan.parentNode) {\n    var desc = this.getDesc(scan);\n    if (desc) { return desc.localPosFromDOM(dom, offset, bias) }\n  }\n  return -1\n};\n\n// : (number) → ?NodeViewDesc\n// Find the desc for the node after the given pos, if any. (When a\n// parent node overrode rendering, there might not be one.)\nViewDesc.prototype.descAt = function descAt (pos) {\n  for (var i = 0, offset = 0; i < this.children.length; i++) {\n    var child = this.children[i], end = offset + child.size;\n    if (offset == pos && end != offset) {\n      while (!child.border && child.children.length) { child = child.children[0]; }\n      return child\n    }\n    if (pos < end) { return child.descAt(pos - offset - child.border) }\n    offset = end;\n  }\n};\n\n// : (number, number) → {node: dom.Node, offset: number}\nViewDesc.prototype.domFromPos = function domFromPos (pos, side) {\n  if (!this.contentDOM) { return {node: this.dom, offset: 0} }\n  // First find the position in the child array\n  var i = 0, offset = 0;\n  for (var curPos = 0; i < this.children.length; i++) {\n    var child = this.children[i], end = curPos + child.size;\n    if (end > pos || child instanceof TrailingHackViewDesc) { offset = pos - curPos; break }\n    curPos = end;\n  }\n  // If this points into the middle of a child, call through\n  if (offset) { return this.children[i].domFromPos(offset - this.children[i].border, side) }\n  // Go back if there were any zero-length widgets with side >= 0 before this point\n  for (var prev = (void 0); i && !(prev = this.children[i - 1]).size && prev instanceof WidgetViewDesc && prev.widget.type.side >= 0; i--) {}\n  // Scan towards the first useable node\n  if (side <= 0) {\n    var prev$1, enter = true;\n    for (;; i--, enter = false) {\n      prev$1 = i ? this.children[i - 1] : null;\n      if (!prev$1 || prev$1.dom.parentNode == this.contentDOM) { break }\n    }\n    if (prev$1 && side && enter && !prev$1.border && !prev$1.domAtom) { return prev$1.domFromPos(prev$1.size, side) }\n    return {node: this.contentDOM, offset: prev$1 ? domIndex(prev$1.dom) + 1 : 0}\n  } else {\n    var next, enter$1 = true;\n    for (;; i++, enter$1 = false) {\n      next = i < this.children.length ? this.children[i] : null;\n      if (!next || next.dom.parentNode == this.contentDOM) { break }\n    }\n    if (next && enter$1 && !next.border && !next.domAtom) { return next.domFromPos(0, side) }\n    return {node: this.contentDOM, offset: next ? domIndex(next.dom) : this.contentDOM.childNodes.length}\n  }\n};\n\n// Used to find a DOM range in a single parent for a given changed\n// range.\nViewDesc.prototype.parseRange = function parseRange (from, to, base) {\n    if ( base === void 0 ) base = 0;\n\n  if (this.children.length == 0)\n    { return {node: this.contentDOM, from: from, to: to, fromOffset: 0, toOffset: this.contentDOM.childNodes.length} }\n\n  var fromOffset = -1, toOffset = -1;\n  for (var offset = base, i = 0;; i++) {\n    var child = this.children[i], end = offset + child.size;\n    if (fromOffset == -1 && from <= end) {\n      var childBase = offset + child.border;\n      // FIXME maybe descend mark views to parse a narrower range?\n      if (from >= childBase && to <= end - child.border && child.node &&\n          child.contentDOM && this.contentDOM.contains(child.contentDOM))\n        { return child.parseRange(from, to, childBase) }\n\n      from = offset;\n      for (var j = i; j > 0; j--) {\n        var prev = this.children[j - 1];\n        if (prev.size && prev.dom.parentNode == this.contentDOM && !prev.emptyChildAt(1)) {\n          fromOffset = domIndex(prev.dom) + 1;\n          break\n        }\n        from -= prev.size;\n      }\n      if (fromOffset == -1) { fromOffset = 0; }\n    }\n    if (fromOffset > -1 && (end > to || i == this.children.length - 1)) {\n      to = end;\n      for (var j$1 = i + 1; j$1 < this.children.length; j$1++) {\n        var next = this.children[j$1];\n        if (next.size && next.dom.parentNode == this.contentDOM && !next.emptyChildAt(-1)) {\n          toOffset = domIndex(next.dom);\n          break\n        }\n        to += next.size;\n      }\n      if (toOffset == -1) { toOffset = this.contentDOM.childNodes.length; }\n      break\n    }\n    offset = end;\n  }\n  return {node: this.contentDOM, from: from, to: to, fromOffset: fromOffset, toOffset: toOffset}\n};\n\nViewDesc.prototype.emptyChildAt = function emptyChildAt (side) {\n  if (this.border || !this.contentDOM || !this.children.length) { return false }\n  var child = this.children[side < 0 ? 0 : this.children.length - 1];\n  return child.size == 0 || child.emptyChildAt(side)\n};\n\n// : (number) → dom.Node\nViewDesc.prototype.domAfterPos = function domAfterPos (pos) {\n  var ref = this.domFromPos(pos, 0);\n    var node = ref.node;\n    var offset = ref.offset;\n  if (node.nodeType != 1 || offset == node.childNodes.length)\n    { throw new RangeError(\"No node after pos \" + pos) }\n  return node.childNodes[offset]\n};\n\n// : (number, number, dom.Document)\n// View descs are responsible for setting any selection that falls\n// entirely inside of them, so that custom implementations can do\n// custom things with the selection. Note that this falls apart when\n// a selection starts in such a node and ends in another, in which\n// case we just use whatever domFromPos produces as a best effort.\nViewDesc.prototype.setSelection = function setSelection (anchor, head, root, force) {\n  // If the selection falls entirely in a child, give it to that child\n  var from = Math.min(anchor, head), to = Math.max(anchor, head);\n  for (var i = 0, offset = 0; i < this.children.length; i++) {\n    var child = this.children[i], end = offset + child.size;\n    if (from > offset && to < end)\n      { return child.setSelection(anchor - offset - child.border, head - offset - child.border, root, force) }\n    offset = end;\n  }\n\n  var anchorDOM = this.domFromPos(anchor, anchor ? -1 : 1);\n  var headDOM = head == anchor ? anchorDOM : this.domFromPos(head, head ? -1 : 1);\n  var domSel = root.getSelection();\n\n  var brKludge = false;\n  // On Firefox, using Selection.collapse to put the cursor after a\n  // BR node for some reason doesn't always work (#1073). On Safari,\n  // the cursor sometimes inexplicable visually lags behind its\n  // reported position in such situations (#1092).\n  if ((result.gecko || result.safari) && anchor == head) {\n    var node = anchorDOM.node;\n      var offset$1 = anchorDOM.offset;\n    if (node.nodeType == 3) {\n      brKludge = offset$1 && node.nodeValue[offset$1 - 1] == \"\\n\";\n      // Issue #1128\n      if (brKludge && offset$1 == node.nodeValue.length) {\n        for (var scan = node, after = (void 0); scan; scan = scan.parentNode) {\n          if (after = scan.nextSibling) {\n            if (after.nodeName == \"BR\")\n              { anchorDOM = headDOM = {node: after.parentNode, offset: domIndex(after) + 1}; }\n            break\n          }\n          var desc = scan.pmViewDesc;\n          if (desc && desc.node && desc.node.isBlock) { break }\n        }\n      }\n    } else {\n      var prev = node.childNodes[offset$1 - 1];\n      brKludge = prev && (prev.nodeName == \"BR\" || prev.contentEditable == \"false\");\n    }\n  }\n  // Firefox can act strangely when the selection is in front of an\n  // uneditable node. See #1163 and https://bugzilla.mozilla.org/show_bug.cgi?id=1709536\n  if (result.gecko && domSel.focusNode && domSel.focusNode != headDOM.node && domSel.focusNode.nodeType == 1) {\n    var after$1 = domSel.focusNode.childNodes[domSel.focusOffset];\n    if (after$1 && after$1.contentEditable == \"false\") { force = true; }\n  }\n\n  if (!(force || brKludge && result.safari) &&\n      isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset) &&\n      isEquivalentPosition(headDOM.node, headDOM.offset, domSel.focusNode, domSel.focusOffset))\n    { return }\n\n  // Selection.extend can be used to create an 'inverted' selection\n  // (one where the focus is before the anchor), but not all\n  // browsers support it yet.\n  var domSelExtended = false;\n  if ((domSel.extend || anchor == head) && !brKludge) {\n    domSel.collapse(anchorDOM.node, anchorDOM.offset);\n    try {\n      if (anchor != head) { domSel.extend(headDOM.node, headDOM.offset); }\n      domSelExtended = true;\n    } catch (err) {\n      // In some cases with Chrome the selection is empty after calling\n      // collapse, even when it should be valid. This appears to be a bug, but\n      // it is difficult to isolate. If this happens fallback to the old path\n      // without using extend.\n      if (!(err instanceof DOMException)) { throw err }\n      // declare global: DOMException\n    }\n  }\n  if (!domSelExtended) {\n    if (anchor > head) { var tmp = anchorDOM; anchorDOM = headDOM; headDOM = tmp; }\n    var range = document.createRange();\n    range.setEnd(headDOM.node, headDOM.offset);\n    range.setStart(anchorDOM.node, anchorDOM.offset);\n    domSel.removeAllRanges();\n    domSel.addRange(range);\n  }\n};\n\n// : (dom.MutationRecord) → bool\nViewDesc.prototype.ignoreMutation = function ignoreMutation (mutation) {\n  return !this.contentDOM && mutation.type != \"selection\"\n};\n\nprototypeAccessors.contentLost.get = function () {\n  return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM)\n};\n\n// Remove a subtree of the element tree that has been touched\n// by a DOM change, so that the next update will redraw it.\nViewDesc.prototype.markDirty = function markDirty (from, to) {\n  for (var offset = 0, i = 0; i < this.children.length; i++) {\n    var child = this.children[i], end = offset + child.size;\n    if (offset == end ? from <= end && to >= offset : from < end && to > offset) {\n      var startInside = offset + child.border, endInside = end - child.border;\n      if (from >= startInside && to <= endInside) {\n        this.dirty = from == offset || to == end ? CONTENT_DIRTY : CHILD_DIRTY;\n        if (from == startInside && to == endInside &&\n            (child.contentLost || child.dom.parentNode != this.contentDOM)) { child.dirty = NODE_DIRTY; }\n        else { child.markDirty(from - startInside, to - startInside); }\n        return\n      } else {\n        child.dirty = child.dom == child.contentDOM && child.dom.parentNode == this.contentDOM && !child.children.length\n          ? CONTENT_DIRTY : NODE_DIRTY;\n      }\n    }\n    offset = end;\n  }\n  this.dirty = CONTENT_DIRTY;\n};\n\nViewDesc.prototype.markParentsDirty = function markParentsDirty () {\n  var level = 1;\n  for (var node = this.parent; node; node = node.parent, level++) {\n    var dirty = level == 1 ? CONTENT_DIRTY : CHILD_DIRTY;\n    if (node.dirty < dirty) { node.dirty = dirty; }\n  }\n};\n\nprototypeAccessors.domAtom.get = function () { return false };\n\nprototypeAccessors.ignoreForCoords.get = function () { return false };\n\nObject.defineProperties( ViewDesc.prototype, prototypeAccessors );\n\n// Reused array to avoid allocating fresh arrays for things that will\n// stay empty anyway.\nvar nothing = [];\n\n// A widget desc represents a widget decoration, which is a DOM node\n// drawn between the document nodes.\nvar WidgetViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function WidgetViewDesc(parent, widget, view, pos) {\n    var self, dom = widget.type.toDOM;\n    if (typeof dom == \"function\") { dom = dom(view, function () {\n      if (!self) { return pos }\n      if (self.parent) { return self.parent.posBeforeChild(self) }\n    }); }\n    if (!widget.type.spec.raw) {\n      if (dom.nodeType != 1) {\n        var wrap = document.createElement(\"span\");\n        wrap.appendChild(dom);\n        dom = wrap;\n      }\n      dom.contentEditable = false;\n      dom.classList.add(\"ProseMirror-widget\");\n    }\n    ViewDesc.call(this, parent, nothing, dom, null);\n    this.widget = widget;\n    self = this;\n  }\n\n  if ( ViewDesc ) WidgetViewDesc.__proto__ = ViewDesc;\n  WidgetViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  WidgetViewDesc.prototype.constructor = WidgetViewDesc;\n\n  var prototypeAccessors$1 = { domAtom: { configurable: true } };\n\n  WidgetViewDesc.prototype.matchesWidget = function matchesWidget (widget) {\n    return this.dirty == NOT_DIRTY && widget.type.eq(this.widget.type)\n  };\n\n  WidgetViewDesc.prototype.parseRule = function parseRule () { return {ignore: true} };\n\n  WidgetViewDesc.prototype.stopEvent = function stopEvent (event) {\n    var stop = this.widget.spec.stopEvent;\n    return stop ? stop(event) : false\n  };\n\n  WidgetViewDesc.prototype.ignoreMutation = function ignoreMutation (mutation) {\n    return mutation.type != \"selection\" || this.widget.spec.ignoreSelection\n  };\n\n  WidgetViewDesc.prototype.destroy = function destroy () {\n    this.widget.type.destroy(this.dom);\n    ViewDesc.prototype.destroy.call(this);\n  };\n\n  prototypeAccessors$1.domAtom.get = function () { return true };\n\n  Object.defineProperties( WidgetViewDesc.prototype, prototypeAccessors$1 );\n\n  return WidgetViewDesc;\n}(ViewDesc));\n\nvar CompositionViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function CompositionViewDesc(parent, dom, textDOM, text) {\n    ViewDesc.call(this, parent, nothing, dom, null);\n    this.textDOM = textDOM;\n    this.text = text;\n  }\n\n  if ( ViewDesc ) CompositionViewDesc.__proto__ = ViewDesc;\n  CompositionViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  CompositionViewDesc.prototype.constructor = CompositionViewDesc;\n\n  var prototypeAccessors$2 = { size: { configurable: true } };\n\n  prototypeAccessors$2.size.get = function () { return this.text.length };\n\n  CompositionViewDesc.prototype.localPosFromDOM = function localPosFromDOM (dom, offset) {\n    if (dom != this.textDOM) { return this.posAtStart + (offset ? this.size : 0) }\n    return this.posAtStart + offset\n  };\n\n  CompositionViewDesc.prototype.domFromPos = function domFromPos (pos) {\n    return {node: this.textDOM, offset: pos}\n  };\n\n  CompositionViewDesc.prototype.ignoreMutation = function ignoreMutation (mut) {\n    return mut.type === 'characterData' && mut.target.nodeValue == mut.oldValue\n   };\n\n  Object.defineProperties( CompositionViewDesc.prototype, prototypeAccessors$2 );\n\n  return CompositionViewDesc;\n}(ViewDesc));\n\n// A mark desc represents a mark. May have multiple children,\n// depending on how the mark is split. Note that marks are drawn using\n// a fixed nesting order, for simplicity and predictability, so in\n// some cases they will be split more often than would appear\n// necessary.\nvar MarkViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function MarkViewDesc(parent, mark, dom, contentDOM) {\n    ViewDesc.call(this, parent, [], dom, contentDOM);\n    this.mark = mark;\n  }\n\n  if ( ViewDesc ) MarkViewDesc.__proto__ = ViewDesc;\n  MarkViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  MarkViewDesc.prototype.constructor = MarkViewDesc;\n\n  MarkViewDesc.create = function create (parent, mark, inline, view) {\n    var custom = view.nodeViews[mark.type.name];\n    var spec = custom && custom(mark, view, inline);\n    if (!spec || !spec.dom)\n      { spec = DOMSerializer.renderSpec(document, mark.type.spec.toDOM(mark, inline)); }\n    return new MarkViewDesc(parent, mark, spec.dom, spec.contentDOM || spec.dom)\n  };\n\n  MarkViewDesc.prototype.parseRule = function parseRule () {\n    if ((this.dirty & NODE_DIRTY) || this.mark.type.spec.reparseInView) { return null }\n    return {mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM}\n  };\n\n  MarkViewDesc.prototype.matchesMark = function matchesMark (mark) { return this.dirty != NODE_DIRTY && this.mark.eq(mark) };\n\n  MarkViewDesc.prototype.markDirty = function markDirty (from, to) {\n    ViewDesc.prototype.markDirty.call(this, from, to);\n    // Move dirty info to nearest node view\n    if (this.dirty != NOT_DIRTY) {\n      var parent = this.parent;\n      while (!parent.node) { parent = parent.parent; }\n      if (parent.dirty < this.dirty) { parent.dirty = this.dirty; }\n      this.dirty = NOT_DIRTY;\n    }\n  };\n\n  MarkViewDesc.prototype.slice = function slice (from, to, view) {\n    var copy = MarkViewDesc.create(this.parent, this.mark, true, view);\n    var nodes = this.children, size = this.size;\n    if (to < size) { nodes = replaceNodes(nodes, to, size, view); }\n    if (from > 0) { nodes = replaceNodes(nodes, 0, from, view); }\n    for (var i = 0; i < nodes.length; i++) { nodes[i].parent = copy; }\n    copy.children = nodes;\n    return copy\n  };\n\n  return MarkViewDesc;\n}(ViewDesc));\n\n// Node view descs are the main, most common type of view desc, and\n// correspond to an actual node in the document. Unlike mark descs,\n// they populate their child array themselves.\nvar NodeViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos) {\n    ViewDesc.call(this, parent, node.isLeaf ? nothing : [], dom, contentDOM);\n    this.nodeDOM = nodeDOM;\n    this.node = node;\n    this.outerDeco = outerDeco;\n    this.innerDeco = innerDeco;\n    if (contentDOM) { this.updateChildren(view, pos); }\n  }\n\n  if ( ViewDesc ) NodeViewDesc.__proto__ = ViewDesc;\n  NodeViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  NodeViewDesc.prototype.constructor = NodeViewDesc;\n\n  var prototypeAccessors$3 = { size: { configurable: true },border: { configurable: true },domAtom: { configurable: true } };\n\n  // By default, a node is rendered using the `toDOM` method from the\n  // node type spec. But client code can use the `nodeViews` spec to\n  // supply a custom node view, which can influence various aspects of\n  // the way the node works.\n  //\n  // (Using subclassing for this was intentionally decided against,\n  // since it'd require exposing a whole slew of finicky\n  // implementation details to the user code that they probably will\n  // never need.)\n  NodeViewDesc.create = function create (parent, node, outerDeco, innerDeco, view, pos) {\n    var assign;\n\n    var custom = view.nodeViews[node.type.name], descObj;\n    var spec = custom && custom(node, view, function () {\n      // (This is a function that allows the custom view to find its\n      // own position)\n      if (!descObj) { return pos }\n      if (descObj.parent) { return descObj.parent.posBeforeChild(descObj) }\n    }, outerDeco, innerDeco);\n\n    var dom = spec && spec.dom, contentDOM = spec && spec.contentDOM;\n    if (node.isText) {\n      if (!dom) { dom = document.createTextNode(node.text); }\n      else if (dom.nodeType != 3) { throw new RangeError(\"Text must be rendered as a DOM text node\") }\n    } else if (!dom) {\n((assign = DOMSerializer.renderSpec(document, node.type.spec.toDOM(node)), dom = assign.dom, contentDOM = assign.contentDOM));\n    }\n    if (!contentDOM && !node.isText && dom.nodeName != \"BR\") { // Chrome gets confused by <br contenteditable=false>\n      if (!dom.hasAttribute(\"contenteditable\")) { dom.contentEditable = false; }\n      if (node.type.spec.draggable) { dom.draggable = true; }\n    }\n\n    var nodeDOM = dom;\n    dom = applyOuterDeco(dom, outerDeco, node);\n\n    if (spec)\n      { return descObj = new CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM,\n                                              spec, view, pos + 1) }\n    else if (node.isText)\n      { return new TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) }\n    else\n      { return new NodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos + 1) }\n  };\n\n  NodeViewDesc.prototype.parseRule = function parseRule () {\n    var this$1 = this;\n\n    // Experimental kludge to allow opt-in re-parsing of nodes\n    if (this.node.type.spec.reparseInView) { return null }\n    // FIXME the assumption that this can always return the current\n    // attrs means that if the user somehow manages to change the\n    // attrs in the dom, that won't be picked up. Not entirely sure\n    // whether this is a problem\n    var rule = {node: this.node.type.name, attrs: this.node.attrs};\n    if (this.node.type.whitespace == \"pre\") { rule.preserveWhitespace = \"full\"; }\n    if (this.contentDOM && !this.contentLost) { rule.contentElement = this.contentDOM; }\n    else { rule.getContent = function () { return this$1.contentDOM ? Fragment.empty : this$1.node.content; }; }\n    return rule\n  };\n\n  NodeViewDesc.prototype.matchesNode = function matchesNode (node, outerDeco, innerDeco) {\n    return this.dirty == NOT_DIRTY && node.eq(this.node) &&\n      sameOuterDeco(outerDeco, this.outerDeco) && innerDeco.eq(this.innerDeco)\n  };\n\n  prototypeAccessors$3.size.get = function () { return this.node.nodeSize };\n\n  prototypeAccessors$3.border.get = function () { return this.node.isLeaf ? 0 : 1 };\n\n  // Syncs `this.children` to match `this.node.content` and the local\n  // decorations, possibly introducing nesting for marks. Then, in a\n  // separate step, syncs the DOM inside `this.contentDOM` to\n  // `this.children`.\n  NodeViewDesc.prototype.updateChildren = function updateChildren (view, pos) {\n    var this$1 = this;\n\n    var inline = this.node.inlineContent, off = pos;\n    var composition = view.composing && this.localCompositionInfo(view, pos);\n    var localComposition = composition && composition.pos > -1 ? composition : null;\n    var compositionInChild = composition && composition.pos < 0;\n    var updater = new ViewTreeUpdater(this, localComposition && localComposition.node);\n    iterDeco(this.node, this.innerDeco, function (widget, i, insideNode) {\n      if (widget.spec.marks)\n        { updater.syncToMarks(widget.spec.marks, inline, view); }\n      else if (widget.type.side >= 0 && !insideNode)\n        { updater.syncToMarks(i == this$1.node.childCount ? Mark.none : this$1.node.child(i).marks, inline, view); }\n      // If the next node is a desc matching this widget, reuse it,\n      // otherwise insert the widget as a new view desc.\n      updater.placeWidget(widget, view, off);\n    }, function (child, outerDeco, innerDeco, i) {\n      // Make sure the wrapping mark descs match the node's marks.\n      updater.syncToMarks(child.marks, inline, view);\n      // Try several strategies for drawing this node\n      var compIndex;\n      if (updater.findNodeMatch(child, outerDeco, innerDeco, i)) ; else if (compositionInChild && view.state.selection.from > off &&\n                 view.state.selection.to < off + child.nodeSize &&\n                 (compIndex = updater.findIndexWithChild(composition.node)) > -1 &&\n                 updater.updateNodeAt(child, outerDeco, innerDeco, compIndex, view)) ; else if (updater.updateNextNode(child, outerDeco, innerDeco, view, i)) ; else {\n        // Add it as a new view\n        updater.addNode(child, outerDeco, innerDeco, view, off);\n      }\n      off += child.nodeSize;\n    });\n    // Drop all remaining descs after the current position.\n    updater.syncToMarks(nothing, inline, view);\n    if (this.node.isTextblock) { updater.addTextblockHacks(); }\n    updater.destroyRest();\n\n    // Sync the DOM if anything changed\n    if (updater.changed || this.dirty == CONTENT_DIRTY) {\n      // May have to protect focused DOM from being changed if a composition is active\n      if (localComposition) { this.protectLocalComposition(view, localComposition); }\n      renderDescs(this.contentDOM, this.children, view);\n      if (result.ios) { iosHacks(this.dom); }\n    }\n  };\n\n  NodeViewDesc.prototype.localCompositionInfo = function localCompositionInfo (view, pos) {\n    // Only do something if both the selection and a focused text node\n    // are inside of this node\n    var ref = view.state.selection;\n    var from = ref.from;\n    var to = ref.to;\n    if (!(view.state.selection instanceof TextSelection) || from < pos || to > pos + this.node.content.size) { return }\n    var sel = view.root.getSelection();\n    var textNode = nearbyTextNode(sel.focusNode, sel.focusOffset);\n    if (!textNode || !this.dom.contains(textNode.parentNode)) { return }\n\n    if (this.node.inlineContent) {\n      // Find the text in the focused node in the node, stop if it's not\n      // there (may have been modified through other means, in which\n      // case it should overwritten)\n      var text = textNode.nodeValue;\n      var textPos = findTextInFragment(this.node.content, text, from - pos, to - pos);\n      return textPos < 0 ? null : {node: textNode, pos: textPos, text: text}\n    } else {\n      return {node: textNode, pos: -1}\n    }\n  };\n\n  NodeViewDesc.prototype.protectLocalComposition = function protectLocalComposition (view, ref) {\n    var node = ref.node;\n    var pos = ref.pos;\n    var text = ref.text;\n\n    // The node is already part of a local view desc, leave it there\n    if (this.getDesc(node)) { return }\n\n    // Create a composition view for the orphaned nodes\n    var topNode = node;\n    for (;; topNode = topNode.parentNode) {\n      if (topNode.parentNode == this.contentDOM) { break }\n      while (topNode.previousSibling) { topNode.parentNode.removeChild(topNode.previousSibling); }\n      while (topNode.nextSibling) { topNode.parentNode.removeChild(topNode.nextSibling); }\n      if (topNode.pmViewDesc) { topNode.pmViewDesc = null; }\n    }\n    var desc = new CompositionViewDesc(this, topNode, node, text);\n    view.compositionNodes.push(desc);\n\n    // Patch up this.children to contain the composition view\n    this.children = replaceNodes(this.children, pos, pos + text.length, view, desc);\n  };\n\n  // : (Node, [Decoration], DecorationSource, EditorView) → bool\n  // If this desc be updated to match the given node decoration,\n  // do so and return true.\n  NodeViewDesc.prototype.update = function update (node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY ||\n        !node.sameMarkup(this.node)) { return false }\n    this.updateInner(node, outerDeco, innerDeco, view);\n    return true\n  };\n\n  NodeViewDesc.prototype.updateInner = function updateInner (node, outerDeco, innerDeco, view) {\n    this.updateOuterDeco(outerDeco);\n    this.node = node;\n    this.innerDeco = innerDeco;\n    if (this.contentDOM) { this.updateChildren(view, this.posAtStart); }\n    this.dirty = NOT_DIRTY;\n  };\n\n  NodeViewDesc.prototype.updateOuterDeco = function updateOuterDeco (outerDeco) {\n    if (sameOuterDeco(outerDeco, this.outerDeco)) { return }\n    var needsWrap = this.nodeDOM.nodeType != 1;\n    var oldDOM = this.dom;\n    this.dom = patchOuterDeco(this.dom, this.nodeDOM,\n                              computeOuterDeco(this.outerDeco, this.node, needsWrap),\n                              computeOuterDeco(outerDeco, this.node, needsWrap));\n    if (this.dom != oldDOM) {\n      oldDOM.pmViewDesc = null;\n      this.dom.pmViewDesc = this;\n    }\n    this.outerDeco = outerDeco;\n  };\n\n  // Mark this node as being the selected node.\n  NodeViewDesc.prototype.selectNode = function selectNode () {\n    this.nodeDOM.classList.add(\"ProseMirror-selectednode\");\n    if (this.contentDOM || !this.node.type.spec.draggable) { this.dom.draggable = true; }\n  };\n\n  // Remove selected node marking from this node.\n  NodeViewDesc.prototype.deselectNode = function deselectNode () {\n    this.nodeDOM.classList.remove(\"ProseMirror-selectednode\");\n    if (this.contentDOM || !this.node.type.spec.draggable) { this.dom.removeAttribute(\"draggable\"); }\n  };\n\n  prototypeAccessors$3.domAtom.get = function () { return this.node.isAtom };\n\n  Object.defineProperties( NodeViewDesc.prototype, prototypeAccessors$3 );\n\n  return NodeViewDesc;\n}(ViewDesc));\n\n// Create a view desc for the top-level document node, to be exported\n// and used by the view class.\nfunction docViewDesc(doc, outerDeco, innerDeco, dom, view) {\n  applyOuterDeco(dom, outerDeco, doc);\n  return new NodeViewDesc(null, doc, outerDeco, innerDeco, dom, dom, dom, view, 0)\n}\n\nvar TextViewDesc = /*@__PURE__*/(function (NodeViewDesc) {\n  function TextViewDesc(parent, node, outerDeco, innerDeco, dom, nodeDOM, view) {\n    NodeViewDesc.call(this, parent, node, outerDeco, innerDeco, dom, null, nodeDOM, view);\n  }\n\n  if ( NodeViewDesc ) TextViewDesc.__proto__ = NodeViewDesc;\n  TextViewDesc.prototype = Object.create( NodeViewDesc && NodeViewDesc.prototype );\n  TextViewDesc.prototype.constructor = TextViewDesc;\n\n  var prototypeAccessors$4 = { domAtom: { configurable: true } };\n\n  TextViewDesc.prototype.parseRule = function parseRule () {\n    var skip = this.nodeDOM.parentNode;\n    while (skip && skip != this.dom && !skip.pmIsDeco) { skip = skip.parentNode; }\n    return {skip: skip || true}\n  };\n\n  TextViewDesc.prototype.update = function update (node, outerDeco, _, view) {\n    if (this.dirty == NODE_DIRTY || (this.dirty != NOT_DIRTY && !this.inParent()) ||\n        !node.sameMarkup(this.node)) { return false }\n    this.updateOuterDeco(outerDeco);\n    if ((this.dirty != NOT_DIRTY || node.text != this.node.text) && node.text != this.nodeDOM.nodeValue) {\n      this.nodeDOM.nodeValue = node.text;\n      if (view.trackWrites == this.nodeDOM) { view.trackWrites = null; }\n    }\n    this.node = node;\n    this.dirty = NOT_DIRTY;\n    return true\n  };\n\n  TextViewDesc.prototype.inParent = function inParent () {\n    var parentDOM = this.parent.contentDOM;\n    for (var n = this.nodeDOM; n; n = n.parentNode) { if (n == parentDOM) { return true } }\n    return false\n  };\n\n  TextViewDesc.prototype.domFromPos = function domFromPos (pos) {\n    return {node: this.nodeDOM, offset: pos}\n  };\n\n  TextViewDesc.prototype.localPosFromDOM = function localPosFromDOM (dom, offset, bias) {\n    if (dom == this.nodeDOM) { return this.posAtStart + Math.min(offset, this.node.text.length) }\n    return NodeViewDesc.prototype.localPosFromDOM.call(this, dom, offset, bias)\n  };\n\n  TextViewDesc.prototype.ignoreMutation = function ignoreMutation (mutation) {\n    return mutation.type != \"characterData\" && mutation.type != \"selection\"\n  };\n\n  TextViewDesc.prototype.slice = function slice (from, to, view) {\n    var node = this.node.cut(from, to), dom = document.createTextNode(node.text);\n    return new TextViewDesc(this.parent, node, this.outerDeco, this.innerDeco, dom, dom, view)\n  };\n\n  TextViewDesc.prototype.markDirty = function markDirty (from, to) {\n    NodeViewDesc.prototype.markDirty.call(this, from, to);\n    if (this.dom != this.nodeDOM && (from == 0 || to == this.nodeDOM.nodeValue.length))\n      { this.dirty = NODE_DIRTY; }\n  };\n\n  prototypeAccessors$4.domAtom.get = function () { return false };\n\n  Object.defineProperties( TextViewDesc.prototype, prototypeAccessors$4 );\n\n  return TextViewDesc;\n}(NodeViewDesc));\n\n// A dummy desc used to tag trailing BR or IMG nodes created to work\n// around contentEditable terribleness.\nvar TrailingHackViewDesc = /*@__PURE__*/(function (ViewDesc) {\n  function TrailingHackViewDesc () {\n    ViewDesc.apply(this, arguments);\n  }\n\n  if ( ViewDesc ) TrailingHackViewDesc.__proto__ = ViewDesc;\n  TrailingHackViewDesc.prototype = Object.create( ViewDesc && ViewDesc.prototype );\n  TrailingHackViewDesc.prototype.constructor = TrailingHackViewDesc;\n\n  var prototypeAccessors$5 = { domAtom: { configurable: true },ignoreForCoords: { configurable: true } };\n\n  TrailingHackViewDesc.prototype.parseRule = function parseRule () { return {ignore: true} };\n  TrailingHackViewDesc.prototype.matchesHack = function matchesHack (nodeName) { return this.dirty == NOT_DIRTY && this.dom.nodeName == nodeName };\n  prototypeAccessors$5.domAtom.get = function () { return true };\n  prototypeAccessors$5.ignoreForCoords.get = function () { return this.dom.nodeName == \"IMG\" };\n\n  Object.defineProperties( TrailingHackViewDesc.prototype, prototypeAccessors$5 );\n\n  return TrailingHackViewDesc;\n}(ViewDesc));\n\n// A separate subclass is used for customized node views, so that the\n// extra checks only have to be made for nodes that are actually\n// customized.\nvar CustomNodeViewDesc = /*@__PURE__*/(function (NodeViewDesc) {\n  function CustomNodeViewDesc(parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, spec, view, pos) {\n    NodeViewDesc.call(this, parent, node, outerDeco, innerDeco, dom, contentDOM, nodeDOM, view, pos);\n    this.spec = spec;\n  }\n\n  if ( NodeViewDesc ) CustomNodeViewDesc.__proto__ = NodeViewDesc;\n  CustomNodeViewDesc.prototype = Object.create( NodeViewDesc && NodeViewDesc.prototype );\n  CustomNodeViewDesc.prototype.constructor = CustomNodeViewDesc;\n\n  // A custom `update` method gets to decide whether the update goes\n  // through. If it does, and there's a `contentDOM` node, our logic\n  // updates the children.\n  CustomNodeViewDesc.prototype.update = function update (node, outerDeco, innerDeco, view) {\n    if (this.dirty == NODE_DIRTY) { return false }\n    if (this.spec.update) {\n      var result = this.spec.update(node, outerDeco, innerDeco);\n      if (result) { this.updateInner(node, outerDeco, innerDeco, view); }\n      return result\n    } else if (!this.contentDOM && !node.isLeaf) {\n      return false\n    } else {\n      return NodeViewDesc.prototype.update.call(this, node, outerDeco, innerDeco, view)\n    }\n  };\n\n  CustomNodeViewDesc.prototype.selectNode = function selectNode () {\n    this.spec.selectNode ? this.spec.selectNode() : NodeViewDesc.prototype.selectNode.call(this);\n  };\n\n  CustomNodeViewDesc.prototype.deselectNode = function deselectNode () {\n    this.spec.deselectNode ? this.spec.deselectNode() : NodeViewDesc.prototype.deselectNode.call(this);\n  };\n\n  CustomNodeViewDesc.prototype.setSelection = function setSelection (anchor, head, root, force) {\n    this.spec.setSelection ? this.spec.setSelection(anchor, head, root)\n      : NodeViewDesc.prototype.setSelection.call(this, anchor, head, root, force);\n  };\n\n  CustomNodeViewDesc.prototype.destroy = function destroy () {\n    if (this.spec.destroy) { this.spec.destroy(); }\n    NodeViewDesc.prototype.destroy.call(this);\n  };\n\n  CustomNodeViewDesc.prototype.stopEvent = function stopEvent (event) {\n    return this.spec.stopEvent ? this.spec.stopEvent(event) : false\n  };\n\n  CustomNodeViewDesc.prototype.ignoreMutation = function ignoreMutation (mutation) {\n    return this.spec.ignoreMutation ? this.spec.ignoreMutation(mutation) : NodeViewDesc.prototype.ignoreMutation.call(this, mutation)\n  };\n\n  return CustomNodeViewDesc;\n}(NodeViewDesc));\n\n// : (dom.Node, [ViewDesc])\n// Sync the content of the given DOM node with the nodes associated\n// with the given array of view descs, recursing into mark descs\n// because this should sync the subtree for a whole node at a time.\nfunction renderDescs(parentDOM, descs, view) {\n  var dom = parentDOM.firstChild, written = false;\n  for (var i = 0; i < descs.length; i++) {\n    var desc = descs[i], childDOM = desc.dom;\n    if (childDOM.parentNode == parentDOM) {\n      while (childDOM != dom) { dom = rm(dom); written = true; }\n      dom = dom.nextSibling;\n    } else {\n      written = true;\n      parentDOM.insertBefore(childDOM, dom);\n    }\n    if (desc instanceof MarkViewDesc) {\n      var pos = dom ? dom.previousSibling : parentDOM.lastChild;\n      renderDescs(desc.contentDOM, desc.children, view);\n      dom = pos ? pos.nextSibling : parentDOM.firstChild;\n    }\n  }\n  while (dom) { dom = rm(dom); written = true; }\n  if (written && view.trackWrites == parentDOM) { view.trackWrites = null; }\n}\n\nfunction OuterDecoLevel(nodeName) {\n  if (nodeName) { this.nodeName = nodeName; }\n}\nOuterDecoLevel.prototype = Object.create(null);\n\nvar noDeco = [new OuterDecoLevel];\n\nfunction computeOuterDeco(outerDeco, node, needsWrap) {\n  if (outerDeco.length == 0) { return noDeco }\n\n  var top = needsWrap ? noDeco[0] : new OuterDecoLevel, result = [top];\n\n  for (var i = 0; i < outerDeco.length; i++) {\n    var attrs = outerDeco[i].type.attrs;\n    if (!attrs) { continue }\n    if (attrs.nodeName)\n      { result.push(top = new OuterDecoLevel(attrs.nodeName)); }\n\n    for (var name in attrs) {\n      var val = attrs[name];\n      if (val == null) { continue }\n      if (needsWrap && result.length == 1)\n        { result.push(top = new OuterDecoLevel(node.isInline ? \"span\" : \"div\")); }\n      if (name == \"class\") { top.class = (top.class ? top.class + \" \" : \"\") + val; }\n      else if (name == \"style\") { top.style = (top.style ? top.style + \";\" : \"\") + val; }\n      else if (name != \"nodeName\") { top[name] = val; }\n    }\n  }\n\n  return result\n}\n\nfunction patchOuterDeco(outerDOM, nodeDOM, prevComputed, curComputed) {\n  // Shortcut for trivial case\n  if (prevComputed == noDeco && curComputed == noDeco) { return nodeDOM }\n\n  var curDOM = nodeDOM;\n  for (var i = 0; i < curComputed.length; i++) {\n    var deco = curComputed[i], prev = prevComputed[i];\n    if (i) {\n      var parent = (void 0);\n      if (prev && prev.nodeName == deco.nodeName && curDOM != outerDOM &&\n          (parent = curDOM.parentNode) && parent.tagName.toLowerCase() == deco.nodeName) {\n        curDOM = parent;\n      } else {\n        parent = document.createElement(deco.nodeName);\n        parent.pmIsDeco = true;\n        parent.appendChild(curDOM);\n        prev = noDeco[0];\n        curDOM = parent;\n      }\n    }\n    patchAttributes(curDOM, prev || noDeco[0], deco);\n  }\n  return curDOM\n}\n\nfunction patchAttributes(dom, prev, cur) {\n  for (var name in prev)\n    { if (name != \"class\" && name != \"style\" && name != \"nodeName\" && !(name in cur))\n      { dom.removeAttribute(name); } }\n  for (var name$1 in cur)\n    { if (name$1 != \"class\" && name$1 != \"style\" && name$1 != \"nodeName\" && cur[name$1] != prev[name$1])\n      { dom.setAttribute(name$1, cur[name$1]); } }\n  if (prev.class != cur.class) {\n    var prevList = prev.class ? prev.class.split(\" \").filter(Boolean) : nothing;\n    var curList = cur.class ? cur.class.split(\" \").filter(Boolean) : nothing;\n    for (var i = 0; i < prevList.length; i++) { if (curList.indexOf(prevList[i]) == -1)\n      { dom.classList.remove(prevList[i]); } }\n    for (var i$1 = 0; i$1 < curList.length; i$1++) { if (prevList.indexOf(curList[i$1]) == -1)\n      { dom.classList.add(curList[i$1]); } }\n    if (dom.classList.length == 0)\n      { dom.removeAttribute(\"class\"); }\n  }\n  if (prev.style != cur.style) {\n    if (prev.style) {\n      var prop = /\\s*([\\w\\-\\xa1-\\uffff]+)\\s*:(?:\"(?:\\\\.|[^\"])*\"|'(?:\\\\.|[^'])*'|\\(.*?\\)|[^;])*/g, m;\n      while (m = prop.exec(prev.style))\n        { dom.style.removeProperty(m[1]); }\n    }\n    if (cur.style)\n      { dom.style.cssText += cur.style; }\n  }\n}\n\nfunction applyOuterDeco(dom, deco, node) {\n  return patchOuterDeco(dom, dom, noDeco, computeOuterDeco(deco, node, dom.nodeType != 1))\n}\n\n// : ([Decoration], [Decoration]) → bool\nfunction sameOuterDeco(a, b) {\n  if (a.length != b.length) { return false }\n  for (var i = 0; i < a.length; i++) { if (!a[i].type.eq(b[i].type)) { return false } }\n  return true\n}\n\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n  var next = dom.nextSibling;\n  dom.parentNode.removeChild(dom);\n  return next\n}\n\n// Helper class for incrementally updating a tree of mark descs and\n// the widget and node descs inside of them.\nvar ViewTreeUpdater = function ViewTreeUpdater(top, lockedNode) {\n  this.top = top;\n  this.lock = lockedNode;\n  // Index into `this.top`'s child array, represents the current\n  // update position.\n  this.index = 0;\n  // When entering a mark, the current top and index are pushed\n  // onto this.\n  this.stack = [];\n  // Tracks whether anything was changed\n  this.changed = false;\n\n  this.preMatch = preMatch(top.node.content, top);\n};\n\n// Destroy and remove the children between the given indices in\n// `this.top`.\nViewTreeUpdater.prototype.destroyBetween = function destroyBetween (start, end) {\n  if (start == end) { return }\n  for (var i = start; i < end; i++) { this.top.children[i].destroy(); }\n  this.top.children.splice(start, end - start);\n  this.changed = true;\n};\n\n// Destroy all remaining children in `this.top`.\nViewTreeUpdater.prototype.destroyRest = function destroyRest () {\n  this.destroyBetween(this.index, this.top.children.length);\n};\n\n// : ([Mark], EditorView)\n// Sync the current stack of mark descs with the given array of\n// marks, reusing existing mark descs when possible.\nViewTreeUpdater.prototype.syncToMarks = function syncToMarks (marks, inline, view) {\n  var keep = 0, depth = this.stack.length >> 1;\n  var maxKeep = Math.min(depth, marks.length);\n  while (keep < maxKeep &&\n         (keep == depth - 1 ? this.top : this.stack[(keep + 1) << 1]).matchesMark(marks[keep]) && marks[keep].type.spec.spanning !== false)\n    { keep++; }\n\n  while (keep < depth) {\n    this.destroyRest();\n    this.top.dirty = NOT_DIRTY;\n    this.index = this.stack.pop();\n    this.top = this.stack.pop();\n    depth--;\n  }\n  while (depth < marks.length) {\n    this.stack.push(this.top, this.index + 1);\n    var found = -1;\n    for (var i = this.index; i < Math.min(this.index + 3, this.top.children.length); i++) {\n      if (this.top.children[i].matchesMark(marks[depth])) { found = i; break }\n    }\n    if (found > -1) {\n      if (found > this.index) {\n        this.changed = true;\n        this.destroyBetween(this.index, found);\n      }\n      this.top = this.top.children[this.index];\n    } else {\n      var markDesc = MarkViewDesc.create(this.top, marks[depth], inline, view);\n      this.top.children.splice(this.index, 0, markDesc);\n      this.top = markDesc;\n      this.changed = true;\n    }\n    this.index = 0;\n    depth++;\n  }\n};\n\n// : (Node, [Decoration], DecorationSource) → bool\n// Try to find a node desc matching the given data. Skip over it and\n// return true when successful.\nViewTreeUpdater.prototype.findNodeMatch = function findNodeMatch (node, outerDeco, innerDeco, index) {\n  var found = -1, targetDesc;\n  if (index >= this.preMatch.index &&\n      (targetDesc = this.preMatch.matches[index - this.preMatch.index]).parent == this.top &&\n      targetDesc.matchesNode(node, outerDeco, innerDeco)) {\n    found = this.top.children.indexOf(targetDesc, this.index);\n  } else {\n    for (var i = this.index, e = Math.min(this.top.children.length, i + 5); i < e; i++) {\n      var child = this.top.children[i];\n      if (child.matchesNode(node, outerDeco, innerDeco) && !this.preMatch.matched.has(child)) {\n        found = i;\n        break\n      }\n    }\n  }\n  if (found < 0) { return false }\n  this.destroyBetween(this.index, found);\n  this.index++;\n  return true\n};\n\nViewTreeUpdater.prototype.updateNodeAt = function updateNodeAt (node, outerDeco, innerDeco, index, view) {\n  var child = this.top.children[index];\n  if (!child.update(node, outerDeco, innerDeco, view)) { return false }\n  this.destroyBetween(this.index, index);\n  this.index = index + 1;\n  return true\n};\n\nViewTreeUpdater.prototype.findIndexWithChild = function findIndexWithChild (domNode) {\n  for (;;) {\n    var parent = domNode.parentNode;\n    if (!parent) { return -1 }\n    if (parent == this.top.contentDOM) {\n      var desc = domNode.pmViewDesc;\n      if (desc) { for (var i = this.index; i < this.top.children.length; i++) {\n        if (this.top.children[i] == desc) { return i }\n      } }\n      return -1\n    }\n    domNode = parent;\n  }\n};\n\n// : (Node, [Decoration], DecorationSource, EditorView, Fragment, number) → bool\n// Try to update the next node, if any, to the given data. Checks\n// pre-matches to avoid overwriting nodes that could still be used.\nViewTreeUpdater.prototype.updateNextNode = function updateNextNode (node, outerDeco, innerDeco, view, index) {\n  for (var i = this.index; i < this.top.children.length; i++) {\n    var next = this.top.children[i];\n    if (next instanceof NodeViewDesc) {\n      var preMatch = this.preMatch.matched.get(next);\n      if (preMatch != null && preMatch != index) { return false }\n      var nextDOM = next.dom;\n\n      // Can't update if nextDOM is or contains this.lock, except if\n      // it's a text node whose content already matches the new text\n      // and whose decorations match the new ones.\n      var locked = this.lock && (nextDOM == this.lock || nextDOM.nodeType == 1 && nextDOM.contains(this.lock.parentNode)) &&\n          !(node.isText && next.node && next.node.isText && next.nodeDOM.nodeValue == node.text &&\n            next.dirty != NODE_DIRTY && sameOuterDeco(outerDeco, next.outerDeco));\n      if (!locked && next.update(node, outerDeco, innerDeco, view)) {\n        this.destroyBetween(this.index, i);\n        if (next.dom != nextDOM) { this.changed = true; }\n        this.index++;\n        return true\n      }\n      break\n    }\n  }\n  return false\n};\n\n// : (Node, [Decoration], DecorationSource, EditorView)\n// Insert the node as a newly created node desc.\nViewTreeUpdater.prototype.addNode = function addNode (node, outerDeco, innerDeco, view, pos) {\n  this.top.children.splice(this.index++, 0, NodeViewDesc.create(this.top, node, outerDeco, innerDeco, view, pos));\n  this.changed = true;\n};\n\nViewTreeUpdater.prototype.placeWidget = function placeWidget (widget, view, pos) {\n  var next = this.index < this.top.children.length ? this.top.children[this.index] : null;\n  if (next && next.matchesWidget(widget) && (widget == next.widget || !next.widget.type.toDOM.parentNode)) {\n    this.index++;\n  } else {\n    var desc = new WidgetViewDesc(this.top, widget, view, pos);\n    this.top.children.splice(this.index++, 0, desc);\n    this.changed = true;\n  }\n};\n\n// Make sure a textblock looks and behaves correctly in\n// contentEditable.\nViewTreeUpdater.prototype.addTextblockHacks = function addTextblockHacks () {\n  var lastChild = this.top.children[this.index - 1];\n  while (lastChild instanceof MarkViewDesc) { lastChild = lastChild.children[lastChild.children.length - 1]; }\n\n  if (!lastChild || // Empty textblock\n      !(lastChild instanceof TextViewDesc) ||\n      /\\n$/.test(lastChild.node.text)) {\n    // Avoid bugs in Safari's cursor drawing (#1165) and Chrome's mouse selection (#1152)\n    if ((result.safari || result.chrome) && lastChild && lastChild.dom.contentEditable == \"false\")\n      { this.addHackNode(\"IMG\"); }\n    this.addHackNode(\"BR\");\n  }\n};\n\nViewTreeUpdater.prototype.addHackNode = function addHackNode (nodeName) {\n  if (this.index < this.top.children.length && this.top.children[this.index].matchesHack(nodeName)) {\n    this.index++;\n  } else {\n    var dom = document.createElement(nodeName);\n    if (nodeName == \"IMG\") { dom.className = \"ProseMirror-separator\"; }\n    if (nodeName == \"BR\") { dom.className = \"ProseMirror-trailingBreak\"; }\n    this.top.children.splice(this.index++, 0, new TrailingHackViewDesc(this.top, nothing, dom, null));\n    this.changed = true;\n  }\n};\n\n// : (Fragment, [ViewDesc]) → {index: number, matched: Map<ViewDesc, number>, matches: ViewDesc[]}\n// Iterate from the end of the fragment and array of descs to find\n// directly matching ones, in order to avoid overeagerly reusing those\n// for other nodes. Returns the fragment index of the first node that\n// is part of the sequence of matched nodes at the end of the\n// fragment.\nfunction preMatch(frag, parentDesc) {\n  var curDesc = parentDesc, descI = curDesc.children.length;\n  var fI = frag.childCount, matched = new Map, matches = [];\n  outer: while (fI > 0) {\n    var desc = (void 0);\n    for (;;) {\n      if (descI) {\n        var next = curDesc.children[descI - 1];\n        if (next instanceof MarkViewDesc) {\n          curDesc = next;\n          descI = next.children.length;\n        } else {\n          desc = next;\n          descI--;\n          break\n        }\n      } else if (curDesc == parentDesc) {\n        break outer\n      } else {\n        // FIXME\n        descI = curDesc.parent.children.indexOf(curDesc);\n        curDesc = curDesc.parent;\n      }\n    }\n    var node = desc.node;\n    if (!node) { continue }\n    if (node != frag.child(fI - 1)) { break }\n    --fI;\n    matched.set(desc, fI);\n    matches.push(desc);\n  }\n  return {index: fI, matched: matched, matches: matches.reverse()}\n}\n\nfunction compareSide(a, b) { return a.type.side - b.type.side }\n\n// : (ViewDesc, DecorationSource, (Decoration, number), (Node, [Decoration], DecorationSource, number))\n// This function abstracts iterating over the nodes and decorations in\n// a fragment. Calls `onNode` for each node, with its local and child\n// decorations. Splits text nodes when there is a decoration starting\n// or ending inside of them. Calls `onWidget` for each widget.\nfunction iterDeco(parent, deco, onWidget, onNode) {\n  var locals = deco.locals(parent), offset = 0;\n  // Simple, cheap variant for when there are no local decorations\n  if (locals.length == 0) {\n    for (var i = 0; i < parent.childCount; i++) {\n      var child = parent.child(i);\n      onNode(child, locals, deco.forChild(offset, child), i);\n      offset += child.nodeSize;\n    }\n    return\n  }\n\n  var decoIndex = 0, active = [], restNode = null;\n  for (var parentIndex = 0;;) {\n    if (decoIndex < locals.length && locals[decoIndex].to == offset) {\n      var widget = locals[decoIndex++], widgets = (void 0);\n      while (decoIndex < locals.length && locals[decoIndex].to == offset)\n        { (widgets || (widgets = [widget])).push(locals[decoIndex++]); }\n      if (widgets) {\n        widgets.sort(compareSide);\n        for (var i$1 = 0; i$1 < widgets.length; i$1++) { onWidget(widgets[i$1], parentIndex, !!restNode); }\n      } else {\n        onWidget(widget, parentIndex, !!restNode);\n      }\n    }\n\n    var child$1 = (void 0), index = (void 0);\n    if (restNode) {\n      index = -1;\n      child$1 = restNode;\n      restNode = null;\n    } else if (parentIndex < parent.childCount) {\n      index = parentIndex;\n      child$1 = parent.child(parentIndex++);\n    } else {\n      break\n    }\n\n    for (var i$2 = 0; i$2 < active.length; i$2++) { if (active[i$2].to <= offset) { active.splice(i$2--, 1); } }\n    while (decoIndex < locals.length && locals[decoIndex].from <= offset && locals[decoIndex].to > offset)\n      { active.push(locals[decoIndex++]); }\n\n    var end = offset + child$1.nodeSize;\n    if (child$1.isText) {\n      var cutAt = end;\n      if (decoIndex < locals.length && locals[decoIndex].from < cutAt) { cutAt = locals[decoIndex].from; }\n      for (var i$3 = 0; i$3 < active.length; i$3++) { if (active[i$3].to < cutAt) { cutAt = active[i$3].to; } }\n      if (cutAt < end) {\n        restNode = child$1.cut(cutAt - offset);\n        child$1 = child$1.cut(0, cutAt - offset);\n        end = cutAt;\n        index = -1;\n      }\n    }\n\n    var outerDeco = !active.length ? nothing\n        : child$1.isInline && !child$1.isLeaf ? active.filter(function (d) { return !d.inline; })\n        : active.slice();\n    onNode(child$1, outerDeco, deco.forChild(offset, child$1), index);\n    offset = end;\n  }\n}\n\n// List markers in Mobile Safari will mysteriously disappear\n// sometimes. This works around that.\nfunction iosHacks(dom) {\n  if (dom.nodeName == \"UL\" || dom.nodeName == \"OL\") {\n    var oldCSS = dom.style.cssText;\n    dom.style.cssText = oldCSS + \"; list-style: square !important\";\n    window.getComputedStyle(dom).listStyle;\n    dom.style.cssText = oldCSS;\n  }\n}\n\nfunction nearbyTextNode(node, offset) {\n  for (;;) {\n    if (node.nodeType == 3) { return node }\n    if (node.nodeType == 1 && offset > 0) {\n      if (node.childNodes.length > offset && node.childNodes[offset].nodeType == 3)\n        { return node.childNodes[offset] }\n      node = node.childNodes[offset - 1];\n      offset = nodeSize(node);\n    } else if (node.nodeType == 1 && offset < node.childNodes.length) {\n      node = node.childNodes[offset];\n      offset = 0;\n    } else {\n      return null\n    }\n  }\n}\n\n// Find a piece of text in an inline fragment, overlapping from-to\nfunction findTextInFragment(frag, text, from, to) {\n  for (var i = 0, pos = 0; i < frag.childCount && pos <= to;) {\n    var child = frag.child(i++), childStart = pos;\n    pos += child.nodeSize;\n    if (!child.isText) { continue }\n    var str = child.text;\n    while (i < frag.childCount) {\n      var next = frag.child(i++);\n      pos += next.nodeSize;\n      if (!next.isText) { break }\n      str += next.text;\n    }\n    if (pos >= from && childStart < to) {\n      var found = str.lastIndexOf(text, to - childStart - 1);\n      if (found >= 0 && found + text.length + childStart >= from)\n        { return childStart + found }\n    }\n  }\n  return -1\n}\n\n// Replace range from-to in an array of view descs with replacement\n// (may be null to just delete). This goes very much against the grain\n// of the rest of this code, which tends to create nodes with the\n// right shape in one go, rather than messing with them after\n// creation, but is necessary in the composition hack.\nfunction replaceNodes(nodes, from, to, view, replacement) {\n  var result = [];\n  for (var i = 0, off = 0; i < nodes.length; i++) {\n    var child = nodes[i], start = off, end = off += child.size;\n    if (start >= to || end <= from) {\n      result.push(child);\n    } else {\n      if (start < from) { result.push(child.slice(0, from - start, view)); }\n      if (replacement) {\n        result.push(replacement);\n        replacement = null;\n      }\n      if (end > to) { result.push(child.slice(to - start, child.size, view)); }\n    }\n  }\n  return result\n}\n\nfunction selectionFromDOM(view, origin) {\n  var domSel = view.root.getSelection(), doc = view.state.doc;\n  if (!domSel.focusNode) { return null }\n  var nearestDesc = view.docView.nearestDesc(domSel.focusNode), inWidget = nearestDesc && nearestDesc.size == 0;\n  var head = view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n  if (head < 0) { return null }\n  var $head = doc.resolve(head), $anchor, selection;\n  if (selectionCollapsed(domSel)) {\n    $anchor = $head;\n    while (nearestDesc && !nearestDesc.node) { nearestDesc = nearestDesc.parent; }\n    if (nearestDesc && nearestDesc.node.isAtom && NodeSelection.isSelectable(nearestDesc.node) && nearestDesc.parent\n        && !(nearestDesc.node.isInline && isOnEdge(domSel.focusNode, domSel.focusOffset, nearestDesc.dom))) {\n      var pos = nearestDesc.posBefore;\n      selection = new NodeSelection(head == pos ? $head : doc.resolve(pos));\n    }\n  } else {\n    var anchor = view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n    if (anchor < 0) { return null }\n    $anchor = doc.resolve(anchor);\n  }\n\n  if (!selection) {\n    var bias = origin == \"pointer\" || (view.state.selection.head < $head.pos && !inWidget) ? 1 : -1;\n    selection = selectionBetween(view, $anchor, $head, bias);\n  }\n  return selection\n}\n\nfunction editorOwnsSelection(view) {\n  return view.editable ? view.hasFocus() :\n    hasSelection(view) && document.activeElement && document.activeElement.contains(view.dom)\n}\n\nfunction selectionToDOM(view, force) {\n  var sel = view.state.selection;\n  syncNodeSelection(view, sel);\n\n  if (!editorOwnsSelection(view)) { return }\n\n  // The delayed drag selection causes issues with Cell Selections\n  // in Safari. And the drag selection delay is to workarond issues\n  // which only present in Chrome.\n  if (!force && view.mouseDown && view.mouseDown.allowDefault && result.chrome) {\n    var domSel = view.root.getSelection(), curSel = view.domObserver.currentSelection;\n    if (domSel.anchorNode && isEquivalentPosition(domSel.anchorNode, domSel.anchorOffset,\n                                                  curSel.anchorNode, curSel.anchorOffset)) {\n      view.mouseDown.delayedSelectionSync = true;\n      view.domObserver.setCurSelection();\n      return\n    }\n  }\n\n  view.domObserver.disconnectSelection();\n\n  if (view.cursorWrapper) {\n    selectCursorWrapper(view);\n  } else {\n    var anchor = sel.anchor;\n    var head = sel.head;\n    var resetEditableFrom, resetEditableTo;\n    if (brokenSelectBetweenUneditable && !(sel instanceof TextSelection)) {\n      if (!sel.$from.parent.inlineContent)\n        { resetEditableFrom = temporarilyEditableNear(view, sel.from); }\n      if (!sel.empty && !sel.$from.parent.inlineContent)\n        { resetEditableTo = temporarilyEditableNear(view, sel.to); }\n    }\n    view.docView.setSelection(anchor, head, view.root, force);\n    if (brokenSelectBetweenUneditable) {\n      if (resetEditableFrom) { resetEditable(resetEditableFrom); }\n      if (resetEditableTo) { resetEditable(resetEditableTo); }\n    }\n    if (sel.visible) {\n      view.dom.classList.remove(\"ProseMirror-hideselection\");\n    } else {\n      view.dom.classList.add(\"ProseMirror-hideselection\");\n      if (\"onselectionchange\" in document) { removeClassOnSelectionChange(view); }\n    }\n  }\n\n  view.domObserver.setCurSelection();\n  view.domObserver.connectSelection();\n}\n\n// Kludge to work around Webkit not allowing a selection to start/end\n// between non-editable block nodes. We briefly make something\n// editable, set the selection, then set it uneditable again.\n\nvar brokenSelectBetweenUneditable = result.safari || result.chrome && result.chrome_version < 63;\n\nfunction temporarilyEditableNear(view, pos) {\n  var ref = view.docView.domFromPos(pos, 0);\n  var node = ref.node;\n  var offset = ref.offset;\n  var after = offset < node.childNodes.length ? node.childNodes[offset] : null;\n  var before = offset ? node.childNodes[offset - 1] : null;\n  if (result.safari && after && after.contentEditable == \"false\") { return setEditable(after) }\n  if ((!after || after.contentEditable == \"false\") && (!before || before.contentEditable == \"false\")) {\n    if (after) { return setEditable(after) }\n    else if (before) { return setEditable(before) }\n  }\n}\n\nfunction setEditable(element) {\n  element.contentEditable = \"true\";\n  if (result.safari && element.draggable) { element.draggable = false; element.wasDraggable = true; }\n  return element\n}\n\nfunction resetEditable(element) {\n  element.contentEditable = \"false\";\n  if (element.wasDraggable) { element.draggable = true; element.wasDraggable = null; }\n}\n\nfunction removeClassOnSelectionChange(view) {\n  var doc = view.dom.ownerDocument;\n  doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard);\n  var domSel = view.root.getSelection();\n  var node = domSel.anchorNode, offset = domSel.anchorOffset;\n  doc.addEventListener(\"selectionchange\", view.hideSelectionGuard = function () {\n    if (domSel.anchorNode != node || domSel.anchorOffset != offset) {\n      doc.removeEventListener(\"selectionchange\", view.hideSelectionGuard);\n      setTimeout(function () {\n        if (!editorOwnsSelection(view) || view.state.selection.visible)\n          { view.dom.classList.remove(\"ProseMirror-hideselection\"); }\n      }, 20);\n    }\n  });\n}\n\nfunction selectCursorWrapper(view) {\n  var domSel = view.root.getSelection(), range = document.createRange();\n  var node = view.cursorWrapper.dom, img = node.nodeName == \"IMG\";\n  if (img) { range.setEnd(node.parentNode, domIndex(node) + 1); }\n  else { range.setEnd(node, 0); }\n  range.collapse(false);\n  domSel.removeAllRanges();\n  domSel.addRange(range);\n  // Kludge to kill 'control selection' in IE11 when selecting an\n  // invisible cursor wrapper, since that would result in those weird\n  // resize handles and a selection that considers the absolutely\n  // positioned wrapper, rather than the root editable node, the\n  // focused element.\n  if (!img && !view.state.selection.visible && result.ie && result.ie_version <= 11) {\n    node.disabled = true;\n    node.disabled = false;\n  }\n}\n\nfunction syncNodeSelection(view, sel) {\n  if (sel instanceof NodeSelection) {\n    var desc = view.docView.descAt(sel.from);\n    if (desc != view.lastSelectedViewDesc) {\n      clearNodeSelection(view);\n      if (desc) { desc.selectNode(); }\n      view.lastSelectedViewDesc = desc;\n    }\n  } else {\n    clearNodeSelection(view);\n  }\n}\n\n// Clear all DOM statefulness of the last node selection.\nfunction clearNodeSelection(view) {\n  if (view.lastSelectedViewDesc) {\n    if (view.lastSelectedViewDesc.parent)\n      { view.lastSelectedViewDesc.deselectNode(); }\n    view.lastSelectedViewDesc = null;\n  }\n}\n\nfunction selectionBetween(view, $anchor, $head, bias) {\n  return view.someProp(\"createSelectionBetween\", function (f) { return f(view, $anchor, $head); })\n    || TextSelection.between($anchor, $head, bias)\n}\n\nfunction hasFocusAndSelection(view) {\n  if (view.editable && view.root.activeElement != view.dom) { return false }\n  return hasSelection(view)\n}\n\nfunction hasSelection(view) {\n  var sel = view.root.getSelection();\n  if (!sel.anchorNode) { return false }\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return view.dom.contains(sel.anchorNode.nodeType == 3 ? sel.anchorNode.parentNode : sel.anchorNode) &&\n      (view.editable || view.dom.contains(sel.focusNode.nodeType == 3 ? sel.focusNode.parentNode : sel.focusNode))\n  } catch(_) {\n    return false\n  }\n}\n\nfunction anchorInRightPlace(view) {\n  var anchorDOM = view.docView.domFromPos(view.state.selection.anchor, 0);\n  var domSel = view.root.getSelection();\n  return isEquivalentPosition(anchorDOM.node, anchorDOM.offset, domSel.anchorNode, domSel.anchorOffset)\n}\n\nfunction moveSelectionBlock(state, dir) {\n  var ref = state.selection;\n  var $anchor = ref.$anchor;\n  var $head = ref.$head;\n  var $side = dir > 0 ? $anchor.max($head) : $anchor.min($head);\n  var $start = !$side.parent.inlineContent ? $side : $side.depth ? state.doc.resolve(dir > 0 ? $side.after() : $side.before()) : null;\n  return $start && Selection.findFrom($start, dir)\n}\n\nfunction apply(view, sel) {\n  view.dispatch(view.state.tr.setSelection(sel).scrollIntoView());\n  return true\n}\n\nfunction selectHorizontally(view, dir, mods) {\n  var sel = view.state.selection;\n  if (sel instanceof TextSelection) {\n    if (!sel.empty || mods.indexOf(\"s\") > -1) {\n      return false\n    } else if (view.endOfTextblock(dir > 0 ? \"right\" : \"left\")) {\n      var next = moveSelectionBlock(view.state, dir);\n      if (next && (next instanceof NodeSelection)) { return apply(view, next) }\n      return false\n    } else if (!(result.mac && mods.indexOf(\"m\") > -1)) {\n      var $head = sel.$head, node = $head.textOffset ? null : dir < 0 ? $head.nodeBefore : $head.nodeAfter, desc;\n      if (!node || node.isText) { return false }\n      var nodePos = dir < 0 ? $head.pos - node.nodeSize : $head.pos;\n      if (!(node.isAtom || (desc = view.docView.descAt(nodePos)) && !desc.contentDOM)) { return false }\n      if (NodeSelection.isSelectable(node)) {\n        return apply(view, new NodeSelection(dir < 0 ? view.state.doc.resolve($head.pos - node.nodeSize) : $head))\n      } else if (result.webkit) {\n        // Chrome and Safari will introduce extra pointless cursor\n        // positions around inline uneditable nodes, so we have to\n        // take over and move the cursor past them (#937)\n        return apply(view, new TextSelection(view.state.doc.resolve(dir < 0 ? nodePos : nodePos + node.nodeSize)))\n      } else {\n        return false\n      }\n    }\n  } else if (sel instanceof NodeSelection && sel.node.isInline) {\n    return apply(view, new TextSelection(dir > 0 ? sel.$to : sel.$from))\n  } else {\n    var next$1 = moveSelectionBlock(view.state, dir);\n    if (next$1) { return apply(view, next$1) }\n    return false\n  }\n}\n\nfunction nodeLen(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length\n}\n\nfunction isIgnorable(dom) {\n  var desc = dom.pmViewDesc;\n  return desc && desc.size == 0 && (dom.nextSibling || dom.nodeName != \"BR\")\n}\n\n// Make sure the cursor isn't directly after one or more ignored\n// nodes, which will confuse the browser's cursor motion logic.\nfunction skipIgnoredNodesLeft(view) {\n  var sel = view.root.getSelection();\n  var node = sel.focusNode, offset = sel.focusOffset;\n  if (!node) { return }\n  var moveNode, moveOffset, force = false;\n  // Gecko will do odd things when the selection is directly in front\n  // of a non-editable node, so in that case, move it into the next\n  // node if possible. Issue prosemirror/prosemirror#832.\n  if (result.gecko && node.nodeType == 1 && offset < nodeLen(node) && isIgnorable(node.childNodes[offset])) { force = true; }\n  for (;;) {\n    if (offset > 0) {\n      if (node.nodeType != 1) {\n        break\n      } else {\n        var before = node.childNodes[offset - 1];\n        if (isIgnorable(before)) {\n          moveNode = node;\n          moveOffset = --offset;\n        } else if (before.nodeType == 3) {\n          node = before;\n          offset = node.nodeValue.length;\n        } else { break }\n      }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      var prev = node.previousSibling;\n      while (prev && isIgnorable(prev)) {\n        moveNode = node.parentNode;\n        moveOffset = domIndex(prev);\n        prev = prev.previousSibling;\n      }\n      if (!prev) {\n        node = node.parentNode;\n        if (node == view.dom) { break }\n        offset = 0;\n      } else {\n        node = prev;\n        offset = nodeLen(node);\n      }\n    }\n  }\n  if (force) { setSelFocus(view, sel, node, offset); }\n  else if (moveNode) { setSelFocus(view, sel, moveNode, moveOffset); }\n}\n\n// Make sure the cursor isn't directly before one or more ignored\n// nodes.\nfunction skipIgnoredNodesRight(view) {\n  var sel = view.root.getSelection();\n  var node = sel.focusNode, offset = sel.focusOffset;\n  if (!node) { return }\n  var len = nodeLen(node);\n  var moveNode, moveOffset;\n  for (;;) {\n    if (offset < len) {\n      if (node.nodeType != 1) { break }\n      var after = node.childNodes[offset];\n      if (isIgnorable(after)) {\n        moveNode = node;\n        moveOffset = ++offset;\n      }\n      else { break }\n    } else if (isBlockNode(node)) {\n      break\n    } else {\n      var next = node.nextSibling;\n      while (next && isIgnorable(next)) {\n        moveNode = next.parentNode;\n        moveOffset = domIndex(next) + 1;\n        next = next.nextSibling;\n      }\n      if (!next) {\n        node = node.parentNode;\n        if (node == view.dom) { break }\n        offset = len = 0;\n      } else {\n        node = next;\n        offset = 0;\n        len = nodeLen(node);\n      }\n    }\n  }\n  if (moveNode) { setSelFocus(view, sel, moveNode, moveOffset); }\n}\n\nfunction isBlockNode(dom) {\n  var desc = dom.pmViewDesc;\n  return desc && desc.node && desc.node.isBlock\n}\n\nfunction setSelFocus(view, sel, node, offset) {\n  if (selectionCollapsed(sel)) {\n    var range = document.createRange();\n    range.setEnd(node, offset);\n    range.setStart(node, offset);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  } else if (sel.extend) {\n    sel.extend(node, offset);\n  }\n  view.domObserver.setCurSelection();\n  var state = view.state;\n  // If no state update ends up happening, reset the selection.\n  setTimeout(function () {\n    if (view.state == state) { selectionToDOM(view); }\n  }, 50);\n}\n\n// : (EditorState, number)\n// Check whether vertical selection motion would involve node\n// selections. If so, apply it (if not, the result is left to the\n// browser)\nfunction selectVertically(view, dir, mods) {\n  var sel = view.state.selection;\n  if (sel instanceof TextSelection && !sel.empty || mods.indexOf(\"s\") > -1) { return false }\n  if (result.mac && mods.indexOf(\"m\") > -1) { return false }\n  var $from = sel.$from;\n  var $to = sel.$to;\n\n  if (!$from.parent.inlineContent || view.endOfTextblock(dir < 0 ? \"up\" : \"down\")) {\n    var next = moveSelectionBlock(view.state, dir);\n    if (next && (next instanceof NodeSelection))\n      { return apply(view, next) }\n  }\n  if (!$from.parent.inlineContent) {\n    var side = dir < 0 ? $from : $to;\n    var beyond = sel instanceof AllSelection ? Selection.near(side, dir) : Selection.findFrom(side, dir);\n    return beyond ? apply(view, beyond) : false\n  }\n  return false\n}\n\nfunction stopNativeHorizontalDelete(view, dir) {\n  if (!(view.state.selection instanceof TextSelection)) { return true }\n  var ref = view.state.selection;\n  var $head = ref.$head;\n  var $anchor = ref.$anchor;\n  var empty = ref.empty;\n  if (!$head.sameParent($anchor)) { return true }\n  if (!empty) { return false }\n  if (view.endOfTextblock(dir > 0 ? \"forward\" : \"backward\")) { return true }\n  var nextNode = !$head.textOffset && (dir < 0 ? $head.nodeBefore : $head.nodeAfter);\n  if (nextNode && !nextNode.isText) {\n    var tr = view.state.tr;\n    if (dir < 0) { tr.delete($head.pos - nextNode.nodeSize, $head.pos); }\n    else { tr.delete($head.pos, $head.pos + nextNode.nodeSize); }\n    view.dispatch(tr);\n    return true\n  }\n  return false\n}\n\nfunction switchEditable(view, node, state) {\n  view.domObserver.stop();\n  node.contentEditable = state;\n  view.domObserver.start();\n}\n\n// Issue #867 / #1090 / https://bugs.chromium.org/p/chromium/issues/detail?id=903821\n// In which Safari (and at some point in the past, Chrome) does really\n// wrong things when the down arrow is pressed when the cursor is\n// directly at the start of a textblock and has an uneditable node\n// after it\nfunction safariDownArrowBug(view) {\n  if (!result.safari || view.state.selection.$head.parentOffset > 0) { return }\n  var ref = view.root.getSelection();\n  var focusNode = ref.focusNode;\n  var focusOffset = ref.focusOffset;\n  if (focusNode && focusNode.nodeType == 1 && focusOffset == 0 &&\n      focusNode.firstChild && focusNode.firstChild.contentEditable == \"false\") {\n    var child = focusNode.firstChild;\n    switchEditable(view, child, true);\n    setTimeout(function () { return switchEditable(view, child, false); }, 20);\n  }\n}\n\n// A backdrop key mapping used to make sure we always suppress keys\n// that have a dangerous default effect, even if the commands they are\n// bound to return false, and to make sure that cursor-motion keys\n// find a cursor (as opposed to a node selection) when pressed. For\n// cursor-motion keys, the code in the handlers also takes care of\n// block selections.\n\nfunction getMods(event) {\n  var result = \"\";\n  if (event.ctrlKey) { result += \"c\"; }\n  if (event.metaKey) { result += \"m\"; }\n  if (event.altKey) { result += \"a\"; }\n  if (event.shiftKey) { result += \"s\"; }\n  return result\n}\n\nfunction captureKeyDown(view, event) {\n  var code = event.keyCode, mods = getMods(event);\n  if (code == 8 || (result.mac && code == 72 && mods == \"c\")) { // Backspace, Ctrl-h on Mac\n    return stopNativeHorizontalDelete(view, -1) || skipIgnoredNodesLeft(view)\n  } else if (code == 46 || (result.mac && code == 68 && mods == \"c\")) { // Delete, Ctrl-d on Mac\n    return stopNativeHorizontalDelete(view, 1) || skipIgnoredNodesRight(view)\n  } else if (code == 13 || code == 27) { // Enter, Esc\n    return true\n  } else if (code == 37) { // Left arrow\n    return selectHorizontally(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 39) { // Right arrow\n    return selectHorizontally(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (code == 38) { // Up arrow\n    return selectVertically(view, -1, mods) || skipIgnoredNodesLeft(view)\n  } else if (code == 40) { // Down arrow\n    return safariDownArrowBug(view) || selectVertically(view, 1, mods) || skipIgnoredNodesRight(view)\n  } else if (mods == (result.mac ? \"m\" : \"c\") &&\n             (code == 66 || code == 73 || code == 89 || code == 90)) { // Mod-[biyz]\n    return true\n  }\n  return false\n}\n\n// Note that all referencing and parsing is done with the\n// start-of-operation selection and document, since that's the one\n// that the DOM represents. If any changes came in in the meantime,\n// the modification is mapped over those before it is applied, in\n// readDOMChange.\n\nfunction parseBetween(view, from_, to_) {\n  var ref = view.docView.parseRange(from_, to_);\n  var parent = ref.node;\n  var fromOffset = ref.fromOffset;\n  var toOffset = ref.toOffset;\n  var from = ref.from;\n  var to = ref.to;\n\n  var domSel = view.root.getSelection(), find = null, anchor = domSel.anchorNode;\n  if (anchor && view.dom.contains(anchor.nodeType == 1 ? anchor : anchor.parentNode)) {\n    find = [{node: anchor, offset: domSel.anchorOffset}];\n    if (!selectionCollapsed(domSel))\n      { find.push({node: domSel.focusNode, offset: domSel.focusOffset}); }\n  }\n  // Work around issue in Chrome where backspacing sometimes replaces\n  // the deleted content with a random BR node (issues #799, #831)\n  if (result.chrome && view.lastKeyCode === 8) {\n    for (var off = toOffset; off > fromOffset; off--) {\n      var node = parent.childNodes[off - 1], desc = node.pmViewDesc;\n      if (node.nodeName == \"BR\" && !desc) { toOffset = off; break }\n      if (!desc || desc.size) { break }\n    }\n  }\n  var startDoc = view.state.doc;\n  var parser = view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n  var $from = startDoc.resolve(from);\n\n  var sel = null, doc = parser.parse(parent, {\n    topNode: $from.parent,\n    topMatch: $from.parent.contentMatchAt($from.index()),\n    topOpen: true,\n    from: fromOffset,\n    to: toOffset,\n    preserveWhitespace: $from.parent.type.whitespace == \"pre\" ? \"full\" : true,\n    editableContent: true,\n    findPositions: find,\n    ruleFromNode: ruleFromNode,\n    context: $from\n  });\n  if (find && find[0].pos != null) {\n    var anchor$1 = find[0].pos, head = find[1] && find[1].pos;\n    if (head == null) { head = anchor$1; }\n    sel = {anchor: anchor$1 + from, head: head + from};\n  }\n  return {doc: doc, sel: sel, from: from, to: to}\n}\n\nfunction ruleFromNode(dom) {\n  var desc = dom.pmViewDesc;\n  if (desc) {\n    return desc.parseRule()\n  } else if (dom.nodeName == \"BR\" && dom.parentNode) {\n    // Safari replaces the list item or table cell with a BR\n    // directly in the list node (?!) if you delete the last\n    // character in a list item or table cell (#708, #862)\n    if (result.safari && /^(ul|ol)$/i.test(dom.parentNode.nodeName)) {\n      var skip = document.createElement(\"div\");\n      skip.appendChild(document.createElement(\"li\"));\n      return {skip: skip}\n    } else if (dom.parentNode.lastChild == dom || result.safari && /^(tr|table)$/i.test(dom.parentNode.nodeName)) {\n      return {ignore: true}\n    }\n  } else if (dom.nodeName == \"IMG\" && dom.getAttribute(\"mark-placeholder\")) {\n    return {ignore: true}\n  }\n}\n\nfunction readDOMChange(view, from, to, typeOver, addedNodes) {\n  if (from < 0) {\n    var origin = view.lastSelectionTime > Date.now() - 50 ? view.lastSelectionOrigin : null;\n    var newSel = selectionFromDOM(view, origin);\n    if (newSel && !view.state.selection.eq(newSel)) {\n      var tr$1 = view.state.tr.setSelection(newSel);\n      if (origin == \"pointer\") { tr$1.setMeta(\"pointer\", true); }\n      else if (origin == \"key\") { tr$1.scrollIntoView(); }\n      view.dispatch(tr$1);\n    }\n    return\n  }\n\n  var $before = view.state.doc.resolve(from);\n  var shared = $before.sharedDepth(to);\n  from = $before.before(shared + 1);\n  to = view.state.doc.resolve(to).after(shared + 1);\n\n  var sel = view.state.selection;\n  var parse = parseBetween(view, from, to);\n  // Chrome sometimes leaves the cursor before the inserted text when\n  // composing after a cursor wrapper. This moves it forward.\n  if (result.chrome && view.cursorWrapper && parse.sel && parse.sel.anchor == view.cursorWrapper.deco.from) {\n    var text = view.cursorWrapper.deco.type.toDOM.nextSibling;\n    var size = text && text.nodeValue ? text.nodeValue.length : 1;\n    parse.sel = {anchor: parse.sel.anchor + size, head: parse.sel.anchor + size};\n  }\n\n  var doc = view.state.doc, compare = doc.slice(parse.from, parse.to);\n  var preferredPos, preferredSide;\n  // Prefer anchoring to end when Backspace is pressed\n  if (view.lastKeyCode === 8 && Date.now() - 100 < view.lastKeyCodeTime) {\n    preferredPos = view.state.selection.to;\n    preferredSide = \"end\";\n  } else {\n    preferredPos = view.state.selection.from;\n    preferredSide = \"start\";\n  }\n  view.lastKeyCode = null;\n\n  var change = findDiff(compare.content, parse.doc.content, parse.from, preferredPos, preferredSide);\n  if (!change) {\n    if (typeOver && sel instanceof TextSelection && !sel.empty && sel.$head.sameParent(sel.$anchor) &&\n        !view.composing && !(parse.sel && parse.sel.anchor != parse.sel.head)) {\n      change = {start: sel.from, endA: sel.to, endB: sel.to};\n    } else if ((result.ios && view.lastIOSEnter > Date.now() - 225 || result.android) &&\n               addedNodes.some(function (n) { return n.nodeName == \"DIV\" || n.nodeName == \"P\"; }) &&\n               view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })) {\n      view.lastIOSEnter = 0;\n      return\n    } else {\n      if (parse.sel) {\n        var sel$1 = resolveSelection(view, view.state.doc, parse.sel);\n        if (sel$1 && !sel$1.eq(view.state.selection)) { view.dispatch(view.state.tr.setSelection(sel$1)); }\n      }\n      return\n    }\n  }\n  view.domChangeCount++;\n  // Handle the case where overwriting a selection by typing matches\n  // the start or end of the selected content, creating a change\n  // that's smaller than what was actually overwritten.\n  if (view.state.selection.from < view.state.selection.to &&\n      change.start == change.endB &&\n      view.state.selection instanceof TextSelection) {\n    if (change.start > view.state.selection.from && change.start <= view.state.selection.from + 2) {\n      change.start = view.state.selection.from;\n    } else if (change.endA < view.state.selection.to && change.endA >= view.state.selection.to - 2) {\n      change.endB += (view.state.selection.to - change.endA);\n      change.endA = view.state.selection.to;\n    }\n  }\n\n  // IE11 will insert a non-breaking space _ahead_ of the space after\n  // the cursor space when adding a space before another space. When\n  // that happened, adjust the change to cover the space instead.\n  if (result.ie && result.ie_version <= 11 && change.endB == change.start + 1 &&\n      change.endA == change.start && change.start > parse.from &&\n      parse.doc.textBetween(change.start - parse.from - 1, change.start - parse.from + 1) == \" \\u00a0\") {\n    change.start--;\n    change.endA--;\n    change.endB--;\n  }\n\n  var $from = parse.doc.resolveNoCache(change.start - parse.from);\n  var $to = parse.doc.resolveNoCache(change.endB - parse.from);\n  var inlineChange = $from.sameParent($to) && $from.parent.inlineContent;\n  var nextSel;\n  // If this looks like the effect of pressing Enter (or was recorded\n  // as being an iOS enter press), just dispatch an Enter key instead.\n  if (((result.ios && view.lastIOSEnter > Date.now() - 225 &&\n        (!inlineChange || addedNodes.some(function (n) { return n.nodeName == \"DIV\" || n.nodeName == \"P\"; }))) ||\n       (!inlineChange && $from.pos < parse.doc.content.size &&\n        (nextSel = Selection.findFrom(parse.doc.resolve($from.pos + 1), 1, true)) &&\n        nextSel.head == $to.pos)) &&\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); })) {\n    view.lastIOSEnter = 0;\n    return\n  }\n  // Same for backspace\n  if (view.state.selection.anchor > change.start &&\n      looksLikeJoin(doc, change.start, change.endA, $from, $to) &&\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(8, \"Backspace\")); })) {\n    if (result.android && result.chrome) { view.domObserver.suppressSelectionUpdates(); } // #820\n    return\n  }\n\n  // Chrome Android will occasionally, during composition, delete the\n  // entire composition and then immediately insert it again. This is\n  // used to detect that situation.\n  if (result.chrome && result.android && change.toB == change.from)\n    { view.lastAndroidDelete = Date.now(); }\n\n  // This tries to detect Android virtual keyboard\n  // enter-and-pick-suggestion action. That sometimes (see issue\n  // #1059) first fires a DOM mutation, before moving the selection to\n  // the newly created block. And then, because ProseMirror cleans up\n  // the DOM selection, it gives up moving the selection entirely,\n  // leaving the cursor in the wrong place. When that happens, we drop\n  // the new paragraph from the initial change, and fire a simulated\n  // enter key afterwards.\n  if (result.android && !inlineChange && $from.start() != $to.start() && $to.parentOffset == 0 && $from.depth == $to.depth &&\n      parse.sel && parse.sel.anchor == parse.sel.head && parse.sel.head == change.endA) {\n    change.endB -= 2;\n    $to = parse.doc.resolveNoCache(change.endB - parse.from);\n    setTimeout(function () {\n      view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n    }, 20);\n  }\n\n  var chFrom = change.start, chTo = change.endA;\n\n  var tr, storedMarks, markChange, $from1;\n  if (inlineChange) {\n    if ($from.pos == $to.pos) { // Deletion\n      // IE11 sometimes weirdly moves the DOM selection around after\n      // backspacing out the first element in a textblock\n      if (result.ie && result.ie_version <= 11 && $from.parentOffset == 0) {\n        view.domObserver.suppressSelectionUpdates();\n        setTimeout(function () { return selectionToDOM(view); }, 20);\n      }\n      tr = view.state.tr.delete(chFrom, chTo);\n      storedMarks = doc.resolve(change.start).marksAcross(doc.resolve(change.endA));\n    } else if ( // Adding or removing a mark\n      change.endA == change.endB && ($from1 = doc.resolve(change.start)) &&\n      (markChange = isMarkChange($from.parent.content.cut($from.parentOffset, $to.parentOffset),\n                                 $from1.parent.content.cut($from1.parentOffset, change.endA - $from1.start())))\n    ) {\n      tr = view.state.tr;\n      if (markChange.type == \"add\") { tr.addMark(chFrom, chTo, markChange.mark); }\n      else { tr.removeMark(chFrom, chTo, markChange.mark); }\n    } else if ($from.parent.child($from.index()).isText && $from.index() == $to.index() - ($to.textOffset ? 0 : 1)) {\n      // Both positions in the same text node -- simply insert text\n      var text$1 = $from.parent.textBetween($from.parentOffset, $to.parentOffset);\n      if (view.someProp(\"handleTextInput\", function (f) { return f(view, chFrom, chTo, text$1); })) { return }\n      tr = view.state.tr.insertText(text$1, chFrom, chTo);\n    }\n  }\n\n  if (!tr)\n    { tr = view.state.tr.replace(chFrom, chTo, parse.doc.slice(change.start - parse.from, change.endB - parse.from)); }\n  if (parse.sel) {\n    var sel$2 = resolveSelection(view, tr.doc, parse.sel);\n    // Chrome Android will sometimes, during composition, report the\n    // selection in the wrong place. If it looks like that is\n    // happening, don't update the selection.\n    // Edge just doesn't move the cursor forward when you start typing\n    // in an empty block or between br nodes.\n    if (sel$2 && !(result.chrome && result.android && view.composing && sel$2.empty &&\n                 (change.start != change.endB || view.lastAndroidDelete < Date.now() - 100) &&\n                 (sel$2.head == chFrom || sel$2.head == tr.mapping.map(chTo) - 1) ||\n                 result.ie && sel$2.empty && sel$2.head == chFrom))\n      { tr.setSelection(sel$2); }\n  }\n  if (storedMarks) { tr.ensureMarks(storedMarks); }\n  view.dispatch(tr.scrollIntoView());\n}\n\nfunction resolveSelection(view, doc, parsedSel) {\n  if (Math.max(parsedSel.anchor, parsedSel.head) > doc.content.size) { return null }\n  return selectionBetween(view, doc.resolve(parsedSel.anchor), doc.resolve(parsedSel.head))\n}\n\n// : (Fragment, Fragment) → ?{mark: Mark, type: string}\n// Given two same-length, non-empty fragments of inline content,\n// determine whether the first could be created from the second by\n// removing or adding a single mark type.\nfunction isMarkChange(cur, prev) {\n  var curMarks = cur.firstChild.marks, prevMarks = prev.firstChild.marks;\n  var added = curMarks, removed = prevMarks, type, mark, update;\n  for (var i = 0; i < prevMarks.length; i++) { added = prevMarks[i].removeFromSet(added); }\n  for (var i$1 = 0; i$1 < curMarks.length; i$1++) { removed = curMarks[i$1].removeFromSet(removed); }\n  if (added.length == 1 && removed.length == 0) {\n    mark = added[0];\n    type = \"add\";\n    update = function (node) { return node.mark(mark.addToSet(node.marks)); };\n  } else if (added.length == 0 && removed.length == 1) {\n    mark = removed[0];\n    type = \"remove\";\n    update = function (node) { return node.mark(mark.removeFromSet(node.marks)); };\n  } else {\n    return null\n  }\n  var updated = [];\n  for (var i$2 = 0; i$2 < prev.childCount; i$2++) { updated.push(update(prev.child(i$2))); }\n  if (Fragment.from(updated).eq(cur)) { return {mark: mark, type: type} }\n}\n\nfunction looksLikeJoin(old, start, end, $newStart, $newEnd) {\n  if (!$newStart.parent.isTextblock ||\n      // The content must have shrunk\n      end - start <= $newEnd.pos - $newStart.pos ||\n      // newEnd must point directly at or after the end of the block that newStart points into\n      skipClosingAndOpening($newStart, true, false) < $newEnd.pos)\n    { return false }\n\n  var $start = old.resolve(start);\n  // Start must be at the end of a block\n  if ($start.parentOffset < $start.parent.content.size || !$start.parent.isTextblock)\n    { return false }\n  var $next = old.resolve(skipClosingAndOpening($start, true, true));\n  // The next textblock must start before end and end near it\n  if (!$next.parent.isTextblock || $next.pos > end ||\n      skipClosingAndOpening($next, true, false) < end)\n    { return false }\n\n  // The fragments after the join point must match\n  return $newStart.parent.content.cut($newStart.parentOffset).eq($next.parent.content)\n}\n\nfunction skipClosingAndOpening($pos, fromEnd, mayOpen) {\n  var depth = $pos.depth, end = fromEnd ? $pos.end() : $pos.pos;\n  while (depth > 0 && (fromEnd || $pos.indexAfter(depth) == $pos.node(depth).childCount)) {\n    depth--;\n    end++;\n    fromEnd = false;\n  }\n  if (mayOpen) {\n    var next = $pos.node(depth).maybeChild($pos.indexAfter(depth));\n    while (next && !next.isLeaf) {\n      next = next.firstChild;\n      end++;\n    }\n  }\n  return end\n}\n\nfunction findDiff(a, b, pos, preferredPos, preferredSide) {\n  var start = a.findDiffStart(b, pos);\n  if (start == null) { return null }\n  var ref = a.findDiffEnd(b, pos + a.size, pos + b.size);\n  var endA = ref.a;\n  var endB = ref.b;\n  if (preferredSide == \"end\") {\n    var adjust = Math.max(0, start - Math.min(endA, endB));\n    preferredPos -= endA + adjust - start;\n  }\n  if (endA < start && a.size < b.size) {\n    var move = preferredPos <= start && preferredPos >= endA ? start - preferredPos : 0;\n    start -= move;\n    endB = start + (endB - endA);\n    endA = start;\n  } else if (endB < start) {\n    var move$1 = preferredPos <= start && preferredPos >= endB ? start - preferredPos : 0;\n    start -= move$1;\n    endA = start + (endA - endB);\n    endB = start;\n  }\n  return {start: start, endA: endA, endB: endB}\n}\n\nfunction serializeForClipboard(view, slice) {\n  var context = [];\n  var content = slice.content;\n  var openStart = slice.openStart;\n  var openEnd = slice.openEnd;\n  while (openStart > 1 && openEnd > 1 && content.childCount == 1 && content.firstChild.childCount == 1) {\n    openStart--;\n    openEnd--;\n    var node = content.firstChild;\n    context.push(node.type.name, node.attrs != node.type.defaultAttrs ? node.attrs : null);\n    content = node.content;\n  }\n\n  var serializer = view.someProp(\"clipboardSerializer\") || DOMSerializer.fromSchema(view.state.schema);\n  var doc = detachedDoc(), wrap = doc.createElement(\"div\");\n  wrap.appendChild(serializer.serializeFragment(content, {document: doc}));\n\n  var firstChild = wrap.firstChild, needsWrap;\n  while (firstChild && firstChild.nodeType == 1 && (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])) {\n    for (var i = needsWrap.length - 1; i >= 0; i--) {\n      var wrapper = doc.createElement(needsWrap[i]);\n      while (wrap.firstChild) { wrapper.appendChild(wrap.firstChild); }\n      wrap.appendChild(wrapper);\n      if (needsWrap[i] != \"tbody\") {\n        openStart++;\n        openEnd++;\n      }\n    }\n    firstChild = wrap.firstChild;\n  }\n\n  if (firstChild && firstChild.nodeType == 1)\n    { firstChild.setAttribute(\"data-pm-slice\", (openStart + \" \" + openEnd + \" \" + (JSON.stringify(context)))); }\n\n  var text = view.someProp(\"clipboardTextSerializer\", function (f) { return f(slice); }) ||\n      slice.content.textBetween(0, slice.content.size, \"\\n\\n\");\n\n  return {dom: wrap, text: text}\n}\n\n// : (EditorView, string, string, ?bool, ResolvedPos) → ?Slice\n// Read a slice of content from the clipboard (or drop data).\nfunction parseFromClipboard(view, text, html, plainText, $context) {\n  var dom, inCode = $context.parent.type.spec.code, slice;\n  if (!html && !text) { return null }\n  var asText = text && (plainText || inCode || !html);\n  if (asText) {\n    view.someProp(\"transformPastedText\", function (f) { text = f(text, inCode || plainText); });\n    if (inCode) { return text ? new Slice(Fragment.from(view.state.schema.text(text.replace(/\\r\\n?/g, \"\\n\"))), 0, 0) : Slice.empty }\n    var parsed = view.someProp(\"clipboardTextParser\", function (f) { return f(text, $context, plainText); });\n    if (parsed) {\n      slice = parsed;\n    } else {\n      var marks = $context.marks();\n      var ref = view.state;\n      var schema = ref.schema;\n      var serializer = DOMSerializer.fromSchema(schema);\n      dom = document.createElement(\"div\");\n      text.split(/(?:\\r\\n?|\\n)+/).forEach(function (block) {\n        var p = dom.appendChild(document.createElement(\"p\"));\n        if (block) { p.appendChild(serializer.serializeNode(schema.text(block, marks))); }\n      });\n    }\n  } else {\n    view.someProp(\"transformPastedHTML\", function (f) { html = f(html); });\n    dom = readHTML(html);\n    if (result.webkit) { restoreReplacedSpaces(dom); }\n  }\n\n  var contextNode = dom && dom.querySelector(\"[data-pm-slice]\");\n  var sliceData = contextNode && /^(\\d+) (\\d+) (.*)/.exec(contextNode.getAttribute(\"data-pm-slice\"));\n  if (!slice) {\n    var parser = view.someProp(\"clipboardParser\") || view.someProp(\"domParser\") || DOMParser.fromSchema(view.state.schema);\n    slice = parser.parseSlice(dom, {\n      preserveWhitespace: !!(asText || sliceData),\n      context: $context,\n      ruleFromNode: function ruleFromNode(dom) {\n        if (dom.nodeName == \"BR\" && !dom.nextSibling &&\n            dom.parentNode && !inlineParents.test(dom.parentNode.nodeName)) { return {ignore: true} }\n      }\n    });\n  }\n  if (sliceData) {\n    slice = addContext(closeSlice(slice, +sliceData[1], +sliceData[2]), sliceData[3]);\n  } else { // HTML wasn't created by ProseMirror. Make sure top-level siblings are coherent\n    slice = Slice.maxOpen(normalizeSiblings(slice.content, $context), true);\n    if (slice.openStart || slice.openEnd) {\n      var openStart = 0, openEnd = 0;\n      for (var node = slice.content.firstChild; openStart < slice.openStart && !node.type.spec.isolating;\n           openStart++, node = node.firstChild) {}\n      for (var node$1 = slice.content.lastChild; openEnd < slice.openEnd && !node$1.type.spec.isolating;\n           openEnd++, node$1 = node$1.lastChild) {}\n      slice = closeSlice(slice, openStart, openEnd);\n    }\n  }\n\n  view.someProp(\"transformPasted\", function (f) { slice = f(slice); });\n  return slice\n}\n\nvar inlineParents = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;\n\n// Takes a slice parsed with parseSlice, which means there hasn't been\n// any content-expression checking done on the top nodes, tries to\n// find a parent node in the current context that might fit the nodes,\n// and if successful, rebuilds the slice so that it fits into that parent.\n//\n// This addresses the problem that Transform.replace expects a\n// coherent slice, and will fail to place a set of siblings that don't\n// fit anywhere in the schema.\nfunction normalizeSiblings(fragment, $context) {\n  if (fragment.childCount < 2) { return fragment }\n  var loop = function ( d ) {\n    var parent = $context.node(d);\n    var match = parent.contentMatchAt($context.index(d));\n    var lastWrap = (void 0), result = [];\n    fragment.forEach(function (node) {\n      if (!result) { return }\n      var wrap = match.findWrapping(node.type), inLast;\n      if (!wrap) { return result = null }\n      if (inLast = result.length && lastWrap.length && addToSibling(wrap, lastWrap, node, result[result.length - 1], 0)) {\n        result[result.length - 1] = inLast;\n      } else {\n        if (result.length) { result[result.length - 1] = closeRight(result[result.length - 1], lastWrap.length); }\n        var wrapped = withWrappers(node, wrap);\n        result.push(wrapped);\n        match = match.matchType(wrapped.type, wrapped.attrs);\n        lastWrap = wrap;\n      }\n    });\n    if (result) { return { v: Fragment.from(result) } }\n  };\n\n  for (var d = $context.depth; d >= 0; d--) {\n    var returned = loop( d );\n\n    if ( returned ) return returned.v;\n  }\n  return fragment\n}\n\nfunction withWrappers(node, wrap, from) {\n  if ( from === void 0 ) from = 0;\n\n  for (var i = wrap.length - 1; i >= from; i--)\n    { node = wrap[i].create(null, Fragment.from(node)); }\n  return node\n}\n\n// Used to group adjacent nodes wrapped in similar parents by\n// normalizeSiblings into the same parent node\nfunction addToSibling(wrap, lastWrap, node, sibling, depth) {\n  if (depth < wrap.length && depth < lastWrap.length && wrap[depth] == lastWrap[depth]) {\n    var inner = addToSibling(wrap, lastWrap, node, sibling.lastChild, depth + 1);\n    if (inner) { return sibling.copy(sibling.content.replaceChild(sibling.childCount - 1, inner)) }\n    var match = sibling.contentMatchAt(sibling.childCount);\n    if (match.matchType(depth == wrap.length - 1 ? node.type : wrap[depth + 1]))\n      { return sibling.copy(sibling.content.append(Fragment.from(withWrappers(node, wrap, depth + 1)))) }\n  }\n}\n\nfunction closeRight(node, depth) {\n  if (depth == 0) { return node }\n  var fragment = node.content.replaceChild(node.childCount - 1, closeRight(node.lastChild, depth - 1));\n  var fill = node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true);\n  return node.copy(fragment.append(fill))\n}\n\nfunction closeRange(fragment, side, from, to, depth, openEnd) {\n  var node = side < 0 ? fragment.firstChild : fragment.lastChild, inner = node.content;\n  if (depth < to - 1) { inner = closeRange(inner, side, from, to, depth + 1, openEnd); }\n  if (depth >= from)\n    { inner = side < 0 ? node.contentMatchAt(0).fillBefore(inner, fragment.childCount > 1 || openEnd <= depth).append(inner)\n      : inner.append(node.contentMatchAt(node.childCount).fillBefore(Fragment.empty, true)); }\n  return fragment.replaceChild(side < 0 ? 0 : fragment.childCount - 1, node.copy(inner))\n}\n\nfunction closeSlice(slice, openStart, openEnd) {\n  if (openStart < slice.openStart)\n    { slice = new Slice(closeRange(slice.content, -1, openStart, slice.openStart, 0, slice.openEnd), openStart, slice.openEnd); }\n  if (openEnd < slice.openEnd)\n    { slice = new Slice(closeRange(slice.content, 1, openEnd, slice.openEnd, 0, 0), slice.openStart, openEnd); }\n  return slice\n}\n\n// Trick from jQuery -- some elements must be wrapped in other\n// elements for innerHTML to work. I.e. if you do `div.innerHTML =\n// \"<td>..</td>\"` the table cells are ignored.\nvar wrapMap = {\n  thead: [\"table\"],\n  tbody: [\"table\"],\n  tfoot: [\"table\"],\n  caption: [\"table\"],\n  colgroup: [\"table\"],\n  col: [\"table\", \"colgroup\"],\n  tr: [\"table\", \"tbody\"],\n  td: [\"table\", \"tbody\", \"tr\"],\n  th: [\"table\", \"tbody\", \"tr\"]\n};\n\nvar _detachedDoc = null;\nfunction detachedDoc() {\n  return _detachedDoc || (_detachedDoc = document.implementation.createHTMLDocument(\"title\"))\n}\n\nfunction readHTML(html) {\n  var metas = /^(\\s*<meta [^>]*>)*/.exec(html);\n  if (metas) { html = html.slice(metas[0].length); }\n  var elt = detachedDoc().createElement(\"div\");\n  var firstTag = /<([a-z][^>\\s]+)/i.exec(html), wrap;\n  if (wrap = firstTag && wrapMap[firstTag[1].toLowerCase()])\n    { html = wrap.map(function (n) { return \"<\" + n + \">\"; }).join(\"\") + html + wrap.map(function (n) { return \"</\" + n + \">\"; }).reverse().join(\"\"); }\n  elt.innerHTML = html;\n  if (wrap) { for (var i = 0; i < wrap.length; i++) { elt = elt.querySelector(wrap[i]) || elt; } }\n  return elt\n}\n\n// Webkit browsers do some hard-to-predict replacement of regular\n// spaces with non-breaking spaces when putting content on the\n// clipboard. This tries to convert such non-breaking spaces (which\n// will be wrapped in a plain span on Chrome, a span with class\n// Apple-converted-space on Safari) back to regular spaces.\nfunction restoreReplacedSpaces(dom) {\n  var nodes = dom.querySelectorAll(result.chrome ? \"span:not([class]):not([style])\" : \"span.Apple-converted-space\");\n  for (var i = 0; i < nodes.length; i++) {\n    var node = nodes[i];\n    if (node.childNodes.length == 1 && node.textContent == \"\\u00a0\" && node.parentNode)\n      { node.parentNode.replaceChild(dom.ownerDocument.createTextNode(\" \"), node); }\n  }\n}\n\nfunction addContext(slice, context) {\n  if (!slice.size) { return slice }\n  var schema = slice.content.firstChild.type.schema, array;\n  try { array = JSON.parse(context); }\n  catch(e) { return slice }\n  var content = slice.content;\n  var openStart = slice.openStart;\n  var openEnd = slice.openEnd;\n  for (var i = array.length - 2; i >= 0; i -= 2) {\n    var type = schema.nodes[array[i]];\n    if (!type || type.hasRequiredAttrs()) { break }\n    content = Fragment.from(type.create(array[i + 1], content));\n    openStart++; openEnd++;\n  }\n  return new Slice(content, openStart, openEnd)\n}\n\nvar observeOptions = {\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  attributes: true,\n  attributeOldValue: true,\n  subtree: true\n};\n// IE11 has very broken mutation observers, so we also listen to DOMCharacterDataModified\nvar useCharData = result.ie && result.ie_version <= 11;\n\nvar SelectionState = function SelectionState() {\n  this.anchorNode = this.anchorOffset = this.focusNode = this.focusOffset = null;\n};\n\nSelectionState.prototype.set = function set (sel) {\n  this.anchorNode = sel.anchorNode; this.anchorOffset = sel.anchorOffset;\n  this.focusNode = sel.focusNode; this.focusOffset = sel.focusOffset;\n};\n\nSelectionState.prototype.eq = function eq (sel) {\n  return sel.anchorNode == this.anchorNode && sel.anchorOffset == this.anchorOffset &&\n    sel.focusNode == this.focusNode && sel.focusOffset == this.focusOffset\n};\n\nvar DOMObserver = function DOMObserver(view, handleDOMChange) {\n  var this$1 = this;\n\n  this.view = view;\n  this.handleDOMChange = handleDOMChange;\n  this.queue = [];\n  this.flushingSoon = -1;\n  this.observer = window.MutationObserver &&\n    new window.MutationObserver(function (mutations) {\n      for (var i = 0; i < mutations.length; i++) { this$1.queue.push(mutations[i]); }\n      // IE11 will sometimes (on backspacing out a single character\n      // text node after a BR node) call the observer callback\n      // before actually updating the DOM, which will cause\n      // ProseMirror to miss the change (see #930)\n      if (result.ie && result.ie_version <= 11 && mutations.some(\n        function (m) { return m.type == \"childList\" && m.removedNodes.length ||\n             m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length; }))\n        { this$1.flushSoon(); }\n      else\n        { this$1.flush(); }\n    });\n  this.currentSelection = new SelectionState;\n  if (useCharData) {\n    this.onCharData = function (e) {\n      this$1.queue.push({target: e.target, type: \"characterData\", oldValue: e.prevValue});\n      this$1.flushSoon();\n    };\n  }\n  this.onSelectionChange = this.onSelectionChange.bind(this);\n  this.suppressingSelectionUpdates = false;\n};\n\nDOMObserver.prototype.flushSoon = function flushSoon () {\n    var this$1 = this;\n\n  if (this.flushingSoon < 0)\n    { this.flushingSoon = window.setTimeout(function () { this$1.flushingSoon = -1; this$1.flush(); }, 20); }\n};\n\nDOMObserver.prototype.forceFlush = function forceFlush () {\n  if (this.flushingSoon > -1) {\n    window.clearTimeout(this.flushingSoon);\n    this.flushingSoon = -1;\n    this.flush();\n  }\n};\n\nDOMObserver.prototype.start = function start () {\n  if (this.observer)\n    { this.observer.observe(this.view.dom, observeOptions); }\n  if (useCharData)\n    { this.view.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData); }\n  this.connectSelection();\n};\n\nDOMObserver.prototype.stop = function stop () {\n    var this$1 = this;\n\n  if (this.observer) {\n    var take = this.observer.takeRecords();\n    if (take.length) {\n      for (var i = 0; i < take.length; i++) { this.queue.push(take[i]); }\n      window.setTimeout(function () { return this$1.flush(); }, 20);\n    }\n    this.observer.disconnect();\n  }\n  if (useCharData) { this.view.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData); }\n  this.disconnectSelection();\n};\n\nDOMObserver.prototype.connectSelection = function connectSelection () {\n  this.view.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n};\n\nDOMObserver.prototype.disconnectSelection = function disconnectSelection () {\n  this.view.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n};\n\nDOMObserver.prototype.suppressSelectionUpdates = function suppressSelectionUpdates () {\n    var this$1 = this;\n\n  this.suppressingSelectionUpdates = true;\n  setTimeout(function () { return this$1.suppressingSelectionUpdates = false; }, 50);\n};\n\nDOMObserver.prototype.onSelectionChange = function onSelectionChange () {\n  if (!hasFocusAndSelection(this.view)) { return }\n  if (this.suppressingSelectionUpdates) { return selectionToDOM(this.view) }\n  // Deletions on IE11 fire their events in the wrong order, giving\n  // us a selection change event before the DOM changes are\n  // reported.\n  if (result.ie && result.ie_version <= 11 && !this.view.state.selection.empty) {\n    var sel = this.view.root.getSelection();\n    // Selection.isCollapsed isn't reliable on IE\n    if (sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n      { return this.flushSoon() }\n  }\n  this.flush();\n};\n\nDOMObserver.prototype.setCurSelection = function setCurSelection () {\n  this.currentSelection.set(this.view.root.getSelection());\n};\n\nDOMObserver.prototype.ignoreSelectionChange = function ignoreSelectionChange (sel) {\n  if (sel.rangeCount == 0) { return true }\n  var container = sel.getRangeAt(0).commonAncestorContainer;\n  var desc = this.view.docView.nearestDesc(container);\n  if (desc && desc.ignoreMutation({type: \"selection\", target: container.nodeType == 3 ? container.parentNode : container})) {\n    this.setCurSelection();\n    return true\n  }\n};\n\nDOMObserver.prototype.flush = function flush () {\n  if (!this.view.docView || this.flushingSoon > -1) { return }\n  var mutations = this.observer ? this.observer.takeRecords() : [];\n  if (this.queue.length) {\n    mutations = this.queue.concat(mutations);\n    this.queue.length = 0;\n  }\n\n  var sel = this.view.root.getSelection();\n  var newSel = !this.suppressingSelectionUpdates && !this.currentSelection.eq(sel) && hasSelection(this.view) && !this.ignoreSelectionChange(sel);\n\n  var from = -1, to = -1, typeOver = false, added = [];\n  if (this.view.editable) {\n    for (var i = 0; i < mutations.length; i++) {\n      var result$1 = this.registerMutation(mutations[i], added);\n      if (result$1) {\n        from = from < 0 ? result$1.from : Math.min(result$1.from, from);\n        to = to < 0 ? result$1.to : Math.max(result$1.to, to);\n        if (result$1.typeOver) { typeOver = true; }\n      }\n    }\n  }\n\n  if (result.gecko && added.length > 1) {\n    var brs = added.filter(function (n) { return n.nodeName == \"BR\"; });\n    if (brs.length == 2) {\n      var a = brs[0];\n        var b = brs[1];\n      if (a.parentNode && a.parentNode.parentNode == b.parentNode) { b.remove(); }\n      else { a.remove(); }\n    }\n  }\n\n  if (from > -1 || newSel) {\n    if (from > -1) {\n      this.view.docView.markDirty(from, to);\n      checkCSS(this.view);\n    }\n    this.handleDOMChange(from, to, typeOver, added);\n    if (this.view.docView && this.view.docView.dirty) { this.view.updateState(this.view.state); }\n    else if (!this.currentSelection.eq(sel)) { selectionToDOM(this.view); }\n    this.currentSelection.set(sel);\n  }\n};\n\nDOMObserver.prototype.registerMutation = function registerMutation (mut, added) {\n  // Ignore mutations inside nodes that were already noted as inserted\n  if (added.indexOf(mut.target) > -1) { return null }\n  var desc = this.view.docView.nearestDesc(mut.target);\n  if (mut.type == \"attributes\" &&\n      (desc == this.view.docView || mut.attributeName == \"contenteditable\" ||\n       // Firefox sometimes fires spurious events for null/empty styles\n       (mut.attributeName == \"style\" && !mut.oldValue && !mut.target.getAttribute(\"style\"))))\n    { return null }\n  if (!desc || desc.ignoreMutation(mut)) { return null }\n\n  if (mut.type == \"childList\") {\n    for (var i = 0; i < mut.addedNodes.length; i++) { added.push(mut.addedNodes[i]); }\n    if (desc.contentDOM && desc.contentDOM != desc.dom && !desc.contentDOM.contains(mut.target))\n      { return {from: desc.posBefore, to: desc.posAfter} }\n    var prev = mut.previousSibling, next = mut.nextSibling;\n    if (result.ie && result.ie_version <= 11 && mut.addedNodes.length) {\n      // IE11 gives us incorrect next/prev siblings for some\n      // insertions, so if there are added nodes, recompute those\n      for (var i$1 = 0; i$1 < mut.addedNodes.length; i$1++) {\n        var ref = mut.addedNodes[i$1];\n          var previousSibling = ref.previousSibling;\n          var nextSibling = ref.nextSibling;\n        if (!previousSibling || Array.prototype.indexOf.call(mut.addedNodes, previousSibling) < 0) { prev = previousSibling; }\n        if (!nextSibling || Array.prototype.indexOf.call(mut.addedNodes, nextSibling) < 0) { next = nextSibling; }\n      }\n    }\n    var fromOffset = prev && prev.parentNode == mut.target\n        ? domIndex(prev) + 1 : 0;\n    var from = desc.localPosFromDOM(mut.target, fromOffset, -1);\n    var toOffset = next && next.parentNode == mut.target\n        ? domIndex(next) : mut.target.childNodes.length;\n    var to = desc.localPosFromDOM(mut.target, toOffset, 1);\n    return {from: from, to: to}\n  } else if (mut.type == \"attributes\") {\n    return {from: desc.posAtStart - desc.border, to: desc.posAtEnd + desc.border}\n  } else { // \"characterData\"\n    return {\n      from: desc.posAtStart,\n      to: desc.posAtEnd,\n      // An event was generated for a text change that didn't change\n      // any text. Mark the dom change to fall back to assuming the\n      // selection was typed over with an identical value if it can't\n      // find another change.\n      typeOver: mut.target.nodeValue == mut.oldValue\n    }\n  }\n};\n\nvar cssChecked = false;\n\nfunction checkCSS(view) {\n  if (cssChecked) { return }\n  cssChecked = true;\n  if (getComputedStyle(view.dom).whiteSpace == \"normal\")\n    { console[\"warn\"](\"ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package.\"); }\n}\n\n// A collection of DOM events that occur within the editor, and callback functions\n// to invoke when the event fires.\nvar handlers = {}, editHandlers = {};\n\nfunction initInput(view) {\n  view.shiftKey = false;\n  view.mouseDown = null;\n  view.lastKeyCode = null;\n  view.lastKeyCodeTime = 0;\n  view.lastClick = {time: 0, x: 0, y: 0, type: \"\"};\n  view.lastSelectionOrigin = null;\n  view.lastSelectionTime = 0;\n\n  view.lastIOSEnter = 0;\n  view.lastIOSEnterFallbackTimeout = null;\n  view.lastAndroidDelete = 0;\n\n  view.composing = false;\n  view.composingTimeout = null;\n  view.compositionNodes = [];\n  view.compositionEndedAt = -2e8;\n\n  view.domObserver = new DOMObserver(view, function (from, to, typeOver, added) { return readDOMChange(view, from, to, typeOver, added); });\n  view.domObserver.start();\n  // Used by hacks like the beforeinput handler to check whether anything happened in the DOM\n  view.domChangeCount = 0;\n\n  view.eventHandlers = Object.create(null);\n  var loop = function ( event ) {\n    var handler = handlers[event];\n    view.dom.addEventListener(event, view.eventHandlers[event] = function (event) {\n      if (eventBelongsToView(view, event) && !runCustomHandler(view, event) &&\n          (view.editable || !(event.type in editHandlers)))\n        { handler(view, event); }\n    });\n  };\n\n  for (var event in handlers) loop( event );\n  // On Safari, for reasons beyond my understanding, adding an input\n  // event handler makes an issue where the composition vanishes when\n  // you press enter go away.\n  if (result.safari) { view.dom.addEventListener(\"input\", function () { return null; }); }\n\n  ensureListeners(view);\n}\n\nfunction setSelectionOrigin(view, origin) {\n  view.lastSelectionOrigin = origin;\n  view.lastSelectionTime = Date.now();\n}\n\nfunction destroyInput(view) {\n  view.domObserver.stop();\n  for (var type in view.eventHandlers)\n    { view.dom.removeEventListener(type, view.eventHandlers[type]); }\n  clearTimeout(view.composingTimeout);\n  clearTimeout(view.lastIOSEnterFallbackTimeout);\n}\n\nfunction ensureListeners(view) {\n  view.someProp(\"handleDOMEvents\", function (currentHandlers) {\n    for (var type in currentHandlers) { if (!view.eventHandlers[type])\n      { view.dom.addEventListener(type, view.eventHandlers[type] = function (event) { return runCustomHandler(view, event); }); } }\n  });\n}\n\nfunction runCustomHandler(view, event) {\n  return view.someProp(\"handleDOMEvents\", function (handlers) {\n    var handler = handlers[event.type];\n    return handler ? handler(view, event) || event.defaultPrevented : false\n  })\n}\n\nfunction eventBelongsToView(view, event) {\n  if (!event.bubbles) { return true }\n  if (event.defaultPrevented) { return false }\n  for (var node = event.target; node != view.dom; node = node.parentNode)\n    { if (!node || node.nodeType == 11 ||\n        (node.pmViewDesc && node.pmViewDesc.stopEvent(event)))\n      { return false } }\n  return true\n}\n\nfunction dispatchEvent(view, event) {\n  if (!runCustomHandler(view, event) && handlers[event.type] &&\n      (view.editable || !(event.type in editHandlers)))\n    { handlers[event.type](view, event); }\n}\n\neditHandlers.keydown = function (view, event) {\n  view.shiftKey = event.keyCode == 16 || event.shiftKey;\n  if (inOrNearComposition(view, event)) { return }\n  view.lastKeyCode = event.keyCode;\n  view.lastKeyCodeTime = Date.now();\n  // Suppress enter key events on Chrome Android, because those tend\n  // to be part of a confused sequence of composition events fired,\n  // and handling them eagerly tends to corrupt the input.\n  if (result.android && result.chrome && event.keyCode == 13) { return }\n  if (event.keyCode != 229) { view.domObserver.forceFlush(); }\n\n  // On iOS, if we preventDefault enter key presses, the virtual\n  // keyboard gets confused. So the hack here is to set a flag that\n  // makes the DOM change code recognize that what just happens should\n  // be replaced by whatever the Enter key handlers do.\n  if (result.ios && event.keyCode == 13 && !event.ctrlKey && !event.altKey && !event.metaKey) {\n    var now = Date.now();\n    view.lastIOSEnter = now;\n    view.lastIOSEnterFallbackTimeout = setTimeout(function () {\n      if (view.lastIOSEnter == now) {\n        view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(13, \"Enter\")); });\n        view.lastIOSEnter = 0;\n      }\n    }, 200);\n  } else if (view.someProp(\"handleKeyDown\", function (f) { return f(view, event); }) || captureKeyDown(view, event)) {\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(view, \"key\");\n  }\n};\n\neditHandlers.keyup = function (view, e) {\n  if (e.keyCode == 16) { view.shiftKey = false; }\n};\n\neditHandlers.keypress = function (view, event) {\n  if (inOrNearComposition(view, event) || !event.charCode ||\n      event.ctrlKey && !event.altKey || result.mac && event.metaKey) { return }\n\n  if (view.someProp(\"handleKeyPress\", function (f) { return f(view, event); })) {\n    event.preventDefault();\n    return\n  }\n\n  var sel = view.state.selection;\n  if (!(sel instanceof TextSelection) || !sel.$from.sameParent(sel.$to)) {\n    var text = String.fromCharCode(event.charCode);\n    if (!view.someProp(\"handleTextInput\", function (f) { return f(view, sel.$from.pos, sel.$to.pos, text); }))\n      { view.dispatch(view.state.tr.insertText(text).scrollIntoView()); }\n    event.preventDefault();\n  }\n};\n\nfunction eventCoords(event) { return {left: event.clientX, top: event.clientY} }\n\nfunction isNear(event, click) {\n  var dx = click.x - event.clientX, dy = click.y - event.clientY;\n  return dx * dx + dy * dy < 100\n}\n\nfunction runHandlerOnContext(view, propName, pos, inside, event) {\n  if (inside == -1) { return false }\n  var $pos = view.state.doc.resolve(inside);\n  var loop = function ( i ) {\n    if (view.someProp(propName, function (f) { return i > $pos.depth ? f(view, pos, $pos.nodeAfter, $pos.before(i), event, true)\n                                                    : f(view, pos, $pos.node(i), $pos.before(i), event, false); }))\n      { return { v: true } }\n  };\n\n  for (var i = $pos.depth + 1; i > 0; i--) {\n    var returned = loop( i );\n\n    if ( returned ) return returned.v;\n  }\n  return false\n}\n\nfunction updateSelection(view, selection, origin) {\n  if (!view.focused) { view.focus(); }\n  var tr = view.state.tr.setSelection(selection);\n  if (origin == \"pointer\") { tr.setMeta(\"pointer\", true); }\n  view.dispatch(tr);\n}\n\nfunction selectClickedLeaf(view, inside) {\n  if (inside == -1) { return false }\n  var $pos = view.state.doc.resolve(inside), node = $pos.nodeAfter;\n  if (node && node.isAtom && NodeSelection.isSelectable(node)) {\n    updateSelection(view, new NodeSelection($pos), \"pointer\");\n    return true\n  }\n  return false\n}\n\nfunction selectClickedNode(view, inside) {\n  if (inside == -1) { return false }\n  var sel = view.state.selection, selectedNode, selectAt;\n  if (sel instanceof NodeSelection) { selectedNode = sel.node; }\n\n  var $pos = view.state.doc.resolve(inside);\n  for (var i = $pos.depth + 1; i > 0; i--) {\n    var node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n    if (NodeSelection.isSelectable(node)) {\n      if (selectedNode && sel.$from.depth > 0 &&\n          i >= sel.$from.depth && $pos.before(sel.$from.depth + 1) == sel.$from.pos)\n        { selectAt = $pos.before(sel.$from.depth); }\n      else\n        { selectAt = $pos.before(i); }\n      break\n    }\n  }\n\n  if (selectAt != null) {\n    updateSelection(view, NodeSelection.create(view.state.doc, selectAt), \"pointer\");\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction handleSingleClick(view, pos, inside, event, selectNode) {\n  return runHandlerOnContext(view, \"handleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleClick\", function (f) { return f(view, pos, event); }) ||\n    (selectNode ? selectClickedNode(view, inside) : selectClickedLeaf(view, inside))\n}\n\nfunction handleDoubleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleDoubleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleDoubleClick\", function (f) { return f(view, pos, event); })\n}\n\nfunction handleTripleClick(view, pos, inside, event) {\n  return runHandlerOnContext(view, \"handleTripleClickOn\", pos, inside, event) ||\n    view.someProp(\"handleTripleClick\", function (f) { return f(view, pos, event); }) ||\n    defaultTripleClick(view, inside, event)\n}\n\nfunction defaultTripleClick(view, inside, event) {\n  if (event.button != 0) { return false }\n  var doc = view.state.doc;\n  if (inside == -1) {\n    if (doc.inlineContent) {\n      updateSelection(view, TextSelection.create(doc, 0, doc.content.size), \"pointer\");\n      return true\n    }\n    return false\n  }\n\n  var $pos = doc.resolve(inside);\n  for (var i = $pos.depth + 1; i > 0; i--) {\n    var node = i > $pos.depth ? $pos.nodeAfter : $pos.node(i);\n    var nodePos = $pos.before(i);\n    if (node.inlineContent)\n      { updateSelection(view, TextSelection.create(doc, nodePos + 1, nodePos + 1 + node.content.size), \"pointer\"); }\n    else if (NodeSelection.isSelectable(node))\n      { updateSelection(view, NodeSelection.create(doc, nodePos), \"pointer\"); }\n    else\n      { continue }\n    return true\n  }\n}\n\nfunction forceDOMFlush(view) {\n  return endComposition(view)\n}\n\nvar selectNodeModifier = result.mac ? \"metaKey\" : \"ctrlKey\";\n\nhandlers.mousedown = function (view, event) {\n  view.shiftKey = event.shiftKey;\n  var flushed = forceDOMFlush(view);\n  var now = Date.now(), type = \"singleClick\";\n  if (now - view.lastClick.time < 500 && isNear(event, view.lastClick) && !event[selectNodeModifier]) {\n    if (view.lastClick.type == \"singleClick\") { type = \"doubleClick\"; }\n    else if (view.lastClick.type == \"doubleClick\") { type = \"tripleClick\"; }\n  }\n  view.lastClick = {time: now, x: event.clientX, y: event.clientY, type: type};\n\n  var pos = view.posAtCoords(eventCoords(event));\n  if (!pos) { return }\n\n  if (type == \"singleClick\") {\n    if (view.mouseDown) { view.mouseDown.done(); }\n    view.mouseDown = new MouseDown(view, pos, event, flushed);\n  } else if ((type == \"doubleClick\" ? handleDoubleClick : handleTripleClick)(view, pos.pos, pos.inside, event)) {\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(view, \"pointer\");\n  }\n};\n\nvar MouseDown = function MouseDown(view, pos, event, flushed) {\n  var this$1 = this;\n\n  this.view = view;\n  this.startDoc = view.state.doc;\n  this.pos = pos;\n  this.event = event;\n  this.flushed = flushed;\n  this.selectNode = event[selectNodeModifier];\n  this.allowDefault = event.shiftKey;\n  this.delayedSelectionSync = false;\n\n  var targetNode, targetPos;\n  if (pos.inside > -1) {\n    targetNode = view.state.doc.nodeAt(pos.inside);\n    targetPos = pos.inside;\n  } else {\n    var $pos = view.state.doc.resolve(pos.pos);\n    targetNode = $pos.parent;\n    targetPos = $pos.depth ? $pos.before() : 0;\n  }\n\n  this.mightDrag = null;\n\n  var target = flushed ? null : event.target;\n  var targetDesc = target ? view.docView.nearestDesc(target, true) : null;\n  this.target = targetDesc ? targetDesc.dom : null;\n\n  var ref = view.state;\n  var selection = ref.selection;\n  if (event.button == 0 &&\n      targetNode.type.spec.draggable && targetNode.type.spec.selectable !== false ||\n      selection instanceof NodeSelection && selection.from <= targetPos && selection.to > targetPos)\n    { this.mightDrag = {node: targetNode,\n                      pos: targetPos,\n                      addAttr: this.target && !this.target.draggable,\n                      setUneditable: this.target && result.gecko && !this.target.hasAttribute(\"contentEditable\")}; }\n\n  if (this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable)) {\n    this.view.domObserver.stop();\n    if (this.mightDrag.addAttr) { this.target.draggable = true; }\n    if (this.mightDrag.setUneditable)\n      { setTimeout(function () {\n        if (this$1.view.mouseDown == this$1) { this$1.target.setAttribute(\"contentEditable\", \"false\"); }\n      }, 20); }\n    this.view.domObserver.start();\n  }\n\n  view.root.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n  view.root.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n  setSelectionOrigin(view, \"pointer\");\n};\n\nMouseDown.prototype.done = function done () {\n    var this$1 = this;\n\n  this.view.root.removeEventListener(\"mouseup\", this.up);\n  this.view.root.removeEventListener(\"mousemove\", this.move);\n  if (this.mightDrag && this.target) {\n    this.view.domObserver.stop();\n    if (this.mightDrag.addAttr) { this.target.removeAttribute(\"draggable\"); }\n    if (this.mightDrag.setUneditable) { this.target.removeAttribute(\"contentEditable\"); }\n    this.view.domObserver.start();\n  }\n  if (this.delayedSelectionSync) { setTimeout(function () { return selectionToDOM(this$1.view); }); }\n  this.view.mouseDown = null;\n};\n\nMouseDown.prototype.up = function up (event) {\n  this.done();\n\n  if (!this.view.dom.contains(event.target.nodeType == 3 ? event.target.parentNode : event.target))\n    { return }\n\n  var pos = this.pos;\n  if (this.view.state.doc != this.startDoc) { pos = this.view.posAtCoords(eventCoords(event)); }\n\n  if (this.allowDefault || !pos) {\n    setSelectionOrigin(this.view, \"pointer\");\n  } else if (handleSingleClick(this.view, pos.pos, pos.inside, event, this.selectNode)) {\n    event.preventDefault();\n  } else if (event.button == 0 &&\n             (this.flushed ||\n              // Safari ignores clicks on draggable elements\n              (result.safari && this.mightDrag && !this.mightDrag.node.isAtom) ||\n              // Chrome will sometimes treat a node selection as a\n              // cursor, but still report that the node is selected\n              // when asked through getSelection. You'll then get a\n              // situation where clicking at the point where that\n              // (hidden) cursor is doesn't change the selection, and\n              // thus doesn't get a reaction from ProseMirror. This\n              // works around that.\n              (result.chrome && !(this.view.state.selection instanceof TextSelection) &&\n               Math.min(Math.abs(pos.pos - this.view.state.selection.from),\n                        Math.abs(pos.pos - this.view.state.selection.to)) <= 2))) {\n    updateSelection(this.view, Selection.near(this.view.state.doc.resolve(pos.pos)), \"pointer\");\n    event.preventDefault();\n  } else {\n    setSelectionOrigin(this.view, \"pointer\");\n  }\n};\n\nMouseDown.prototype.move = function move (event) {\n  if (!this.allowDefault && (Math.abs(this.event.x - event.clientX) > 4 ||\n                             Math.abs(this.event.y - event.clientY) > 4))\n    { this.allowDefault = true; }\n  setSelectionOrigin(this.view, \"pointer\");\n  if (event.buttons == 0) { this.done(); }\n};\n\nhandlers.touchdown = function (view) {\n  forceDOMFlush(view);\n  setSelectionOrigin(view, \"pointer\");\n};\n\nhandlers.contextmenu = function (view) { return forceDOMFlush(view); };\n\nfunction inOrNearComposition(view, event) {\n  if (view.composing) { return true }\n  // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n  // On Japanese input method editors (IMEs), the Enter key is used to confirm character\n  // selection. On Safari, when Enter is pressed, compositionend and keydown events are\n  // emitted. The keydown event triggers newline insertion, which we don't want.\n  // This method returns true if the keydown event should be ignored.\n  // We only ignore it once, as pressing Enter a second time *should* insert a newline.\n  // Furthermore, the keydown event timestamp must be close to the compositionEndedAt timestamp.\n  // This guards against the case where compositionend is triggered without the keyboard\n  // (e.g. character confirmation may be done with the mouse), and keydown is triggered\n  // afterwards- we wouldn't want to ignore the keydown event in this case.\n  if (result.safari && Math.abs(event.timeStamp - view.compositionEndedAt) < 500) {\n    view.compositionEndedAt = -2e8;\n    return true\n  }\n  return false\n}\n\n// Drop active composition after 5 seconds of inactivity on Android\nvar timeoutComposition = result.android ? 5000 : -1;\n\neditHandlers.compositionstart = editHandlers.compositionupdate = function (view) {\n  if (!view.composing) {\n    view.domObserver.flush();\n    var state = view.state;\n    var $pos = state.selection.$from;\n    if (state.selection.empty &&\n        (state.storedMarks ||\n         (!$pos.textOffset && $pos.parentOffset && $pos.nodeBefore.marks.some(function (m) { return m.type.spec.inclusive === false; })))) {\n      // Need to wrap the cursor in mark nodes different from the ones in the DOM context\n      view.markCursor = view.state.storedMarks || $pos.marks();\n      endComposition(view, true);\n      view.markCursor = null;\n    } else {\n      endComposition(view);\n      // In firefox, if the cursor is after but outside a marked node,\n      // the inserted text won't inherit the marks. So this moves it\n      // inside if necessary.\n      if (result.gecko && state.selection.empty && $pos.parentOffset && !$pos.textOffset && $pos.nodeBefore.marks.length) {\n        var sel = view.root.getSelection();\n        for (var node = sel.focusNode, offset = sel.focusOffset; node && node.nodeType == 1 && offset != 0;) {\n          var before = offset < 0 ? node.lastChild : node.childNodes[offset - 1];\n          if (!before) { break }\n          if (before.nodeType == 3) {\n            sel.collapse(before, before.nodeValue.length);\n            break\n          } else {\n            node = before;\n            offset = -1;\n          }\n        }\n      }\n    }\n    view.composing = true;\n  }\n  scheduleComposeEnd(view, timeoutComposition);\n};\n\neditHandlers.compositionend = function (view, event) {\n  if (view.composing) {\n    view.composing = false;\n    view.compositionEndedAt = event.timeStamp;\n    scheduleComposeEnd(view, 20);\n  }\n};\n\nfunction scheduleComposeEnd(view, delay) {\n  clearTimeout(view.composingTimeout);\n  if (delay > -1) { view.composingTimeout = setTimeout(function () { return endComposition(view); }, delay); }\n}\n\nfunction clearComposition(view) {\n  if (view.composing) {\n    view.composing = false;\n    view.compositionEndedAt = timestampFromCustomEvent();\n  }\n  while (view.compositionNodes.length > 0) { view.compositionNodes.pop().markParentsDirty(); }\n}\n\nfunction timestampFromCustomEvent() {\n  var event = document.createEvent(\"Event\");\n  event.initEvent(\"event\", true, true);\n  return event.timeStamp\n}\n\nfunction endComposition(view, forceUpdate) {\n  if (result.android && view.domObserver.flushingSoon >= 0) { return }\n  view.domObserver.forceFlush();\n  clearComposition(view);\n  if (forceUpdate || view.docView && view.docView.dirty) {\n    var sel = selectionFromDOM(view);\n    if (sel && !sel.eq(view.state.selection)) { view.dispatch(view.state.tr.setSelection(sel)); }\n    else { view.updateState(view.state); }\n    return true\n  }\n  return false\n}\n\nfunction captureCopy(view, dom) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  if (!view.dom.parentNode) { return }\n  var wrap = view.dom.parentNode.appendChild(document.createElement(\"div\"));\n  wrap.appendChild(dom);\n  wrap.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  var sel = getSelection(), range = document.createRange();\n  range.selectNodeContents(dom);\n  // Done because IE will fire a selectionchange moving the selection\n  // to its start when removeAllRanges is called and the editor still\n  // has focus (which will mess up the editor's selection state).\n  view.dom.blur();\n  sel.removeAllRanges();\n  sel.addRange(range);\n  setTimeout(function () {\n    if (wrap.parentNode) { wrap.parentNode.removeChild(wrap); }\n    view.focus();\n  }, 50);\n}\n\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nvar brokenClipboardAPI = (result.ie && result.ie_version < 15) ||\n      (result.ios && result.webkit_version < 604);\n\nhandlers.copy = editHandlers.cut = function (view, e) {\n  var sel = view.state.selection, cut = e.type == \"cut\";\n  if (sel.empty) { return }\n\n  // IE and Edge's clipboard interface is completely broken\n  var data = brokenClipboardAPI ? null : e.clipboardData;\n  var slice = sel.content();\n  var ref = serializeForClipboard(view, slice);\n  var dom = ref.dom;\n  var text = ref.text;\n  if (data) {\n    e.preventDefault();\n    data.clearData();\n    data.setData(\"text/html\", dom.innerHTML);\n    data.setData(\"text/plain\", text);\n  } else {\n    captureCopy(view, dom);\n  }\n  if (cut) { view.dispatch(view.state.tr.deleteSelection().scrollIntoView().setMeta(\"uiEvent\", \"cut\")); }\n};\n\nfunction sliceSingleNode(slice) {\n  return slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1 ? slice.content.firstChild : null\n}\n\nfunction capturePaste(view, e) {\n  if (!view.dom.parentNode) { return }\n  var plainText = view.shiftKey || view.state.selection.$from.parent.type.spec.code;\n  var target = view.dom.parentNode.appendChild(document.createElement(plainText ? \"textarea\" : \"div\"));\n  if (!plainText) { target.contentEditable = \"true\"; }\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  target.focus();\n  setTimeout(function () {\n    view.focus();\n    if (target.parentNode) { target.parentNode.removeChild(target); }\n    if (plainText) { doPaste(view, target.value, null, e); }\n    else { doPaste(view, target.textContent, target.innerHTML, e); }\n  }, 50);\n}\n\nfunction doPaste(view, text, html, e) {\n  var slice = parseFromClipboard(view, text, html, view.shiftKey, view.state.selection.$from);\n  if (view.someProp(\"handlePaste\", function (f) { return f(view, e, slice || Slice.empty); })) { return true }\n  if (!slice) { return false }\n\n  var singleNode = sliceSingleNode(slice);\n  var tr = singleNode ? view.state.tr.replaceSelectionWith(singleNode, view.shiftKey) : view.state.tr.replaceSelection(slice);\n  view.dispatch(tr.scrollIntoView().setMeta(\"paste\", true).setMeta(\"uiEvent\", \"paste\"));\n  return true\n}\n\neditHandlers.paste = function (view, e) {\n  // Handling paste from JavaScript during composition is very poorly\n  // handled by browsers, so as a dodgy but preferable kludge, we just\n  // let the browser do its native thing there, except on Android,\n  // where the editor is almost always composing.\n  if (view.composing && !result.android) { return }\n  var data = brokenClipboardAPI ? null : e.clipboardData;\n  if (data && doPaste(view, data.getData(\"text/plain\"), data.getData(\"text/html\"), e)) { e.preventDefault(); }\n  else { capturePaste(view, e); }\n};\n\nvar Dragging = function Dragging(slice, move) {\n  this.slice = slice;\n  this.move = move;\n};\n\nvar dragCopyModifier = result.mac ? \"altKey\" : \"ctrlKey\";\n\nhandlers.dragstart = function (view, e) {\n  var mouseDown = view.mouseDown;\n  if (mouseDown) { mouseDown.done(); }\n  if (!e.dataTransfer) { return }\n\n  var sel = view.state.selection;\n  var pos = sel.empty ? null : view.posAtCoords(eventCoords(e));\n  if (pos && pos.pos >= sel.from && pos.pos <= (sel instanceof NodeSelection ? sel.to - 1: sel.to)) ; else if (mouseDown && mouseDown.mightDrag) {\n    view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, mouseDown.mightDrag.pos)));\n  } else if (e.target && e.target.nodeType == 1) {\n    var desc = view.docView.nearestDesc(e.target, true);\n    if (desc && desc.node.type.spec.draggable && desc != view.docView)\n      { view.dispatch(view.state.tr.setSelection(NodeSelection.create(view.state.doc, desc.posBefore))); }\n  }\n  var slice = view.state.selection.content();\n  var ref = serializeForClipboard(view, slice);\n  var dom = ref.dom;\n  var text = ref.text;\n  e.dataTransfer.clearData();\n  e.dataTransfer.setData(brokenClipboardAPI ? \"Text\" : \"text/html\", dom.innerHTML);\n  // See https://github.com/ProseMirror/prosemirror/issues/1156\n  e.dataTransfer.effectAllowed = \"copyMove\";\n  if (!brokenClipboardAPI) { e.dataTransfer.setData(\"text/plain\", text); }\n  view.dragging = new Dragging(slice, !e[dragCopyModifier]);\n};\n\nhandlers.dragend = function (view) {\n  var dragging = view.dragging;\n  window.setTimeout(function () {\n    if (view.dragging == dragging)  { view.dragging = null; }\n  }, 50);\n};\n\neditHandlers.dragover = editHandlers.dragenter = function (_, e) { return e.preventDefault(); };\n\neditHandlers.drop = function (view, e) {\n  var dragging = view.dragging;\n  view.dragging = null;\n\n  if (!e.dataTransfer) { return }\n\n  var eventPos = view.posAtCoords(eventCoords(e));\n  if (!eventPos) { return }\n  var $mouse = view.state.doc.resolve(eventPos.pos);\n  if (!$mouse) { return }\n  var slice = dragging && dragging.slice;\n  if (slice) {\n    view.someProp(\"transformPasted\", function (f) { slice = f(slice); });\n  } else {\n    slice = parseFromClipboard(view, e.dataTransfer.getData(brokenClipboardAPI ? \"Text\" : \"text/plain\"),\n                               brokenClipboardAPI ? null : e.dataTransfer.getData(\"text/html\"), false, $mouse);\n  }\n  var move = dragging && !e[dragCopyModifier];\n  if (view.someProp(\"handleDrop\", function (f) { return f(view, e, slice || Slice.empty, move); })) {\n    e.preventDefault();\n    return\n  }\n  if (!slice) { return }\n\n  e.preventDefault();\n  var insertPos = slice ? dropPoint(view.state.doc, $mouse.pos, slice) : $mouse.pos;\n  if (insertPos == null) { insertPos = $mouse.pos; }\n\n  var tr = view.state.tr;\n  if (move) { tr.deleteSelection(); }\n\n  var pos = tr.mapping.map(insertPos);\n  var isNode = slice.openStart == 0 && slice.openEnd == 0 && slice.content.childCount == 1;\n  var beforeInsert = tr.doc;\n  if (isNode)\n    { tr.replaceRangeWith(pos, pos, slice.content.firstChild); }\n  else\n    { tr.replaceRange(pos, pos, slice); }\n  if (tr.doc.eq(beforeInsert)) { return }\n\n  var $pos = tr.doc.resolve(pos);\n  if (isNode && NodeSelection.isSelectable(slice.content.firstChild) &&\n      $pos.nodeAfter && $pos.nodeAfter.sameMarkup(slice.content.firstChild)) {\n    tr.setSelection(new NodeSelection($pos));\n  } else {\n    var end = tr.mapping.map(insertPos);\n    tr.mapping.maps[tr.mapping.maps.length - 1].forEach(function (_from, _to, _newFrom, newTo) { return end = newTo; });\n    tr.setSelection(selectionBetween(view, $pos, tr.doc.resolve(end)));\n  }\n  view.focus();\n  view.dispatch(tr.setMeta(\"uiEvent\", \"drop\"));\n};\n\nhandlers.focus = function (view) {\n  if (!view.focused) {\n    view.domObserver.stop();\n    view.dom.classList.add(\"ProseMirror-focused\");\n    view.domObserver.start();\n    view.focused = true;\n    setTimeout(function () {\n      if (view.docView && view.hasFocus() && !view.domObserver.currentSelection.eq(view.root.getSelection()))\n        { selectionToDOM(view); }\n    }, 20);\n  }\n};\n\nhandlers.blur = function (view, e) {\n  if (view.focused) {\n    view.domObserver.stop();\n    view.dom.classList.remove(\"ProseMirror-focused\");\n    view.domObserver.start();\n    if (e.relatedTarget && view.dom.contains(e.relatedTarget))\n      { view.domObserver.currentSelection.set({}); }\n    view.focused = false;\n  }\n};\n\nhandlers.beforeinput = function (view, event) {\n  // We should probably do more with beforeinput events, but support\n  // is so spotty that I'm still waiting to see where they are going.\n\n  // Very specific hack to deal with backspace sometimes failing on\n  // Chrome Android when after an uneditable node.\n  if (result.chrome && result.android && event.inputType == \"deleteContentBackward\") {\n    view.domObserver.flushSoon();\n    var domChangeCount = view.domChangeCount;\n    setTimeout(function () {\n      if (view.domChangeCount != domChangeCount) { return } // Event already had some effect\n      // This bug tends to close the virtual keyboard, so we refocus\n      view.dom.blur();\n      view.focus();\n      if (view.someProp(\"handleKeyDown\", function (f) { return f(view, keyEvent(8, \"Backspace\")); })) { return }\n      var ref = view.state.selection;\n      var $cursor = ref.$cursor;\n      // Crude approximation of backspace behavior when no command handled it\n      if ($cursor && $cursor.pos > 0) { view.dispatch(view.state.tr.delete($cursor.pos - 1, $cursor.pos).scrollIntoView()); }\n    }, 50);\n  }\n};\n\n// Make sure all handlers get registered\nfor (var prop in editHandlers) { handlers[prop] = editHandlers[prop]; }\n\nfunction compareObjs(a, b) {\n  if (a == b) { return true }\n  for (var p in a) { if (a[p] !== b[p]) { return false } }\n  for (var p$1 in b) { if (!(p$1 in a)) { return false } }\n  return true\n}\n\nvar WidgetType = function WidgetType(toDOM, spec) {\n  this.spec = spec || noSpec;\n  this.side = this.spec.side || 0;\n  this.toDOM = toDOM;\n};\n\nWidgetType.prototype.map = function map (mapping, span, offset, oldOffset) {\n  var ref = mapping.mapResult(span.from + oldOffset, this.side < 0 ? -1 : 1);\n    var pos = ref.pos;\n    var deleted = ref.deleted;\n  return deleted ? null : new Decoration(pos - offset, pos - offset, this)\n};\n\nWidgetType.prototype.valid = function valid () { return true };\n\nWidgetType.prototype.eq = function eq (other) {\n  return this == other ||\n    (other instanceof WidgetType &&\n     (this.spec.key && this.spec.key == other.spec.key ||\n      this.toDOM == other.toDOM && compareObjs(this.spec, other.spec)))\n};\n\nWidgetType.prototype.destroy = function destroy (node) {\n  if (this.spec.destroy) { this.spec.destroy(node); }\n};\n\nvar InlineType = function InlineType(attrs, spec) {\n  this.spec = spec || noSpec;\n  this.attrs = attrs;\n};\n\nInlineType.prototype.map = function map (mapping, span, offset, oldOffset) {\n  var from = mapping.map(span.from + oldOffset, this.spec.inclusiveStart ? -1 : 1) - offset;\n  var to = mapping.map(span.to + oldOffset, this.spec.inclusiveEnd ? 1 : -1) - offset;\n  return from >= to ? null : new Decoration(from, to, this)\n};\n\nInlineType.prototype.valid = function valid (_, span) { return span.from < span.to };\n\nInlineType.prototype.eq = function eq (other) {\n  return this == other ||\n    (other instanceof InlineType && compareObjs(this.attrs, other.attrs) &&\n     compareObjs(this.spec, other.spec))\n};\n\nInlineType.is = function is (span) { return span.type instanceof InlineType };\n\nvar NodeType = function NodeType(attrs, spec) {\n  this.spec = spec || noSpec;\n  this.attrs = attrs;\n};\n\nNodeType.prototype.map = function map (mapping, span, offset, oldOffset) {\n  var from = mapping.mapResult(span.from + oldOffset, 1);\n  if (from.deleted) { return null }\n  var to = mapping.mapResult(span.to + oldOffset, -1);\n  if (to.deleted || to.pos <= from.pos) { return null }\n  return new Decoration(from.pos - offset, to.pos - offset, this)\n};\n\nNodeType.prototype.valid = function valid (node, span) {\n  var ref = node.content.findIndex(span.from);\n    var index = ref.index;\n    var offset = ref.offset;\n    var child;\n  return offset == span.from && !(child = node.child(index)).isText && offset + child.nodeSize == span.to\n};\n\nNodeType.prototype.eq = function eq (other) {\n  return this == other ||\n    (other instanceof NodeType && compareObjs(this.attrs, other.attrs) &&\n     compareObjs(this.spec, other.spec))\n};\n\n// ::- Decoration objects can be provided to the view through the\n// [`decorations` prop](#view.EditorProps.decorations). They come in\n// several variants—see the static members of this class for details.\nvar Decoration = function Decoration(from, to, type) {\n  // :: number\n  // The start position of the decoration.\n  this.from = from;\n  // :: number\n  // The end position. Will be the same as `from` for [widget\n  // decorations](#view.Decoration^widget).\n  this.to = to;\n  this.type = type;\n};\n\nvar prototypeAccessors$1 = { spec: { configurable: true },inline: { configurable: true } };\n\nDecoration.prototype.copy = function copy (from, to) {\n  return new Decoration(from, to, this.type)\n};\n\nDecoration.prototype.eq = function eq (other, offset) {\n    if ( offset === void 0 ) offset = 0;\n\n  return this.type.eq(other.type) && this.from + offset == other.from && this.to + offset == other.to\n};\n\nDecoration.prototype.map = function map (mapping, offset, oldOffset) {\n  return this.type.map(mapping, this, offset, oldOffset)\n};\n\n// :: (number, union<(view: EditorView, getPos: () → number) → dom.Node, dom.Node>, ?Object) → Decoration\n// Creates a widget decoration, which is a DOM node that's shown in\n// the document at the given position. It is recommended that you\n// delay rendering the widget by passing a function that will be\n// called when the widget is actually drawn in a view, but you can\n// also directly pass a DOM node. `getPos` can be used to find the\n// widget's current document position.\n//\n// spec::- These options are supported:\n//\n//   side:: ?number\n//   Controls which side of the document position this widget is\n//   associated with. When negative, it is drawn before a cursor\n//   at its position, and content inserted at that position ends\n//   up after the widget. When zero (the default) or positive, the\n//   widget is drawn after the cursor and content inserted there\n//   ends up before the widget.\n//\n//   When there are multiple widgets at a given position, their\n//   `side` values determine the order in which they appear. Those\n//   with lower values appear first. The ordering of widgets with\n//   the same `side` value is unspecified.\n//\n//   When `marks` is null, `side` also determines the marks that\n//   the widget is wrapped in—those of the node before when\n//   negative, those of the node after when positive.\n//\n//   marks:: ?[Mark]\n//   The precise set of marks to draw around the widget.\n//\n//   stopEvent:: ?(event: dom.Event) → bool\n//   Can be used to control which DOM events, when they bubble out\n//   of this widget, the editor view should ignore.\n//\n//   ignoreSelection:: ?bool\n//   When set (defaults to false), selection changes inside the\n//   widget are ignored, and don't cause ProseMirror to try and\n//   re-sync the selection with its selection state.\n//\n//   key:: ?string\n//   When comparing decorations of this type (in order to decide\n//   whether it needs to be redrawn), ProseMirror will by default\n//   compare the widget DOM node by identity. If you pass a key,\n//   that key will be compared instead, which can be useful when\n//   you generate decorations on the fly and don't want to store\n//   and reuse DOM nodes. Make sure that any widgets with the same\n//   key are interchangeable—if widgets differ in, for example,\n//   the behavior of some event handler, they should get\n//   different keys.\n//\n//   destroy:: ?(node: dom.Node)\n//   Called when the widget decoration is removed as a result of\n//   mapping\nDecoration.widget = function widget (pos, toDOM, spec) {\n  return new Decoration(pos, pos, new WidgetType(toDOM, spec))\n};\n\n// :: (number, number, DecorationAttrs, ?Object) → Decoration\n// Creates an inline decoration, which adds the given attributes to\n// each inline node between `from` and `to`.\n//\n// spec::- These options are recognized:\n//\n//   inclusiveStart:: ?bool\n//   Determines how the left side of the decoration is\n//   [mapped](#transform.Position_Mapping) when content is\n//   inserted directly at that position. By default, the decoration\n//   won't include the new content, but you can set this to `true`\n//   to make it inclusive.\n//\n//   inclusiveEnd:: ?bool\n//   Determines how the right side of the decoration is mapped.\n//   See\n//   [`inclusiveStart`](#view.Decoration^inline^spec.inclusiveStart).\nDecoration.inline = function inline (from, to, attrs, spec) {\n  return new Decoration(from, to, new InlineType(attrs, spec))\n};\n\n// :: (number, number, DecorationAttrs, ?Object) → Decoration\n// Creates a node decoration. `from` and `to` should point precisely\n// before and after a node in the document. That node, and only that\n// node, will receive the given attributes.\n//\n// spec::-\n//\n// Optional information to store with the decoration. It\n// is also used when comparing decorators for equality.\nDecoration.node = function node (from, to, attrs, spec) {\n  return new Decoration(from, to, new NodeType(attrs, spec))\n};\n\n// :: Object\n// The spec provided when creating this decoration. Can be useful\n// if you've stored extra information in that object.\nprototypeAccessors$1.spec.get = function () { return this.type.spec };\n\nprototypeAccessors$1.inline.get = function () { return this.type instanceof InlineType };\n\nObject.defineProperties( Decoration.prototype, prototypeAccessors$1 );\n\n// DecorationAttrs:: interface\n// A set of attributes to add to a decorated node. Most properties\n// simply directly correspond to DOM attributes of the same name,\n// which will be set to the property's value. These are exceptions:\n//\n//   class:: ?string\n//   A CSS class name or a space-separated set of class names to be\n//   _added_ to the classes that the node already had.\n//\n//   style:: ?string\n//   A string of CSS to be _added_ to the node's existing `style` property.\n//\n//   nodeName:: ?string\n//   When non-null, the target node is wrapped in a DOM element of\n//   this type (and the other attributes are applied to this element).\n\nvar none = [], noSpec = {};\n\n// :: class extends DecorationSource\n// A collection of [decorations](#view.Decoration), organized in\n// such a way that the drawing algorithm can efficiently use and\n// compare them. This is a persistent data structure—it is not\n// modified, updates create a new value.\nvar DecorationSet = function DecorationSet(local, children) {\n  this.local = local && local.length ? local : none;\n  this.children = children && children.length ? children : none;\n};\n\n// :: (Node, [Decoration]) → DecorationSet\n// Create a set of decorations, using the structure of the given\n// document.\nDecorationSet.create = function create (doc, decorations) {\n  return decorations.length ? buildTree(decorations, doc, 0, noSpec) : empty\n};\n\n// :: (?number, ?number, ?(spec: Object) → bool) → [Decoration]\n// Find all decorations in this set which touch the given range\n// (including decorations that start or end directly at the\n// boundaries) and match the given predicate on their spec. When\n// `start` and `end` are omitted, all decorations in the set are\n// considered. When `predicate` isn't given, all decorations are\n// assumed to match.\nDecorationSet.prototype.find = function find (start, end, predicate) {\n  var result = [];\n  this.findInner(start == null ? 0 : start, end == null ? 1e9 : end, result, 0, predicate);\n  return result\n};\n\nDecorationSet.prototype.findInner = function findInner (start, end, result, offset, predicate) {\n  for (var i = 0; i < this.local.length; i++) {\n    var span = this.local[i];\n    if (span.from <= end && span.to >= start && (!predicate || predicate(span.spec)))\n      { result.push(span.copy(span.from + offset, span.to + offset)); }\n  }\n  for (var i$1 = 0; i$1 < this.children.length; i$1 += 3) {\n    if (this.children[i$1] < end && this.children[i$1 + 1] > start) {\n      var childOff = this.children[i$1] + 1;\n      this.children[i$1 + 2].findInner(start - childOff, end - childOff, result, offset + childOff, predicate);\n    }\n  }\n};\n\n// :: (Mapping, Node, ?Object) → DecorationSet\n// Map the set of decorations in response to a change in the\n// document.\n//\n// options::- An optional set of options.\n//\n//   onRemove:: ?(decorationSpec: Object)\n//   When given, this function will be called for each decoration\n//   that gets dropped as a result of the mapping, passing the\n//   spec of that decoration.\nDecorationSet.prototype.map = function map (mapping, doc, options) {\n  if (this == empty || mapping.maps.length == 0) { return this }\n  return this.mapInner(mapping, doc, 0, 0, options || noSpec)\n};\n\nDecorationSet.prototype.mapInner = function mapInner (mapping, node, offset, oldOffset, options) {\n  var newLocal;\n  for (var i = 0; i < this.local.length; i++) {\n    var mapped = this.local[i].map(mapping, offset, oldOffset);\n    if (mapped && mapped.type.valid(node, mapped)) { (newLocal || (newLocal = [])).push(mapped); }\n    else if (options.onRemove) { options.onRemove(this.local[i].spec); }\n  }\n\n  if (this.children.length)\n    { return mapChildren(this.children, newLocal, mapping, node, offset, oldOffset, options) }\n  else\n    { return newLocal ? new DecorationSet(newLocal.sort(byPos)) : empty }\n};\n\n// :: (Node, [Decoration]) → DecorationSet\n// Add the given array of decorations to the ones in the set,\n// producing a new set. Needs access to the current document to\n// create the appropriate tree structure.\nDecorationSet.prototype.add = function add (doc, decorations) {\n  if (!decorations.length) { return this }\n  if (this == empty) { return DecorationSet.create(doc, decorations) }\n  return this.addInner(doc, decorations, 0)\n};\n\nDecorationSet.prototype.addInner = function addInner (doc, decorations, offset) {\n    var this$1 = this;\n\n  var children, childIndex = 0;\n  doc.forEach(function (childNode, childOffset) {\n    var baseOffset = childOffset + offset, found;\n    if (!(found = takeSpansForNode(decorations, childNode, baseOffset))) { return }\n\n    if (!children) { children = this$1.children.slice(); }\n    while (childIndex < children.length && children[childIndex] < childOffset) { childIndex += 3; }\n    if (children[childIndex] == childOffset)\n      { children[childIndex + 2] = children[childIndex + 2].addInner(childNode, found, baseOffset + 1); }\n    else\n      { children.splice(childIndex, 0, childOffset, childOffset + childNode.nodeSize, buildTree(found, childNode, baseOffset + 1, noSpec)); }\n    childIndex += 3;\n  });\n\n  var local = moveSpans(childIndex ? withoutNulls(decorations) : decorations, -offset);\n  for (var i = 0; i < local.length; i++) { if (!local[i].type.valid(doc, local[i])) { local.splice(i--, 1); } }\n\n  return new DecorationSet(local.length ? this.local.concat(local).sort(byPos) : this.local,\n                           children || this.children)\n};\n\n// :: ([Decoration]) → DecorationSet\n// Create a new set that contains the decorations in this set, minus\n// the ones in the given array.\nDecorationSet.prototype.remove = function remove (decorations) {\n  if (decorations.length == 0 || this == empty) { return this }\n  return this.removeInner(decorations, 0)\n};\n\nDecorationSet.prototype.removeInner = function removeInner (decorations, offset) {\n  var children = this.children, local = this.local;\n  for (var i = 0; i < children.length; i += 3) {\n    var found = (void 0), from = children[i] + offset, to = children[i + 1] + offset;\n    for (var j = 0, span = (void 0); j < decorations.length; j++) { if (span = decorations[j]) {\n      if (span.from > from && span.to < to) {\n        decorations[j] = null\n        ;(found || (found = [])).push(span);\n      }\n    } }\n    if (!found) { continue }\n    if (children == this.children) { children = this.children.slice(); }\n    var removed = children[i + 2].removeInner(found, from + 1);\n    if (removed != empty) {\n      children[i + 2] = removed;\n    } else {\n      children.splice(i, 3);\n      i -= 3;\n    }\n  }\n  if (local.length) { for (var i$1 = 0, span$1 = (void 0); i$1 < decorations.length; i$1++) { if (span$1 = decorations[i$1]) {\n    for (var j$1 = 0; j$1 < local.length; j$1++) { if (local[j$1].eq(span$1, offset)) {\n      if (local == this.local) { local = this.local.slice(); }\n      local.splice(j$1--, 1);\n    } }\n  } } }\n  if (children == this.children && local == this.local) { return this }\n  return local.length || children.length ? new DecorationSet(local, children) : empty\n};\n\nDecorationSet.prototype.forChild = function forChild (offset, node) {\n  if (this == empty) { return this }\n  if (node.isLeaf) { return DecorationSet.empty }\n\n  var child, local;\n  for (var i = 0; i < this.children.length; i += 3) { if (this.children[i] >= offset) {\n    if (this.children[i] == offset) { child = this.children[i + 2]; }\n    break\n  } }\n  var start = offset + 1, end = start + node.content.size;\n  for (var i$1 = 0; i$1 < this.local.length; i$1++) {\n    var dec = this.local[i$1];\n    if (dec.from < end && dec.to > start && (dec.type instanceof InlineType)) {\n      var from = Math.max(start, dec.from) - start, to = Math.min(end, dec.to) - start;\n      if (from < to) { (local || (local = [])).push(dec.copy(from, to)); }\n    }\n  }\n  if (local) {\n    var localSet = new DecorationSet(local.sort(byPos));\n    return child ? new DecorationGroup([localSet, child]) : localSet\n  }\n  return child || empty\n};\n\nDecorationSet.prototype.eq = function eq (other) {\n  if (this == other) { return true }\n  if (!(other instanceof DecorationSet) ||\n      this.local.length != other.local.length ||\n      this.children.length != other.children.length) { return false }\n  for (var i = 0; i < this.local.length; i++)\n    { if (!this.local[i].eq(other.local[i])) { return false } }\n  for (var i$1 = 0; i$1 < this.children.length; i$1 += 3)\n    { if (this.children[i$1] != other.children[i$1] ||\n        this.children[i$1 + 1] != other.children[i$1 + 1] ||\n        !this.children[i$1 + 2].eq(other.children[i$1 + 2])) { return false } }\n  return true\n};\n\nDecorationSet.prototype.locals = function locals (node) {\n  return removeOverlap(this.localsInner(node))\n};\n\nDecorationSet.prototype.localsInner = function localsInner (node) {\n  if (this == empty) { return none }\n  if (node.inlineContent || !this.local.some(InlineType.is)) { return this.local }\n  var result = [];\n  for (var i = 0; i < this.local.length; i++) {\n    if (!(this.local[i].type instanceof InlineType))\n      { result.push(this.local[i]); }\n  }\n  return result\n};\n\n// DecorationSource:: interface\n// An object that can [provide](#view.EditorProps.decorations)\n// decorations. Implemented by [`DecorationSet`](#view.DecorationSet),\n// and passed to [node views](#view.EditorProps.nodeViews).\n//\n//   map:: (Mapping, Node) → DecorationSource\n//   Map the set of decorations in response to a change in the\n//   document.\n\nvar empty = new DecorationSet();\n\n// :: DecorationSet\n// The empty set of decorations.\nDecorationSet.empty = empty;\n\nDecorationSet.removeOverlap = removeOverlap;\n\n// :- An abstraction that allows the code dealing with decorations to\n// treat multiple DecorationSet objects as if it were a single object\n// with (a subset of) the same interface.\nvar DecorationGroup = function DecorationGroup(members) {\n  this.members = members;\n};\n\nDecorationGroup.prototype.map = function map (mapping, doc) {\n  var mappedDecos = this.members.map(\n    function (member) { return member.map(mapping, doc, noSpec); }\n  );\n  return DecorationGroup.from(mappedDecos)\n};\n\nDecorationGroup.prototype.forChild = function forChild (offset, child) {\n  if (child.isLeaf) { return DecorationSet.empty }\n  var found = [];\n  for (var i = 0; i < this.members.length; i++) {\n    var result = this.members[i].forChild(offset, child);\n    if (result == empty) { continue }\n    if (result instanceof DecorationGroup) { found = found.concat(result.members); }\n    else { found.push(result); }\n  }\n  return DecorationGroup.from(found)\n};\n\nDecorationGroup.prototype.eq = function eq (other) {\n  if (!(other instanceof DecorationGroup) ||\n      other.members.length != this.members.length) { return false }\n  for (var i = 0; i < this.members.length; i++)\n    { if (!this.members[i].eq(other.members[i])) { return false } }\n  return true\n};\n\nDecorationGroup.prototype.locals = function locals (node) {\n  var result, sorted = true;\n  for (var i = 0; i < this.members.length; i++) {\n    var locals = this.members[i].localsInner(node);\n    if (!locals.length) { continue }\n    if (!result) {\n      result = locals;\n    } else {\n      if (sorted) {\n        result = result.slice();\n        sorted = false;\n      }\n      for (var j = 0; j < locals.length; j++) { result.push(locals[j]); }\n    }\n  }\n  return result ? removeOverlap(sorted ? result : result.sort(byPos)) : none\n};\n\n// : ([DecorationSet]) → union<DecorationSet, DecorationGroup>\n// Create a group for the given array of decoration sets, or return\n// a single set when possible.\nDecorationGroup.from = function from (members) {\n  switch (members.length) {\n    case 0: return empty\n    case 1: return members[0]\n    default: return new DecorationGroup(members)\n  }\n};\n\nfunction mapChildren(oldChildren, newLocal, mapping, node, offset, oldOffset, options) {\n  var children = oldChildren.slice();\n\n  // Mark the children that are directly touched by changes, and\n  // move those that are after the changes.\n  var shift = function (oldStart, oldEnd, newStart, newEnd) {\n    for (var i = 0; i < children.length; i += 3) {\n      var end = children[i + 1], dSize = (void 0);\n      if (end == -1 || oldStart > end + oldOffset) { continue }\n      if (oldEnd >= children[i] + oldOffset) {\n        children[i + 1] = -1;\n      } else if (newStart >= offset && (dSize = (newEnd - newStart) - (oldEnd - oldStart))) {\n        children[i] += dSize;\n        children[i + 1] += dSize;\n      }\n    }\n  };\n  for (var i = 0; i < mapping.maps.length; i++) { mapping.maps[i].forEach(shift); }\n\n  // Find the child nodes that still correspond to a single node,\n  // recursively call mapInner on them and update their positions.\n  var mustRebuild = false;\n  for (var i$1 = 0; i$1 < children.length; i$1 += 3) { if (children[i$1 + 1] == -1) { // Touched nodes\n    var from = mapping.map(oldChildren[i$1] + oldOffset), fromLocal = from - offset;\n    if (fromLocal < 0 || fromLocal >= node.content.size) {\n      mustRebuild = true;\n      continue\n    }\n    // Must read oldChildren because children was tagged with -1\n    var to = mapping.map(oldChildren[i$1 + 1] + oldOffset, -1), toLocal = to - offset;\n    var ref = node.content.findIndex(fromLocal);\n    var index = ref.index;\n    var childOffset = ref.offset;\n    var childNode = node.maybeChild(index);\n    if (childNode && childOffset == fromLocal && childOffset + childNode.nodeSize == toLocal) {\n      var mapped = children[i$1 + 2].mapInner(mapping, childNode, from + 1, oldChildren[i$1] + oldOffset + 1, options);\n      if (mapped != empty) {\n        children[i$1] = fromLocal;\n        children[i$1 + 1] = toLocal;\n        children[i$1 + 2] = mapped;\n      } else {\n        children[i$1 + 1] = -2;\n        mustRebuild = true;\n      }\n    } else {\n      mustRebuild = true;\n    }\n  } }\n\n  // Remaining children must be collected and rebuilt into the appropriate structure\n  if (mustRebuild) {\n    var decorations = mapAndGatherRemainingDecorations(children, oldChildren, newLocal || [], mapping,\n                                                       offset, oldOffset, options);\n    var built = buildTree(decorations, node, 0, options);\n    newLocal = built.local;\n    for (var i$2 = 0; i$2 < children.length; i$2 += 3) { if (children[i$2 + 1] < 0) {\n      children.splice(i$2, 3);\n      i$2 -= 3;\n    } }\n    for (var i$3 = 0, j = 0; i$3 < built.children.length; i$3 += 3) {\n      var from$1 = built.children[i$3];\n      while (j < children.length && children[j] < from$1) { j += 3; }\n      children.splice(j, 0, built.children[i$3], built.children[i$3 + 1], built.children[i$3 + 2]);\n    }\n  }\n\n  return new DecorationSet(newLocal && newLocal.sort(byPos), children)\n}\n\nfunction moveSpans(spans, offset) {\n  if (!offset || !spans.length) { return spans }\n  var result = [];\n  for (var i = 0; i < spans.length; i++) {\n    var span = spans[i];\n    result.push(new Decoration(span.from + offset, span.to + offset, span.type));\n  }\n  return result\n}\n\nfunction mapAndGatherRemainingDecorations(children, oldChildren, decorations, mapping, offset, oldOffset, options) {\n  // Gather all decorations from the remaining marked children\n  function gather(set, oldOffset) {\n    for (var i = 0; i < set.local.length; i++) {\n      var mapped = set.local[i].map(mapping, offset, oldOffset);\n      if (mapped) { decorations.push(mapped); }\n      else if (options.onRemove) { options.onRemove(set.local[i].spec); }\n    }\n    for (var i$1 = 0; i$1 < set.children.length; i$1 += 3)\n      { gather(set.children[i$1 + 2], set.children[i$1] + oldOffset + 1); }\n  }\n  for (var i = 0; i < children.length; i += 3) { if (children[i + 1] == -1)\n    { gather(children[i + 2], oldChildren[i] + oldOffset + 1); } }\n\n  return decorations\n}\n\nfunction takeSpansForNode(spans, node, offset) {\n  if (node.isLeaf) { return null }\n  var end = offset + node.nodeSize, found = null;\n  for (var i = 0, span = (void 0); i < spans.length; i++) {\n    if ((span = spans[i]) && span.from > offset && span.to < end) {\n(found || (found = [])).push(span);\n      spans[i] = null;\n    }\n  }\n  return found\n}\n\nfunction withoutNulls(array) {\n  var result = [];\n  for (var i = 0; i < array.length; i++)\n    { if (array[i] != null) { result.push(array[i]); } }\n  return result\n}\n\n// : ([Decoration], Node, number) → DecorationSet\n// Build up a tree that corresponds to a set of decorations. `offset`\n// is a base offset that should be subtracted from the `from` and `to`\n// positions in the spans (so that we don't have to allocate new spans\n// for recursive calls).\nfunction buildTree(spans, node, offset, options) {\n  var children = [], hasNulls = false;\n  node.forEach(function (childNode, localStart) {\n    var found = takeSpansForNode(spans, childNode, localStart + offset);\n    if (found) {\n      hasNulls = true;\n      var subtree = buildTree(found, childNode, offset + localStart + 1, options);\n      if (subtree != empty)\n        { children.push(localStart, localStart + childNode.nodeSize, subtree); }\n    }\n  });\n  var locals = moveSpans(hasNulls ? withoutNulls(spans) : spans, -offset).sort(byPos);\n  for (var i = 0; i < locals.length; i++) { if (!locals[i].type.valid(node, locals[i])) {\n    if (options.onRemove) { options.onRemove(locals[i].spec); }\n    locals.splice(i--, 1);\n  } }\n  return locals.length || children.length ? new DecorationSet(locals, children) : empty\n}\n\n// : (Decoration, Decoration) → number\n// Used to sort decorations so that ones with a low start position\n// come first, and within a set with the same start position, those\n// with an smaller end position come first.\nfunction byPos(a, b) {\n  return a.from - b.from || a.to - b.to\n}\n\n// : ([Decoration]) → [Decoration]\n// Scan a sorted array of decorations for partially overlapping spans,\n// and split those so that only fully overlapping spans are left (to\n// make subsequent rendering easier). Will return the input array if\n// no partially overlapping spans are found (the common case).\nfunction removeOverlap(spans) {\n  var working = spans;\n  for (var i = 0; i < working.length - 1; i++) {\n    var span = working[i];\n    if (span.from != span.to) { for (var j = i + 1; j < working.length; j++) {\n      var next = working[j];\n      if (next.from == span.from) {\n        if (next.to != span.to) {\n          if (working == spans) { working = spans.slice(); }\n          // Followed by a partially overlapping larger span. Split that\n          // span.\n          working[j] = next.copy(next.from, span.to);\n          insertAhead(working, j + 1, next.copy(span.to, next.to));\n        }\n        continue\n      } else {\n        if (next.from < span.to) {\n          if (working == spans) { working = spans.slice(); }\n          // The end of this one overlaps with a subsequent span. Split\n          // this one.\n          working[i] = span.copy(span.from, next.from);\n          insertAhead(working, j, span.copy(next.from, span.to));\n        }\n        break\n      }\n    } }\n  }\n  return working\n}\n\nfunction insertAhead(array, i, deco) {\n  while (i < array.length && byPos(deco, array[i]) > 0) { i++; }\n  array.splice(i, 0, deco);\n}\n\n// : (EditorView) → union<DecorationSet, DecorationGroup>\n// Get the decorations associated with the current props of a view.\nfunction viewDecorations(view) {\n  var found = [];\n  view.someProp(\"decorations\", function (f) {\n    var result = f(view.state);\n    if (result && result != empty) { found.push(result); }\n  });\n  if (view.cursorWrapper)\n    { found.push(DecorationSet.create(view.state.doc, [view.cursorWrapper.deco])); }\n  return DecorationGroup.from(found)\n}\n\n// ::- An editor view manages the DOM structure that represents an\n// editable document. Its state and behavior are determined by its\n// [props](#view.DirectEditorProps).\nvar EditorView = function EditorView(place, props) {\n  this._props = props;\n  // :: EditorState\n  // The view's current [state](#state.EditorState).\n  this.state = props.state;\n\n  this.directPlugins = props.plugins || [];\n  this.directPlugins.forEach(checkStateComponent);\n\n  this.dispatch = this.dispatch.bind(this);\n\n  this._root = null;\n  this.focused = false;\n  // Kludge used to work around a Chrome bug\n  this.trackWrites = null;\n\n  // :: dom.Element\n  // An editable DOM node containing the document. (You probably\n  // should not directly interfere with its content.)\n  this.dom = (place && place.mount) || document.createElement(\"div\");\n  if (place) {\n    if (place.appendChild) { place.appendChild(this.dom); }\n    else if (place.apply) { place(this.dom); }\n    else if (place.mount) { this.mounted = true; }\n  }\n\n  // :: bool\n  // Indicates whether the editor is currently [editable](#view.EditorProps.editable).\n  this.editable = getEditable(this);\n  this.markCursor = null;\n  this.cursorWrapper = null;\n  updateCursorWrapper(this);\n  this.nodeViews = buildNodeViews(this);\n  this.docView = docViewDesc(this.state.doc, computeDocDeco(this), viewDecorations(this), this.dom, this);\n\n  this.lastSelectedViewDesc = null;\n  // :: ?{slice: Slice, move: bool}\n  // When editor content is being dragged, this object contains\n  // information about the dragged slice and whether it is being\n  // copied or moved. At any other time, it is null.\n  this.dragging = null;\n\n  initInput(this);\n\n  this.prevDirectPlugins = [];\n  this.pluginViews = [];\n  this.updatePluginViews();\n};\n\nvar prototypeAccessors$2 = { props: { configurable: true },root: { configurable: true },isDestroyed: { configurable: true } };\n\n// composing:: boolean\n// Holds `true` when a\n// [composition](https://developer.mozilla.org/en-US/docs/Mozilla/IME_handling_guide)\n// is active.\n\n// :: DirectEditorProps\n// The view's current [props](#view.EditorProps).\nprototypeAccessors$2.props.get = function () {\n  if (this._props.state != this.state) {\n    var prev = this._props;\n    this._props = {};\n    for (var name in prev) { this._props[name] = prev[name]; }\n    this._props.state = this.state;\n  }\n  return this._props\n};\n\n// :: (DirectEditorProps)\n// Update the view's props. Will immediately cause an update to\n// the DOM.\nEditorView.prototype.update = function update (props) {\n  if (props.handleDOMEvents != this._props.handleDOMEvents) { ensureListeners(this); }\n  this._props = props;\n  if (props.plugins) {\n    props.plugins.forEach(checkStateComponent);\n    this.directPlugins = props.plugins;\n  }\n  this.updateStateInner(props.state, true);\n};\n\n// :: (DirectEditorProps)\n// Update the view by updating existing props object with the object\n// given as argument. Equivalent to `view.update(Object.assign({},\n// view.props, props))`.\nEditorView.prototype.setProps = function setProps (props) {\n  var updated = {};\n  for (var name in this._props) { updated[name] = this._props[name]; }\n  updated.state = this.state;\n  for (var name$1 in props) { updated[name$1] = props[name$1]; }\n  this.update(updated);\n};\n\n// :: (EditorState)\n// Update the editor's `state` prop, without touching any of the\n// other props.\nEditorView.prototype.updateState = function updateState (state) {\n  this.updateStateInner(state, this.state.plugins != state.plugins);\n};\n\nEditorView.prototype.updateStateInner = function updateStateInner (state, reconfigured) {\n    var this$1 = this;\n\n  var prev = this.state, redraw = false, updateSel = false;\n  // When stored marks are added, stop composition, so that they can\n  // be displayed.\n  if (state.storedMarks && this.composing) {\n    clearComposition(this);\n    updateSel = true;\n  }\n  this.state = state;\n  if (reconfigured) {\n    var nodeViews = buildNodeViews(this);\n    if (changedNodeViews(nodeViews, this.nodeViews)) {\n      this.nodeViews = nodeViews;\n      redraw = true;\n    }\n    ensureListeners(this);\n  }\n\n  this.editable = getEditable(this);\n  updateCursorWrapper(this);\n  var innerDeco = viewDecorations(this), outerDeco = computeDocDeco(this);\n\n  var scroll = reconfigured ? \"reset\"\n      : state.scrollToSelection > prev.scrollToSelection ? \"to selection\" : \"preserve\";\n  var updateDoc = redraw || !this.docView.matchesNode(state.doc, outerDeco, innerDeco);\n  if (updateDoc || !state.selection.eq(prev.selection)) { updateSel = true; }\n  var oldScrollPos = scroll == \"preserve\" && updateSel && this.dom.style.overflowAnchor == null && storeScrollPos(this);\n\n  if (updateSel) {\n    this.domObserver.stop();\n    // Work around an issue in Chrome, IE, and Edge where changing\n    // the DOM around an active selection puts it into a broken\n    // state where the thing the user sees differs from the\n    // selection reported by the Selection object (#710, #973,\n    // #1011, #1013, #1035).\n    var forceSelUpdate = updateDoc && (result.ie || result.chrome) && !this.composing &&\n        !prev.selection.empty && !state.selection.empty && selectionContextChanged(prev.selection, state.selection);\n    if (updateDoc) {\n      // If the node that the selection points into is written to,\n      // Chrome sometimes starts misreporting the selection, so this\n      // tracks that and forces a selection reset when our update\n      // did write to the node.\n      var chromeKludge = result.chrome ? (this.trackWrites = this.root.getSelection().focusNode) : null;\n      if (redraw || !this.docView.update(state.doc, outerDeco, innerDeco, this)) {\n        this.docView.updateOuterDeco([]);\n        this.docView.destroy();\n        this.docView = docViewDesc(state.doc, outerDeco, innerDeco, this.dom, this);\n      }\n      if (chromeKludge && !this.trackWrites) { forceSelUpdate = true; }\n    }\n    // Work around for an issue where an update arriving right between\n    // a DOM selection change and the \"selectionchange\" event for it\n    // can cause a spurious DOM selection update, disrupting mouse\n    // drag selection.\n    if (forceSelUpdate ||\n        !(this.mouseDown && this.domObserver.currentSelection.eq(this.root.getSelection()) && anchorInRightPlace(this))) {\n      selectionToDOM(this, forceSelUpdate);\n    } else {\n      syncNodeSelection(this, state.selection);\n      this.domObserver.setCurSelection();\n    }\n    this.domObserver.start();\n  }\n\n  this.updatePluginViews(prev);\n\n  if (scroll == \"reset\") {\n    this.dom.scrollTop = 0;\n  } else if (scroll == \"to selection\") {\n    var startDOM = this.root.getSelection().focusNode;\n    if (this.someProp(\"handleScrollToSelection\", function (f) { return f(this$1); }))\n      ; // Handled\n    else if (state.selection instanceof NodeSelection)\n      { scrollRectIntoView(this, this.docView.domAfterPos(state.selection.from).getBoundingClientRect(), startDOM); }\n    else\n      { scrollRectIntoView(this, this.coordsAtPos(state.selection.head, 1), startDOM); }\n  } else if (oldScrollPos) {\n    resetScrollPos(oldScrollPos);\n  }\n};\n\nEditorView.prototype.destroyPluginViews = function destroyPluginViews () {\n  var view;\n  while (view = this.pluginViews.pop()) { if (view.destroy) { view.destroy(); } }\n};\n\nEditorView.prototype.updatePluginViews = function updatePluginViews (prevState) {\n  if (!prevState || prevState.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {\n    this.prevDirectPlugins = this.directPlugins;\n    this.destroyPluginViews();\n    for (var i = 0; i < this.directPlugins.length; i++) {\n      var plugin = this.directPlugins[i];\n      if (plugin.spec.view) { this.pluginViews.push(plugin.spec.view(this)); }\n    }\n    for (var i$1 = 0; i$1 < this.state.plugins.length; i$1++) {\n      var plugin$1 = this.state.plugins[i$1];\n      if (plugin$1.spec.view) { this.pluginViews.push(plugin$1.spec.view(this)); }\n    }\n  } else {\n    for (var i$2 = 0; i$2 < this.pluginViews.length; i$2++) {\n      var pluginView = this.pluginViews[i$2];\n      if (pluginView.update) { pluginView.update(this, prevState); }\n    }\n  }\n};\n\n// :: (string, ?(prop: *) → *) → *\n// Goes over the values of a prop, first those provided directly,\n// then those from plugins given to the view, then from plugins in\n// the state (in order), and calls `f` every time a non-undefined\n// value is found. When `f` returns a truthy value, that is\n// immediately returned. When `f` isn't provided, it is treated as\n// the identity function (the prop value is returned directly).\nEditorView.prototype.someProp = function someProp (propName, f) {\n  var prop = this._props && this._props[propName], value;\n  if (prop != null && (value = f ? f(prop) : prop)) { return value }\n  for (var i = 0; i < this.directPlugins.length; i++) {\n    var prop$1 = this.directPlugins[i].props[propName];\n    if (prop$1 != null && (value = f ? f(prop$1) : prop$1)) { return value }\n  }\n  var plugins = this.state.plugins;\n  if (plugins) { for (var i$1 = 0; i$1 < plugins.length; i$1++) {\n    var prop$2 = plugins[i$1].props[propName];\n    if (prop$2 != null && (value = f ? f(prop$2) : prop$2)) { return value }\n  } }\n};\n\n// :: () → bool\n// Query whether the view has focus.\nEditorView.prototype.hasFocus = function hasFocus () {\n  return this.root.activeElement == this.dom\n};\n\n// :: ()\n// Focus the editor.\nEditorView.prototype.focus = function focus () {\n  this.domObserver.stop();\n  if (this.editable) { focusPreventScroll(this.dom); }\n  selectionToDOM(this);\n  this.domObserver.start();\n};\n\n// :: union<dom.Document, dom.DocumentFragment>\n// Get the document root in which the editor exists. This will\n// usually be the top-level `document`, but might be a [shadow\n// DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)\n// root if the editor is inside one.\nprototypeAccessors$2.root.get = function () {\n  var cached = this._root;\n  if (cached == null) { for (var search = this.dom.parentNode; search; search = search.parentNode) {\n    if (search.nodeType == 9 || (search.nodeType == 11 && search.host)) {\n      if (!search.getSelection) { Object.getPrototypeOf(search).getSelection = function () { return document.getSelection(); }; }\n      return this._root = search\n    }\n  } }\n  return cached || document\n};\n\n// :: ({left: number, top: number}) → ?{pos: number, inside: number}\n// Given a pair of viewport coordinates, return the document\n// position that corresponds to them. May return null if the given\n// coordinates aren't inside of the editor. When an object is\n// returned, its `pos` property is the position nearest to the\n// coordinates, and its `inside` property holds the position of the\n// inner node that the position falls inside of, or -1 if it is at\n// the top level, not in any node.\nEditorView.prototype.posAtCoords = function posAtCoords$1 (coords) {\n  return posAtCoords(this, coords)\n};\n\n// :: (number, number) → {left: number, right: number, top: number, bottom: number}\n// Returns the viewport rectangle at a given document position.\n// `left` and `right` will be the same number, as this returns a\n// flat cursor-ish rectangle. If the position is between two things\n// that aren't directly adjacent, `side` determines which element is\n// used. When < 0, the element before the position is used,\n// otherwise the element after.\nEditorView.prototype.coordsAtPos = function coordsAtPos$1 (pos, side) {\n    if ( side === void 0 ) side = 1;\n\n  return coordsAtPos(this, pos, side)\n};\n\n// :: (number, number) → {node: dom.Node, offset: number}\n// Find the DOM position that corresponds to the given document\n// position. When `side` is negative, find the position as close as\n// possible to the content before the position. When positive,\n// prefer positions close to the content after the position. When\n// zero, prefer as shallow a position as possible.\n//\n// Note that you should **not** mutate the editor's internal DOM,\n// only inspect it (and even that is usually not necessary).\nEditorView.prototype.domAtPos = function domAtPos (pos, side) {\n    if ( side === void 0 ) side = 0;\n\n  return this.docView.domFromPos(pos, side)\n};\n\n// :: (number) → ?dom.Node\n// Find the DOM node that represents the document node after the\n// given position. May return `null` when the position doesn't point\n// in front of a node or if the node is inside an opaque node view.\n//\n// This is intended to be able to call things like\n// `getBoundingClientRect` on that DOM node. Do **not** mutate the\n// editor DOM directly, or add styling this way, since that will be\n// immediately overriden by the editor as it redraws the node.\nEditorView.prototype.nodeDOM = function nodeDOM (pos) {\n  var desc = this.docView.descAt(pos);\n  return desc ? desc.nodeDOM : null\n};\n\n// :: (dom.Node, number, ?number) → number\n// Find the document position that corresponds to a given DOM\n// position. (Whenever possible, it is preferable to inspect the\n// document structure directly, rather than poking around in the\n// DOM, but sometimes—for example when interpreting an event\n// target—you don't have a choice.)\n//\n// The `bias` parameter can be used to influence which side of a DOM\n// node to use when the position is inside a leaf node.\nEditorView.prototype.posAtDOM = function posAtDOM (node, offset, bias) {\n    if ( bias === void 0 ) bias = -1;\n\n  var pos = this.docView.posFromDOM(node, offset, bias);\n  if (pos == null) { throw new RangeError(\"DOM position not inside the editor\") }\n  return pos\n};\n\n// :: (union<\"up\", \"down\", \"left\", \"right\", \"forward\", \"backward\">, ?EditorState) → bool\n// Find out whether the selection is at the end of a textblock when\n// moving in a given direction. When, for example, given `\"left\"`,\n// it will return true if moving left from the current cursor\n// position would leave that position's parent textblock. Will apply\n// to the view's current state by default, but it is possible to\n// pass a different state.\nEditorView.prototype.endOfTextblock = function endOfTextblock$1 (dir, state) {\n  return endOfTextblock(this, state || this.state, dir)\n};\n\n// :: ()\n// Removes the editor from the DOM and destroys all [node\n// views](#view.NodeView).\nEditorView.prototype.destroy = function destroy () {\n  if (!this.docView) { return }\n  destroyInput(this);\n  this.destroyPluginViews();\n  if (this.mounted) {\n    this.docView.update(this.state.doc, [], viewDecorations(this), this);\n    this.dom.textContent = \"\";\n  } else if (this.dom.parentNode) {\n    this.dom.parentNode.removeChild(this.dom);\n  }\n  this.docView.destroy();\n  this.docView = null;\n};\n\n// :: boolean\n// This is true when the view has been\n// [destroyed](#view.EditorView.destroy) (and thus should not be\n// used anymore).\nprototypeAccessors$2.isDestroyed.get = function () {\n  return this.docView == null\n};\n\n// Used for testing.\nEditorView.prototype.dispatchEvent = function dispatchEvent$1 (event) {\n  return dispatchEvent(this, event)\n};\n\n// :: (Transaction)\n// Dispatch a transaction. Will call\n// [`dispatchTransaction`](#view.DirectEditorProps.dispatchTransaction)\n// when given, and otherwise defaults to applying the transaction to\n// the current state and calling\n// [`updateState`](#view.EditorView.updateState) with the result.\n// This method is bound to the view instance, so that it can be\n// easily passed around.\nEditorView.prototype.dispatch = function dispatch (tr) {\n  var dispatchTransaction = this._props.dispatchTransaction;\n  if (dispatchTransaction) { dispatchTransaction.call(this, tr); }\n  else { this.updateState(this.state.apply(tr)); }\n};\n\nObject.defineProperties( EditorView.prototype, prototypeAccessors$2 );\n\nfunction computeDocDeco(view) {\n  var attrs = Object.create(null);\n  attrs.class = \"ProseMirror\";\n  attrs.contenteditable = String(view.editable);\n  attrs.translate = \"no\";\n\n  view.someProp(\"attributes\", function (value) {\n    if (typeof value == \"function\") { value = value(view.state); }\n    if (value) { for (var attr in value) {\n      if (attr == \"class\")\n        { attrs.class += \" \" + value[attr]; }\n      if (attr == \"style\") {\n        attrs.style = (attrs.style ? attrs.style + \";\" : \"\") + value[attr];\n      }\n      else if (!attrs[attr] && attr != \"contenteditable\" && attr != \"nodeName\")\n        { attrs[attr] = String(value[attr]); }\n    } }\n  });\n\n  return [Decoration.node(0, view.state.doc.content.size, attrs)]\n}\n\nfunction updateCursorWrapper(view) {\n  if (view.markCursor) {\n    var dom = document.createElement(\"img\");\n    dom.className = \"ProseMirror-separator\";\n    dom.setAttribute(\"mark-placeholder\", \"true\");\n    view.cursorWrapper = {dom: dom, deco: Decoration.widget(view.state.selection.head, dom, {raw: true, marks: view.markCursor})};\n  } else {\n    view.cursorWrapper = null;\n  }\n}\n\nfunction getEditable(view) {\n  return !view.someProp(\"editable\", function (value) { return value(view.state) === false; })\n}\n\nfunction selectionContextChanged(sel1, sel2) {\n  var depth = Math.min(sel1.$anchor.sharedDepth(sel1.head), sel2.$anchor.sharedDepth(sel2.head));\n  return sel1.$anchor.start(depth) != sel2.$anchor.start(depth)\n}\n\nfunction buildNodeViews(view) {\n  var result = {};\n  view.someProp(\"nodeViews\", function (obj) {\n    for (var prop in obj) { if (!Object.prototype.hasOwnProperty.call(result, prop))\n      { result[prop] = obj[prop]; } }\n  });\n  return result\n}\n\nfunction changedNodeViews(a, b) {\n  var nA = 0, nB = 0;\n  for (var prop in a) {\n    if (a[prop] != b[prop]) { return true }\n    nA++;\n  }\n  for (var _ in b) { nB++; }\n  return nA != nB\n}\n\nfunction checkStateComponent(plugin) {\n  if (plugin.spec.state || plugin.spec.filterTransaction || plugin.spec.appendTransaction)\n    { throw new RangeError(\"Plugins passed directly to the view must not have a state component\") }\n}\n\n// EditorProps:: interface\n//\n// Props are configuration values that can be passed to an editor view\n// or included in a plugin. This interface lists the supported props.\n//\n// The various event-handling functions may all return `true` to\n// indicate that they handled the given event. The view will then take\n// care to call `preventDefault` on the event, except with\n// `handleDOMEvents`, where the handler itself is responsible for that.\n//\n// How a prop is resolved depends on the prop. Handler functions are\n// called one at a time, starting with the base props and then\n// searching through the plugins (in order of appearance) until one of\n// them returns true. For some props, the first plugin that yields a\n// value gets precedence.\n//\n//   handleDOMEvents:: ?Object<(view: EditorView, event: dom.Event) → bool>\n//   Can be an object mapping DOM event type names to functions that\n//   handle them. Such functions will be called before any handling\n//   ProseMirror does of events fired on the editable DOM element.\n//   Contrary to the other event handling props, when returning true\n//   from such a function, you are responsible for calling\n//   `preventDefault` yourself (or not, if you want to allow the\n//   default behavior).\n//\n//   handleKeyDown:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Called when the editor receives a `keydown` event.\n//\n//   handleKeyPress:: ?(view: EditorView, event: dom.KeyboardEvent) → bool\n//   Handler for `keypress` events.\n//\n//   handleTextInput:: ?(view: EditorView, from: number, to: number, text: string) → bool\n//   Whenever the user directly input text, this handler is called\n//   before the input is applied. If it returns `true`, the default\n//   behavior of actually inserting the text is suppressed.\n//\n//   handleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a click, from the inside out. The\n//   `direct` flag will be true for the inner node.\n//\n//   handleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is clicked, after `handleClickOn` handlers\n//   have been called.\n//\n//   handleDoubleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a double click.\n//\n//   handleDoubleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is double-clicked, after `handleDoubleClickOn`.\n//\n//   handleTripleClickOn:: ?(view: EditorView, pos: number, node: Node, nodePos: number, event: dom.MouseEvent, direct: bool) → bool\n//   Called for each node around a triple click.\n//\n//   handleTripleClick:: ?(view: EditorView, pos: number, event: dom.MouseEvent) → bool\n//   Called when the editor is triple-clicked, after `handleTripleClickOn`.\n//\n//   handlePaste:: ?(view: EditorView, event: dom.ClipboardEvent, slice: Slice) → bool\n//   Can be used to override the behavior of pasting. `slice` is the\n//   pasted content parsed by the editor, but you can directly access\n//   the event to get at the raw content.\n//\n//   handleDrop:: ?(view: EditorView, event: dom.Event, slice: Slice, moved: bool) → bool\n//   Called when something is dropped on the editor. `moved` will be\n//   true if this drop moves from the current selection (which should\n//   thus be deleted).\n//\n//   handleScrollToSelection:: ?(view: EditorView) → bool\n//   Called when the view, after updating its state, tries to scroll\n//   the selection into view. A handler function may return false to\n//   indicate that it did not handle the scrolling and further\n//   handlers or the default behavior should be tried.\n//\n//   createSelectionBetween:: ?(view: EditorView, anchor: ResolvedPos, head: ResolvedPos) → ?Selection\n//   Can be used to override the way a selection is created when\n//   reading a DOM selection between the given anchor and head.\n//\n//   domParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading editor changes\n//   from the DOM. Defaults to calling\n//   [`DOMParser.fromSchema`](#model.DOMParser^fromSchema) on the\n//   editor's schema.\n//\n//   transformPastedHTML:: ?(html: string) → string\n//   Can be used to transform pasted HTML text, _before_ it is parsed,\n//   for example to clean it up.\n//\n//   clipboardParser:: ?DOMParser\n//   The [parser](#model.DOMParser) to use when reading content from\n//   the clipboard. When not given, the value of the\n//   [`domParser`](#view.EditorProps.domParser) prop is used.\n//\n//   transformPastedText:: ?(text: string, plain: bool) → string\n//   Transform pasted plain text. The `plain` flag will be true when\n//   the text is pasted as plain text.\n//\n//   clipboardTextParser:: ?(text: string, $context: ResolvedPos, plain: bool) → Slice\n//   A function to parse text from the clipboard into a document\n//   slice. Called after\n//   [`transformPastedText`](#view.EditorProps.transformPastedText).\n//   The default behavior is to split the text into lines, wrap them\n//   in `<p>` tags, and call\n//   [`clipboardParser`](#view.EditorProps.clipboardParser) on it.\n//   The `plain` flag will be true when the text is pasted as plain text.\n//\n//   transformPasted:: ?(Slice) → Slice\n//   Can be used to transform pasted content before it is applied to\n//   the document.\n//\n//   nodeViews:: ?Object<(node: Node, view: EditorView, getPos: () → number, decorations: [Decoration], innerDecorations: DecorationSource) → NodeView>\n//   Allows you to pass custom rendering and behavior logic for nodes\n//   and marks. Should map node and mark names to constructor\n//   functions that produce a [`NodeView`](#view.NodeView) object\n//   implementing the node's display behavior. For nodes, the third\n//   argument `getPos` is a function that can be called to get the\n//   node's current position, which can be useful when creating\n//   transactions to update it. For marks, the third argument is a\n//   boolean that indicates whether the mark's content is inline.\n//\n//   `decorations` is an array of node or inline decorations that are\n//   active around the node. They are automatically drawn in the\n//   normal way, and you will usually just want to ignore this, but\n//   they can also be used as a way to provide context information to\n//   the node view without adding it to the document itself.\n//\n//   `innerDecorations` holds the decorations for the node's content.\n//   You can safely ignore this if your view has no content or a\n//   `contentDOM` property, since the editor will draw the decorations\n//   on the content. But if you, for example, want to create a nested\n//   editor with the content, it may make sense to provide it with the\n//   inner decorations.\n//\n//   clipboardSerializer:: ?DOMSerializer\n//   The DOM serializer to use when putting content onto the\n//   clipboard. If not given, the result of\n//   [`DOMSerializer.fromSchema`](#model.DOMSerializer^fromSchema)\n//   will be used. This object will only have its\n//   [`serializeFragment`](#model.DOMSerializer.serializeFragment)\n//   method called, and you may provide an alternative object type\n//   implementing a compatible method.\n//\n//   clipboardTextSerializer:: ?(Slice) → string\n//   A function that will be called to get the text for the current\n//   selection when copying text to the clipboard. By default, the\n//   editor will use [`textBetween`](#model.Node.textBetween) on the\n//   selected range.\n//\n//   decorations:: ?(state: EditorState) → ?DecorationSource\n//   A set of [document decorations](#view.Decoration) to show in the\n//   view.\n//\n//   editable:: ?(state: EditorState) → bool\n//   When this returns false, the content of the view is not directly\n//   editable.\n//\n//   attributes:: ?union<Object<string>, (EditorState) → ?Object<string>>\n//   Control the DOM attributes of the editable element. May be either\n//   an object or a function going from an editor state to an object.\n//   By default, the element will get a class `\"ProseMirror\"`, and\n//   will have its `contentEditable` attribute determined by the\n//   [`editable` prop](#view.EditorProps.editable). Additional classes\n//   provided here will be added to the class. For other attributes,\n//   the value provided first (as in\n//   [`someProp`](#view.EditorView.someProp)) will be used.\n//\n//   scrollThreshold:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the distance (in pixels) between the cursor and the\n//   end of the visible viewport at which point, when scrolling the\n//   cursor into view, scrolling takes place. Defaults to 0.\n//\n//   scrollMargin:: ?union<number, {top: number, right: number, bottom: number, left: number}>\n//   Determines the extra space (in pixels) that is left above or\n//   below the cursor when it is scrolled into view. Defaults to 5.\n\n// DirectEditorProps:: interface extends EditorProps\n//\n// The props object given directly to the editor view supports two\n// fields that can't be used in plugins:\n//\n//   state:: EditorState\n//   The current state of the editor.\n//\n//   plugins:: [Plugin]\n//   A set of plugins to use in the view, applying their [plugin\n//   view](#state.PluginSpec.view) and\n//   [props](#state.PluginSpec.props). Passing plugins with a state\n//   component (a [state field](#state.PluginSpec.state) field or a\n//   [transaction](#state.PluginSpec.filterTransaction) filter or\n//   appender) will result in an error, since such plugins must be\n//   present in the state to work.\n//\n//   dispatchTransaction:: ?(tr: Transaction)\n//   The callback over which to send transactions (state updates)\n//   produced by the view. If you specify this, you probably want to\n//   make sure this ends up calling the view's\n//   [`updateState`](#view.EditorView.updateState) method with a new\n//   state that has the transaction\n//   [applied](#state.EditorState.apply). The callback will be bound to have\n//   the view instance as its `this` binding.\n\nexport { Decoration, DecorationSet, EditorView, endComposition as __endComposition, parseFromClipboard as __parseFromClipboard, serializeForClipboard as __serializeForClipboard };\n","var GOOD_LEAF_SIZE = 200;\n\n// :: class<T> A rope sequence is a persistent sequence data structure\n// that supports appending, prepending, and slicing without doing a\n// full copy. It is represented as a mostly-balanced tree.\nvar RopeSequence = function RopeSequence () {};\n\nRopeSequence.prototype.append = function append (other) {\n  if (!other.length) { return this }\n  other = RopeSequence.from(other);\n\n  return (!this.length && other) ||\n    (other.length < GOOD_LEAF_SIZE && this.leafAppend(other)) ||\n    (this.length < GOOD_LEAF_SIZE && other.leafPrepend(this)) ||\n    this.appendInner(other)\n};\n\n// :: (union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Prepend an array or other rope to this one, returning a new rope.\nRopeSequence.prototype.prepend = function prepend (other) {\n  if (!other.length) { return this }\n  return RopeSequence.from(other).append(this)\n};\n\nRopeSequence.prototype.appendInner = function appendInner (other) {\n  return new Append(this, other)\n};\n\n// :: (?number, ?number) → RopeSequence<T>\n// Create a rope repesenting a sub-sequence of this rope.\nRopeSequence.prototype.slice = function slice (from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from >= to) { return RopeSequence.empty }\n  return this.sliceInner(Math.max(0, from), Math.min(this.length, to))\n};\n\n// :: (number) → T\n// Retrieve the element at the given position from this rope.\nRopeSequence.prototype.get = function get (i) {\n  if (i < 0 || i >= this.length) { return undefined }\n  return this.getInner(i)\n};\n\n// :: ((element: T, index: number) → ?bool, ?number, ?number)\n// Call the given function for each element between the given\n// indices. This tends to be more efficient than looping over the\n// indices and calling `get`, because it doesn't have to descend the\n// tree for every element.\nRopeSequence.prototype.forEach = function forEach (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  if (from <= to)\n    { this.forEachInner(f, from, to, 0); }\n  else\n    { this.forEachInvertedInner(f, from, to, 0); }\n};\n\n// :: ((element: T, index: number) → U, ?number, ?number) → [U]\n// Map the given functions over the elements of the rope, producing\n// a flat array.\nRopeSequence.prototype.map = function map (f, from, to) {\n    if ( from === void 0 ) from = 0;\n    if ( to === void 0 ) to = this.length;\n\n  var result = [];\n  this.forEach(function (elt, i) { return result.push(f(elt, i)); }, from, to);\n  return result\n};\n\n// :: (?union<[T], RopeSequence<T>>) → RopeSequence<T>\n// Create a rope representing the given array, or return the rope\n// itself if a rope was given.\nRopeSequence.from = function from (values) {\n  if (values instanceof RopeSequence) { return values }\n  return values && values.length ? new Leaf(values) : RopeSequence.empty\n};\n\nvar Leaf = /*@__PURE__*/(function (RopeSequence) {\n  function Leaf(values) {\n    RopeSequence.call(this);\n    this.values = values;\n  }\n\n  if ( RopeSequence ) Leaf.__proto__ = RopeSequence;\n  Leaf.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Leaf.prototype.constructor = Leaf;\n\n  var prototypeAccessors = { length: { configurable: true },depth: { configurable: true } };\n\n  Leaf.prototype.flatten = function flatten () {\n    return this.values\n  };\n\n  Leaf.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    return new Leaf(this.values.slice(from, to))\n  };\n\n  Leaf.prototype.getInner = function getInner (i) {\n    return this.values[i]\n  };\n\n  Leaf.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    for (var i = from; i < to; i++)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    for (var i = from - 1; i >= to; i--)\n      { if (f(this.values[i], start + i) === false) { return false } }\n  };\n\n  Leaf.prototype.leafAppend = function leafAppend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(this.values.concat(other.flatten())) }\n  };\n\n  Leaf.prototype.leafPrepend = function leafPrepend (other) {\n    if (this.length + other.length <= GOOD_LEAF_SIZE)\n      { return new Leaf(other.flatten().concat(this.values)) }\n  };\n\n  prototypeAccessors.length.get = function () { return this.values.length };\n\n  prototypeAccessors.depth.get = function () { return 0 };\n\n  Object.defineProperties( Leaf.prototype, prototypeAccessors );\n\n  return Leaf;\n}(RopeSequence));\n\n// :: RopeSequence\n// The empty rope sequence.\nRopeSequence.empty = new Leaf([]);\n\nvar Append = /*@__PURE__*/(function (RopeSequence) {\n  function Append(left, right) {\n    RopeSequence.call(this);\n    this.left = left;\n    this.right = right;\n    this.length = left.length + right.length;\n    this.depth = Math.max(left.depth, right.depth) + 1;\n  }\n\n  if ( RopeSequence ) Append.__proto__ = RopeSequence;\n  Append.prototype = Object.create( RopeSequence && RopeSequence.prototype );\n  Append.prototype.constructor = Append;\n\n  Append.prototype.flatten = function flatten () {\n    return this.left.flatten().concat(this.right.flatten())\n  };\n\n  Append.prototype.getInner = function getInner (i) {\n    return i < this.left.length ? this.left.get(i) : this.right.get(i - this.left.length)\n  };\n\n  Append.prototype.forEachInner = function forEachInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from < leftLen &&\n        this.left.forEachInner(f, from, Math.min(to, leftLen), start) === false)\n      { return false }\n    if (to > leftLen &&\n        this.right.forEachInner(f, Math.max(from - leftLen, 0), Math.min(this.length, to) - leftLen, start + leftLen) === false)\n      { return false }\n  };\n\n  Append.prototype.forEachInvertedInner = function forEachInvertedInner (f, from, to, start) {\n    var leftLen = this.left.length;\n    if (from > leftLen &&\n        this.right.forEachInvertedInner(f, from - leftLen, Math.max(to, leftLen) - leftLen, start + leftLen) === false)\n      { return false }\n    if (to < leftLen &&\n        this.left.forEachInvertedInner(f, Math.min(from, leftLen), to, start) === false)\n      { return false }\n  };\n\n  Append.prototype.sliceInner = function sliceInner (from, to) {\n    if (from == 0 && to == this.length) { return this }\n    var leftLen = this.left.length;\n    if (to <= leftLen) { return this.left.slice(from, to) }\n    if (from >= leftLen) { return this.right.slice(from - leftLen, to - leftLen) }\n    return this.left.slice(from, leftLen).append(this.right.slice(0, to - leftLen))\n  };\n\n  Append.prototype.leafAppend = function leafAppend (other) {\n    var inner = this.right.leafAppend(other);\n    if (inner) { return new Append(this.left, inner) }\n  };\n\n  Append.prototype.leafPrepend = function leafPrepend (other) {\n    var inner = this.left.leafPrepend(other);\n    if (inner) { return new Append(inner, this.right) }\n  };\n\n  Append.prototype.appendInner = function appendInner (other) {\n    if (this.left.depth >= Math.max(this.right.depth, other.depth) + 1)\n      { return new Append(this.left, new Append(this.right, other)) }\n    return new Append(this, other)\n  };\n\n  return Append;\n}(RopeSequence));\n\nvar ropeSequence = RopeSequence;\n\nexport default ropeSequence;\n","import { Observable } from '../Observable';\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n","import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n","export enum RequestType {\n  newTool = 1,\n  modifyAndMaintain = 2,\n  tridimCheck = 3\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { RequestService } from '../request.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgramsService {\n\n  constructor(\n    private requestService: RequestService\n  ) { }\n\n  getPrograms() {\n    return this.requestService.createGetRequest(environment.moldingApi + 'programme_avions');\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Tool } from 'src/app/_interface/tool';\nimport { environment } from 'src/environments/environment';\nimport { RequestService } from '../request.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolService {\n\n  constructor(\n    private http: HttpClient,\n    private requestService: RequestService\n  ) { }\n\n  getToolByToolNumber(toolNumber: string) {\n    return new Promise((resolve, reject) => {\n      const httpHeaders = new HttpHeaders()\n        .set('content-type', 'application/json');\n      this.http.get(`${environment.apiServer}molding_tools?sapToolNumber=${toolNumber}`, { headers: httpHeaders })\n        .subscribe((returnsData: any) => {\n          console.log(returnsData);\n          if (returnsData.length === 1) {\n            const returnMoldingTool: Tool = returnsData[0];\n            console.log(returnMoldingTool);\n            resolve(returnMoldingTool);\n          } else if (returnsData.length > 1) {\n            console.log('Il y a plus d\\'un outillage');\n          } else {\n            reject();\n          }\n        },\n          (error) => {\n            console.log(error);\n            reject();\n          });\n    });\n  }\n\n  getAllTools() {\n    return new Promise((resolve, reject) => {\n      const httpHeaders = new HttpHeaders()\n        .append('content-type', 'application/json');\n      // .append('Access-Control-Allow-Origins', 'http://localhost:8100/')\n      // .append('Access-Control-Allow-methods', 'GET, OPTIONS, POST, PUT, PATCH, DELETE');\n      this.http.get(`${environment.apiServer}molding_tools`, { headers: httpHeaders })\n        .subscribe((returnsData: any) => {\n          resolve(returnsData);\n        },\n          (error) => {\n            console.log(error);\n            reject();\n          });\n    });\n  }\n  getIri(moldingTool: Tool): string {\n    return `/api/tools/${moldingTool.id}`;\n  }\n\n  createTool(toolToCreate: Tool) {\n    const tool: any = toolToCreate;\n    tool.sapToolNumber = parseInt(toolToCreate.sapToolNumber.substring(2), 10);\n    return this.requestService.createPostRequest(environment.toolApi + 'tools', tool);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sbo',\n  templateUrl: './sbo.component.html',\n  styleUrls: ['./sbo.component.scss'],\n})\nexport class SboComponent implements OnInit {\n  @Input() spec: any;\n  @Input() tool: any;\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { SboComponent } from './sbo.component';\n\n\n\n@NgModule({\n  declarations: [SboComponent],\n  imports: [\n    CommonModule,\n    IonicModule\n  ],\n  exports: [\n    SboComponent\n  ]\n})\nexport class SboModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePage } from '../../home/home.page';\n\nimport { NewToolPage } from './new-tool.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewToolPage\n  },\n  {\n    path: '**',\n    component: HomePage\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewToolPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { NewToolPageRoutingModule } from './new-tool-routing.module';\nimport { NgxEditorModule } from 'ngx-editor';\nimport { NewToolPage } from './new-tool.page';\nimport { SboModule } from 'src/app/composants/documents-pdf/sbo/sbo.module';\nimport { MatExpansionModule } from '@angular/material/expansion';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewToolPageRoutingModule,\n    ReactiveFormsModule,\n    NgxEditorModule,\n    MatStepperModule,\n    SboModule,\n    MatExpansionModule,\n  ],\n  declarations: [NewToolPage]\n})\nexport class NewToolPageModule { }\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ProgramsService } from 'src/app/_services/programs/programs.service';\nimport { Editor } from 'ngx-editor';\nimport { ToolRequest } from 'src/app/_interface/tool-request';\nimport { UsersService } from 'src/app/_services/users/users.service';\nimport { AuthService } from 'src/app/_services/users/auth.service';\nimport { ToolService } from 'src/app/_services/tools/tool.service';\nimport { Tool } from 'src/app/_interface/tool';\nimport { ToolRequestService } from 'src/app/_services/toolRequest/tool-request.service';\nimport { RequestType } from 'src/app/_enums/request-type';\nimport { MatStepLabel, MatStepper } from '@angular/material/stepper';\nimport { Router } from '@angular/router';\nconst MENU_ITEMS = [\n  {\n    title: 'Nouvelle demande outillage',\n    path: 'new-tool',\n    type: 'button',\n  },\n  {\n    title: 'Liste des demandes outillages',\n    path: '/tool-requests',\n    type: 'button',\n  }\n];\n@Component({\n  selector: 'app-new-tool',\n  templateUrl: './new-tool.page.html',\n  styleUrls: ['./new-tool.page.scss'],\n})\nexport class NewToolPage implements OnInit {\n  public page: any;\n  public requestTypeForm: FormGroup;\n  public newToolForm: FormGroup;\n  public newToolRequestForm: FormGroup;\n  public programs: any[];\n  public editor: Editor;\n  public html: '';\n  requestTypeEnum: typeof RequestType = RequestType;\n  private newTool: Tool;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private programService: ProgramsService,\n    private authService: AuthService,\n    private toolService: ToolService,\n    private userService: UsersService,\n    private toolRequestService: ToolRequestService,\n    private router: Router,\n\n  ) {\n    this.page = {\n      pageTitle: 'Création d\\'une demande',\n      menuTitle: 'Menu outillage',\n      menuItems: MENU_ITEMS,\n      contentId: 'tooling-content'\n    };\n\n    this.programService.getPrograms()\n      .then((programList: any[]) => {\n        this.programs = programList;\n      });\n\n    this.editor = new Editor();\n    this.editor.setContent('html');\n  }\n\n  ngOnInit() {\n    this.newToolForm = this.formBuilder.group({\n      sapToolNumber: new FormControl(),\n      identification: new FormControl(),\n      designation: new FormControl()\n    });\n    this.newToolRequestForm = this.formBuilder.group({\n      aircraftProgram: new FormControl(),\n      title: new FormControl(),\n      description: new FormControl(),\n      needDate: new FormControl()\n    });\n  }\n\n  createToolClick() {\n    // on créé l'OT en BDD\n    this.toolService.createTool({\n      designation: this.newToolForm.value.designation,\n      identification: this.newToolForm.value.identification,\n      sapToolNumber: this.newToolForm.value.sapToolNumber\n    })\n      .then((tool: Tool) => {\n        this.newTool = tool;\n      })\n      .catch(() => {\n        // on affiche une erreur si l'OT n'a pas été créé\n      });\n  }\n\n  createToolRequestClick() {\n    // on créé la toolRequest si l'OT est créé correctement\n    const toolRequest: ToolRequest = {\n      Type: RequestType.newTool,\n      title: this.newToolRequestForm.value.title,\n      Description: this.newToolRequestForm.value.description,\n      DateBesoin: this.newToolRequestForm.value.needDate,\n      CreatedAt: new Date(),\n      Demandeur: this.authService.authUser,\n      ToolSAP: this.toolService.getIri(this.newTool)\n    };\n    // on soummet la toolrequest\n    this.toolRequestService.createToolRequest(toolRequest)\n      .then((toolRequest: ToolRequest) => {\n        // Si la toolRequest est créé\n        this.newToolForm.reset();\n        this.newToolRequestForm.reset();\n        this.router.navigate(['tool-requests']);\n      })\n      .catch(() => {\n        // this.router.navigate(['tool-requests']);\n        // Si la toolRequest nest pas correctement créée\n      });\n  }\n}\n","export default \"<div class=\\\"header\\\">\\n    <ion-grid fixed>\\n        <ion-row>\\n            <ion-col size=\\\"2\\\">\\n                <ion-img class=\\\"ion-hide-sm-down logo\\\" src=\\\"assets/images/logoDaher.png\\\"> </ion-img>\\n            </ion-col>\\n            <ion-col size=\\\"7\\\">\\n                <h3 class=\\\"doc-title\\\">\\n                    Processus « Développer modifier une aérostructure »\\n                </h3>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\">\\n                <div class=\\\"doc-codif\\\">\\n                    F0381#A <br> Doc de rattachement : P0087\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n        <ion-row>\\n            <ion-col size=\\\"3\\\">\\n                <div class=\\\"aircraft-type\\\">\\n                    Type avion : {{spec.controls.aircraftProgram.value}}\\n                </div>\\n            </ion-col>\\n            <ion-col size=\\\"9\\\">\\n                <div class=\\\"sbo-title\\\">\\n                    SPECIFICATION DE BESOIN OUTILLAGE / TOOL REQUIREMENT SPECIFICATION\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n        <ion-row>\\n            <ion-col size=\\\"4\\\">\\n                <div class=\\\"interch\\\">\\n                    Interchangeabilité : Cocher la case correspondante : Interchangeability: Check off the appropriate box:\\n                </div>\\n            </ion-col>\\n            <ion-col size=\\\"8\\\">\\n                <ion-row class=\\\"table\\\">\\n                    <ion-col size=\\\"4\\\">OT SAP : {{tool.controls.sapToolNumber.value}}</ion-col>\\n                    <ion-col size=\\\"4\\\">N° OT Client : </ion-col>\\n                    <ion-col size=\\\"4\\\">OI : DAE-0022-2-4-1</ion-col>\\n                </ion-row>\\n            </ion-col>\\n        </ion-row>\\n    </ion-grid>\\n\\n\\n</div>\\n<div class=\\\"sbo\\\">\\n    <ion-grid fixed class=\\\"data-grid\\\">\\n        <ion-row class=\\\"header-row\\\">\\n            <ion-col size=\\\"1\\\">Ind</ion-col>\\n            <ion-col size=\\\"1\\\">Date</ion-col>\\n            <ion-col size=\\\"2\\\">Nom / Name</ion-col>\\n            <ion-col size=\\\"4\\\">Texte / Text</ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-no-padding ion-no-border\\\">\\n                <ion-row>\\n                    <ion-col size=\\\"12\\\">Temps alloué / Time allowed</ion-col>\\n                </ion-row>\\n                <ion-row>\\n                    <ion-col size=\\\"4\\\">Etude Design\\n                    </ion-col>\\n                    <ion-col size=\\\"4\\\">Prep OT WO preparation\\n                    </ion-col>\\n                    <ion-col size=\\\"4\\\">Réal OT WO execution\\n                    </ion-col>\\n                </ion-row>\\n            </ion-col>\\n            <ion-col size=\\\"1\\\">Délai utilisation Shelf life\\n            </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"data-row\\\">\\n            <ion-col size=\\\"1\\\"></ion-col>\\n            <ion-col size=\\\"1\\\"></ion-col>\\n            <ion-col size=\\\"2\\\"></ion-col>\\n            <ion-col size=\\\"4\\\">\\n                <div class=\\\"title\\\"> {{spec.controls.title.value}}</div>\\n                <div class=\\\"content\\\">{{spec.controls.description.value}}</div>\\n            </ion-col>\\n            <ion-col size=\\\"1\\\"></ion-col>\\n            <ion-col size=\\\"1\\\"></ion-col>\\n            <ion-col size=\\\"1\\\"></ion-col>\\n            <ion-col size=\\\"1\\\">{{spec.controls.needDate.value | date: 'dd/MM/yyyy'}}</ion-col>\\n        </ion-row>\\n    </ion-grid>\\n</div>\\n<div class=\\\"footer\\\">\\n    <div class=\\\"norm\\\">Numérotation outillage suivant normes / Tool numbering as per : NFL 09.101 - NO.OO.OO1 et NO.01 001</div>\\n    <div class=\\\"toolnfl\\\">{{tool.controls.identification.value}}</div>\\n</div>\";","export default \"<!-- <app-shared-user-header [page]=\\\"page\\\"></app-shared-user-header> -->\\n\\n<ion-content color=light>\\n    <mat-accordion class=\\\"example-headers-align\\\" multi>\\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    Définition\\n                </mat-panel-title>\\n                <mat-panel-description>\\n                    Créer ou sélectionner l'outillage\\n                </mat-panel-description>\\n            </mat-expansion-panel-header>\\n            <form [formGroup]=\\\"newToolForm\\\">\\n                <ion-item-group>\\n                    <ion-item>\\n                        <ion-label position=\\\"floating\\\">Numéro d'OT SAP\\n                            <ion-text color=\\\"danger\\\">*</ion-text>\\n                        </ion-label>\\n                        <ion-input required formControlName=\\\"sapToolNumber\\\" type=\\\"text\\\" placeholder=\\\"ex. OT095999\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"floating\\\">Numéro d'identification\\n                            <ion-text color=\\\"danger\\\">*</ion-text>\\n                        </ion-label>\\n                        <ion-input required formControlName=\\\"identification\\\" type=\\\"text\\\" placeholder=\\\"ex. 19900Z01-T700P5522000123\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label position=\\\"floating\\\">Désignation\\n                            <ion-text color=\\\"danger\\\">*</ion-text>\\n                        </ion-label>\\n                        <ion-input required formControlName=\\\"designation\\\" type=\\\"text\\\"></ion-input>\\n                    </ion-item>\\n                </ion-item-group>\\n                <ion-toolbar>\\n                    <ion-button slot=end (click)=\\\"createToolClick()\\\" expand=\\\"block\\\" color=primary>\\n                        Créer l'OT\\n                    </ion-button>\\n                </ion-toolbar>\\n            </form>\\n        </mat-expansion-panel>\\n        <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                    Descritpion\\n                </mat-panel-title>\\n                <mat-panel-description>\\n\\n                </mat-panel-description>\\n            </mat-expansion-panel-header>\\n            <form [formGroup]=\\\"newToolRequestForm\\\">\\n                <ion-item-group>\\n                    <ion-item>\\n                        <ion-label>Programme avion</ion-label>\\n                        <ion-select formControlName=\\\"aircraftProgram\\\" multiple=\\\"true\\\" placeholder=\\\"Sélectionner le programme avion\\\">\\n                            <ion-select-option *ngFor=\\\"let program of programs\\\" [value]=\\\"program.id\\\">\\n                                {{program.Designation}}\\n                            </ion-select-option>\\n                        </ion-select>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label>Titre\\n                            <ion-text color=\\\"danger\\\">*</ion-text>\\n                        </ion-label>\\n                        <ion-input required formControlName=\\\"title\\\"></ion-input>\\n                    </ion-item>\\n                    <ion-item>\\n                        <ion-label>Description\\n                            <ion-text color=\\\"danger\\\">*</ion-text>\\n                        </ion-label>\\n                        <div class=\\\"NgxEditor__Wrapper\\\">\\n                            <ngx-editor-menu [editor]=\\\"editor\\\"> </ngx-editor-menu>\\n                            <ngx-editor [editor]=\\\"editor\\\" [ngModel]=\\\"html\\\" formControlName=\\\"description\\\" [disabled]=\\\"false\\\" [placeholder]=\\\"'Taper la description ici'\\\"></ngx-editor>\\n                        </div>\\n                    </ion-item>\\n\\n                    <ion-item>\\n                        <ion-label>Date\\n                            <ion-text color=\\\"danger\\\">*</ion-text>\\n                        </ion-label>\\n                        <ion-datetime display-format=\\\"DD.MM.YYYY HH:mm\\\" formControlName=\\\"needDate\\\"></ion-datetime>\\n                    </ion-item>\\n                </ion-item-group>\\n            </form>\\n        </mat-expansion-panel>\\n    </mat-accordion>\\n    <app-sbo [spec]=\\\"newToolRequestForm\\\" [tool]=\\\"newToolForm\\\"></app-sbo>\\n</ion-content>\\n<ion-footer>\\n    <ion-toolbar color=\\\"light\\\">\\n        <ion-button [disabled]=\\\"newToolRequestForm.invalid\\\" (click)=\\\"createToolRequestClick()\\\" slot=end expand=\\\"block\\\" color=primary>\\n            Créer la demande\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-footer>\\n\";","function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getBasePlacement(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref) {\n  let {\n    reference,\n    floating,\n    placement\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  let coords;\n\n  switch (getBasePlacement(placement)) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] = coords[mainAxis] - (reference[length] / 2 - floating[length] / 2);\n      break;\n\n    case 'end':\n      coords[mainAxis] = coords[mainAxis] + (reference[length] / 2 - floating[length] / 2);\n      break;\n  }\n\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n\n  {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (middleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n    }\n  }\n\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement({ ...rects,\n    placement\n  });\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let _debug_loop_count_ = 0;\n\n  for (let i = 0; i < middleware.length; i++) {\n    {\n      _debug_loop_count_++;\n\n      if (_debug_loop_count_ > 100) {\n        throw new Error(['Floating UI: The middleware lifecycle appears to be', 'running in an infinite loop. This is usually caused by a `reset`', 'continually being returned without a break condition.'].join(' '));\n      }\n    }\n\n    const {\n      name,\n      fn\n    } = middleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: data != null ? data : {}\n    };\n\n    if (reset) {\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement({ ...rects,\n          placement: statefulPlacement\n        }));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n */\nasync function detectOverflow(middlewareArguments, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingParents',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = await platform.getClippingClientRect({\n    element: (await platform.isElement(element)) ? element : element.contextElement || (await platform.getDocumentElement({\n      element: elements.floating\n    })),\n    boundary,\n    rootBoundary\n  });\n  const elementClientRect = rectToClientRect(await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference,\n    offsetParent: await platform.getOffsetParent({\n      element: elements.floating\n    }),\n    strategy\n  })); // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  return {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const basePlacement = getBasePlacement(placement);\n    const axis = getMainAxisFromPlacement(basePlacement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions({\n      element\n    });\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await platform.getOffsetParent({\n      element\n    });\n    const clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside of the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n    return {\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects) {\n  const isStart = getAlignment(placement) === 'start';\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? isStart ? 'right' : 'left' : isStart ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst basePlacements = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/basePlacements.reduce((acc, basePlacement) => acc.concat(basePlacement, basePlacement + \"-start\", basePlacement + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getBasePlacement(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n\n/**\n * Automatically chooses the `placement` which has the most space available.\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _middlewareData$autoP5, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n\n      if ((_middlewareData$autoP = middlewareData.autoPlacement) != null && _middlewareData$autoP.skip) {\n        return {};\n      }\n\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP2 = (_middlewareData$autoP3 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP3.index) != null ? _middlewareData$autoP2 : 0;\n      const currentPlacement = placements[currentIndex];\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getBasePlacement(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP4 = (_middlewareData$autoP5 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP5.overflows) != null ? _middlewareData$autoP4 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      return {\n        data: {\n          skip: true\n        },\n        reset: {\n          placement: placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement\n        }\n      };\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip, _middlewareData$flip2;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement\n      } = middlewareArguments;\n\n      if ((_middlewareData$flip = middlewareData.flip) != null && _middlewareData$flip.skip) {\n        return {};\n      }\n\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const basePlacement = getBasePlacement(placement);\n      const isBasePlacement = basePlacement === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[basePlacement]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip3;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip3 = middlewareData.flip) == null ? void 0 : _middlewareData$flip3.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$slice$;\n\n              const placement = (_overflowsData$slice$ = overflowsData.slice().sort((a, b) => a.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0) - b.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0))[0]) == null ? void 0 : _overflowsData$slice$.placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        return {\n          data: {\n            skip: true\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return basePlacements.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n */\n\n\nconst hide = () => ({\n  name: 'hide',\n\n  async fn(modifierArguments) {\n    const referenceOverflow = await detectOverflow(modifierArguments, {\n      elementContext: 'reference'\n    });\n    const floatingAltOverflow = await detectOverflow(modifierArguments, {\n      altBoundary: true\n    });\n    const referenceHiddenOffsets = getSideOffsets(referenceOverflow, modifierArguments.rects.reference);\n    const escapedOffsets = getSideOffsets(floatingAltOverflow, modifierArguments.rects.floating);\n    const referenceHidden = isAnySideFullyClipped(referenceHiddenOffsets);\n    const escaped = isAnySideFullyClipped(escapedOffsets);\n    return {\n      data: {\n        referenceHidden,\n        referenceHiddenOffsets,\n        escaped,\n        escapedOffsets\n      }\n    };\n  }\n\n});\n\nfunction convertValueToCoords(_ref) {\n  let {\n    placement,\n    rects,\n    value\n  } = _ref;\n  const basePlacement = getBasePlacement(placement);\n  const multiplier = ['left', 'top'].includes(basePlacement) ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value({ ...rects,\n    placement\n  }) : value;\n  const {\n    mainAxis,\n    crossAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    ...rawValue\n  };\n  return getMainAxisFromPlacement(basePlacement) === 'x' ? {\n    x: crossAxis,\n    y: mainAxis * multiplier\n  } : {\n    x: mainAxis * multiplier,\n    y: crossAxis\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n */\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects\n      } = middlewareArguments;\n      const diffCoords = convertValueToCoords({\n        placement,\n        rects,\n        value\n      });\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getBasePlacement(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset({ ...rects,\n        placement\n      }) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getBasePlacement(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$size;\n\n      const {\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        apply,\n        ...detectOverflowOptions\n      } = options;\n\n      if ((_middlewareData$size = middlewareData.size) != null && _middlewareData$size.skip) {\n        return {};\n      }\n\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const basePlacement = getBasePlacement(placement);\n      const isEnd = getAlignment(placement) === 'end';\n      let heightSide;\n      let widthSide;\n\n      if (basePlacement === 'top' || basePlacement === 'bottom') {\n        heightSide = basePlacement;\n        widthSide = isEnd ? 'left' : 'right';\n      } else {\n        widthSide = basePlacement;\n        heightSide = isEnd ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        height: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        width: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      apply == null ? void 0 : apply({ ...dimensions,\n        ...rects\n      });\n      return {\n        data: {\n          skip: true\n        },\n        reset: {\n          rects: true\n        }\n      };\n    }\n\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$inlin, _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy,\n        middlewareData\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n\n      if ((_middlewareData$inlin = middlewareData.inline) != null && _middlewareData$inlin.skip) {\n        return {};\n      }\n\n      const fallback = rectToClientRect(await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await platform.getOffsetParent({\n          element: elements.floating\n        }),\n        strategy\n      }));\n      const clientRects = Array.from((_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects({\n        element: elements.reference\n      }))) != null ? _await$platform$getCl : []);\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find;\n\n          // Find the first rect in which the point is fully inside\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getBasePlacement(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftPlacement = getBasePlacement(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftPlacement ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      return {\n        data: {\n          skip: true\n        },\n        reset: {\n          rects: await platform.getElementRects({\n            reference: {\n              getBoundingClientRect\n            },\n            floating: elements.floating,\n            strategy\n          })\n        }\n      };\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n","import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return (value == null ? void 0 : value.toString()) === '[object Window]';\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = navigator.userAgent.toLowerCase().includes('firefox');\n  const css = getComputedStyle$1(element); // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].includes(css.willChange) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false);\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  return {\n    width: clientRect.width / scaleX,\n    height: clientRect.height / scaleY,\n    top: clientRect.top / scaleY,\n    right: clientRect.right / scaleX,\n    bottom: clientRect.bottom / scaleY,\n    left: clientRect.left / scaleX,\n    x: clientRect.left / scaleX,\n    y: clientRect.top / scaleY\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isWindow(element)) {\n    return {\n      scrollLeft: element.pageXOffset,\n      scrollTop: element.pageYOffset\n    };\n  }\n\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, isOffsetParentAnElement && isScaled(offsetParent));\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // @ts-ignore\n    node.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    node.parentNode || ( // DOM Element detected\n    isShadowRoot(node) ? node.host : null) || // ShadowRoot detected\n    getDocumentElement(node) // fallback\n\n  );\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !['html', 'body'].includes(getNodeName(currentNode))) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  return {\n    width: element.offsetWidth,\n    height: element.offsetHeight\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height; // Uses Layout Viewport (like Chrome; Safari does not currently)\n    // In Chrome, it returns a value very close to 0 (+/-) but contains rounding\n    // errors due to floating point numbers, so we need to check precision.\n    // Safari returns a number <= 0, usually < -1 when pinch-zoomed\n\n    if (Math.abs(win.innerWidth / visualViewport.scale - visualViewport.width) < 0.01) {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getScrollParent(node) {\n  if (['html', 'body', '#document'].includes(getNodeName(node))) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}\n\nfunction getScrollParents(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollParent = getScrollParent(node);\n  const isBody = scrollParent === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollParent);\n  const target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getScrollParents(getParentNode(target)));\n}\n\nfunction contains(parent, child) {\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n\n    do {\n      // use `===` replace node.isSameNode()\n      if (next && parent === next) {\n        return true;\n      } // @ts-ignore: need a better way to handle this...\n\n\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  return false;\n}\n\nfunction getInnerBoundingClientRect(element) {\n  const clientRect = getBoundingClientRect(element);\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingParent(element, clippingParent) {\n  if (clippingParent === 'viewport') {\n    return rectToClientRect(getViewportRect(element));\n  }\n\n  if (isElement(clippingParent)) {\n    return getInnerBoundingClientRect(clippingParent);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  const clippingParents = getScrollParents(getParentNode(element));\n  const canEscapeClipping = ['absolute', 'fixed'].includes(getComputedStyle$1(element).position);\n  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // @ts-ignore isElement check ensures we return Array<Element>\n\n\n  return clippingParents.filter(clippingParent => isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body');\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nfunction getClippingClientRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary\n  } = _ref;\n  const mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  const clippingParents = [...mainClippingParents, rootBoundary];\n  const firstClippingParent = clippingParents[0];\n  const clippingRect = clippingParents.reduce((accRect, clippingParent) => {\n    const rect = getClientRectFromClippingParent(element, clippingParent);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingParent(element, firstClippingParent));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}\n\nconst platform = {\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  convertOffsetParentRelativeRectToViewportRelativeRect: args => convertOffsetParentRelativeRectToViewportRelativeRect(args),\n  getOffsetParent: _ref2 => {\n    let {\n      element\n    } = _ref2;\n    return getOffsetParent(element);\n  },\n  isElement: value => isElement(value),\n  getDocumentElement: _ref3 => {\n    let {\n      element\n    } = _ref3;\n    return getDocumentElement(element);\n  },\n  getClippingClientRect: args => getClippingClientRect(args),\n  getDimensions: _ref4 => {\n    let {\n      element\n    } = _ref4;\n    return getDimensions(element);\n  },\n  getClientRects: _ref5 => {\n    let {\n      element\n    } = _ref5;\n    return element.getClientRects();\n  }\n};\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { computePosition, getScrollParents };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, EventEmitter, forwardRef, TemplateRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, ContentChild, ViewChild, Input, Output, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepHeader, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: CdkStepHeader, selector: \"[cdkStepHeader]\", host: { attributes: { \"role\": \"tab\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepHeader, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepHeader]',\n                    host: {\n                        'role': 'tab',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepLabel, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: CdkStepLabel, selector: \"[cdkStepLabel]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepLabel]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error',\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\nclass CdkStep {\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has attempted to move away from the step. */\n        this.interacted = false;\n        /** Emits when the user has attempted to move away from the step. */\n        this.interactedStream = new EventEmitter();\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n    _markAsInteracted() {\n        if (!this.interacted) {\n            this.interacted = true;\n            this.interactedStream.emit(this);\n        }\n    }\n    /** Determines whether the error state can be shown. */\n    _showError() {\n        // We want to show the error state either if the user opted into/out of it using the\n        // global options, or if they've explicitly set it through the `hasError` input.\n        return this._stepperOptions.showError ?? this._customError != null;\n    }\n}\nCdkStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStep, deps: [{ token: forwardRef(() => CdkStepper) }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkStep.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: CdkStep, selector: \"cdk-step\", inputs: { stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\", editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\" }, outputs: { interactedStream: \"interacted\" }, queries: [{ propertyName: \"stepLabel\", first: true, predicate: CdkStepLabel, descendants: true }], viewQueries: [{ propertyName: \"content\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"cdkStep\"], usesOnChanges: true, ngImport: i0, template: '<ng-template><ng-content></ng-content></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStep, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-step',\n                    exportAs: 'cdkStep',\n                    template: '<ng-template><ng-content></ng-content></ng-template>',\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => CdkStepper)]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }]; }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [CdkStepLabel]\n            }], content: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], stepControl: [{\n                type: Input\n            }], interactedStream: [{\n                type: Output,\n                args: ['interacted']\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], state: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], completed: [{\n                type: Input\n            }], hasError: [{\n                type: Input\n            }] } });\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, _elementRef, \n    /**\n     * @deprecated No longer in use, to be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** List of step headers sorted based on their DOM order. */\n        this._sortedHeaders = new QueryList();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * @deprecated To be turned into a private property. Use `orientation` instead.\n         * @breaking-change 13.0.0\n         */\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps && this._steps) {\n            // Ensure that the index can't be out of bounds.\n            if (!this._isValidIndex(newIndex) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            this.selected?._markAsInteracted();\n            if (this._selectedIndex !== newIndex &&\n                !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(newIndex);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = step && this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /** Orientation of the stepper. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(value) {\n        // This is a protected method so that `MatSteppter` can hook into it.\n        this._orientation = value;\n        if (this._keyManager) {\n            this._keyManager.withVerticalOrientation(value === 'vertical');\n        }\n    }\n    ngAfterContentInit() {\n        this._steps.changes\n            .pipe(startWith(this._steps), takeUntil(this._destroyed))\n            .subscribe((steps) => {\n            this.steps.reset(steps.filter(step => step._stepper === this));\n            this.steps.notifyOnChanges();\n        });\n    }\n    ngAfterViewInit() {\n        // If the step headers are defined outside of the `ngFor` that renders the steps, like in the\n        // Material stepper, they won't appear in the `QueryList` in the same order as they're\n        // rendered in the DOM which will lead to incorrect keyboard navigation. We need to sort\n        // them manually to ensure that they're correct. Alternatively, we can change the Material\n        // template to inline the headers in the `ngFor`, but that'll result in a lot of\n        // code duplciation. See #23539.\n        this._stepHeader.changes\n            .pipe(startWith(this._stepHeader), takeUntil(this._destroyed))\n            .subscribe((headers) => {\n            this._sortedHeaders.reset(headers.toArray().sort((a, b) => {\n                const documentPosition = a._elementRef.nativeElement.compareDocumentPosition(b._elementRef.nativeElement);\n                // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n                // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n                // tslint:disable-next-line:no-bitwise\n                return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n            }));\n            this._sortedHeaders.notifyOnChanges();\n        });\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._sortedHeaders)\n            .withWrap()\n            .withHomeAndEnd()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // No need to `takeUntil` here, because we're the ones destroying `steps`.\n        this.steps.changes.subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n        // The logic which asserts that the selected index is within bounds doesn't run before the\n        // steps are initialized, because we don't how many steps there are yet so we may have an\n        // invalid index on init. If that's the case, auto-correct to the default so we don't throw.\n        if (!this._isValidIndex(this._selectedIndex)) {\n            this._selectedIndex = 0;\n        }\n    }\n    ngOnDestroy() {\n        this.steps.destroy();\n        this._sortedHeaders.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType\n            ? this._getDefaultIndicatorLogic(step, isCurrentStep)\n            : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError() && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus()\n            ? this._keyManager.setActiveItem(newIndex)\n            : this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null &&\n            !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        if (this._linear && index >= 0) {\n            return this.steps\n                .toArray()\n                .slice(0, index)\n                .some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control\n                    ? control.invalid || control.pending || !step.interacted\n                    : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = _getFocusedElementPierceShadowDom();\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n    /** Checks whether the passed-in index is a valid step index. */\n    _isValidIndex(index) {\n        return index > -1 && (!this.steps || index < this.steps.length);\n    }\n}\nCdkStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepper, deps: [{ token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: CdkStepper, selector: \"[cdkStepper]\", inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\", orientation: \"orientation\" }, outputs: { selectionChange: \"selectionChange\" }, queries: [{ propertyName: \"_steps\", predicate: CdkStep, descendants: true }, { propertyName: \"_stepHeader\", predicate: CdkStepHeader, descendants: true }], exportAs: [\"cdkStepper\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkStepper]',\n                    exportAs: 'cdkStepper',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _steps: [{\n                type: ContentChildren,\n                args: [CdkStep, { descendants: true }]\n            }], _stepHeader: [{\n                type: ContentChildren,\n                args: [CdkStepHeader, { descendants: true }]\n            }], linear: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], selectionChange: [{\n                type: Output\n            }], orientation: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n}\nCdkStepperNext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepperNext, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperNext.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: CdkStepperNext, selector: \"button[cdkStepperNext]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.next()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperNext]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.next()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n}\nCdkStepperPrevious.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepperPrevious, deps: [{ token: CdkStepper }], target: i0.ɵɵFactoryTarget.Directive });\nCdkStepperPrevious.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: CdkStepperPrevious, selector: \"button[cdkStepperPrevious]\", inputs: { type: \"type\" }, host: { listeners: { \"click\": \"_stepper.previous()\" }, properties: { \"type\": \"type\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[cdkStepperPrevious]',\n                    host: {\n                        '[type]': 'type',\n                        '(click)': '_stepper.previous()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkStepper }]; }, propDecorators: { type: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepperModule, declarations: [CdkStep,\n        CdkStepper,\n        CdkStepHeader,\n        CdkStepLabel,\n        CdkStepperNext,\n        CdkStepperPrevious], imports: [BidiModule], exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious] });\nCdkStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepperModule, imports: [[BidiModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: CdkStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n                    declarations: [\n                        CdkStep,\n                        CdkStepper,\n                        CdkStepHeader,\n                        CdkStepLabel,\n                        CdkStepperNext,\n                        CdkStepperPrevious,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\nconst _MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n})));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatButton, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, host: { properties: { \"attr.disabled\": \"disabled || null\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-button-disabled\": \"disabled\" }, classAttribute: \"mat-focus-indicator\" }, viewQueries: [{ propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matButton\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`, exportAs: 'matButton', host: {\n                        '[attr.disabled]': 'disabled || null',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        // Add a class for disabled button styling instead of the using attribute\n                        // selector or pseudo-selector.  This allows users to create focusabled\n                        // disabled buttons without recreating the styles.\n                        '[class.mat-button-disabled]': 'disabled',\n                        'class': 'mat-focus-indicator',\n                    }, inputs: ['disabled', 'disableRipple', 'color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }] } });\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(elementRef, focusMonitor, animationMode);\n        this._ngZone = _ngZone;\n        this._haltDisabledEvents = (event) => {\n            // A disabled button shouldn't apply any actions\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        };\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        /** @breaking-change 14.0.0 _ngZone will be required. */\n        if (this._ngZone) {\n            this._ngZone.runOutsideAngular(() => {\n                this._elementRef.nativeElement.addEventListener('click', this._haltDisabledEvents);\n            });\n        }\n        else {\n            this._elementRef.nativeElement.addEventListener('click', this._haltDisabledEvents);\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._elementRef.nativeElement.removeEventListener('click', this._haltDisabledEvents);\n    }\n}\nMatAnchor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAnchor, deps: [{ token: i1.FocusMonitor }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatAnchor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatAnchor, selector: \"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"attr.tabindex\": \"disabled ? -1 : (tabIndex || 0)\", \"attr.disabled\": \"disabled || null\", \"attr.aria-disabled\": \"disabled.toString()\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-button-disabled\": \"disabled\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatAnchor, decorators: [{\n            type: Component,\n            args: [{ selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`, exportAs: 'matButton, matAnchor', host: {\n                        // Note that we ignore the user-specified tabindex when it's disabled for\n                        // consistency with the `mat-button` applied on native buttons where even\n                        // though they have an index, they're not tabbable.\n                        '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-button-disabled]': 'disabled',\n                        'class': 'mat-focus-indicator',\n                    }, inputs: ['disabled', 'disableRipple', 'color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i1.FocusMonitor }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { tabIndex: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatButtonModule, declarations: [MatButton, MatAnchor], imports: [MatRippleModule, MatCommonModule], exports: [MatButton, MatAnchor, MatCommonModule] });\nMatButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatButtonModule, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule],\n                    exports: [MatButton, MatAnchor, MatCommonModule],\n                    declarations: [MatButton, MatAnchor],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = options?.withCredentials ?? false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nMatIconRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ErrorHandler }]; } });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet)\n            : this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Component });\nMatIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatIcon, selector: \"mat-icon\", inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', inputs: ['color'], host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-icon{-webkit-user-select:none;-moz-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-hidden']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_ICON_LOCATION]\n                }] }, { type: i0.ErrorHandler }]; }, propDecorators: { inline: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatIconModule, declarations: [MatIcon], imports: [MatCommonModule], exports: [MatIcon, MatCommonModule] });\nMatIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatIconModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import * as i2$1 from '@angular/cdk/portal';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, forwardRef, Inject, ContentChild, QueryList, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i1 from '@angular/material/core';\nimport { mixinColor, ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i2 from '@angular/cdk/a11y';\nimport { Subject, Subscription } from 'rxjs';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport { switchMap, map, startWith, takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepLabel, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatStepLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatStepLabel, selector: \"[matStepLabel]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matStepLabel]',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n        /** Label that is used to indicate step as completed to screen readers. */\n        this.completedLabel = 'Completed';\n        /** Label that is used to indicate step as editable to screen readers. */\n        this.editableLabel = 'Editable';\n    }\n}\nMatStepperIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatStepperIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatStepHeader.\n/** @docs-private */\nconst _MatStepHeaderBase = mixinColor(class MatStepHeaderBase extends CdkStepHeader {\n    constructor(elementRef) {\n        super(elementRef);\n    }\n}, 'primary');\nclass MatStepHeader extends _MatStepHeaderBase {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._elementRef, origin, options);\n        }\n        else {\n            this._elementRef.nativeElement.focus(options);\n        }\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional,\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepHeader, deps: [{ token: MatStepperIntl }, { token: i2.FocusMonitor }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatStepHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatStepHeader, selector: \"mat-step-header\", inputs: { color: \"color\", state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, host: { attributes: { \"role\": \"tab\" }, classAttribute: \"mat-step-header\" }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header.cdk-keyboard-focused,.cdk-high-contrast-active .mat-step-header.cdk-program-focused{outline:solid 3px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], components: [{ type: i3.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i5.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i5.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i5.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step-header', inputs: ['color'], host: {\n                        'class': 'mat-step-header',\n                        'role': 'tab',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-step-header-ripple mat-focus-indicator\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span aria-hidden=\\\"true\\\" *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'done'\\\">{{_intl.completedLabel}}</span>\\n      <span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"state === 'edit'\\\">{{_intl.editableLabel}}</span>\\n      <mat-icon aria-hidden=\\\"true\\\" *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_templateLabel()\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\"></ng-container>\\n  </div>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\", styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.cdk-high-contrast-active .mat-step-header{outline:solid 1px}.cdk-high-contrast-active .mat-step-header.cdk-keyboard-focused,.cdk-high-contrast-active .mat-step-header.cdk-program-focused{outline:solid 3px}.cdk-high-contrast-active .mat-step-header[aria-selected=true] .mat-step-label{text-decoration:underline}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);display:flex}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: MatStepperIntl }, { type: i2.FocusMonitor }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { state: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], errorMessage: [{\n                type: Input\n            }], iconOverrides: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], active: [{\n                type: Input\n            }], optional: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('horizontalStepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ transform: 'none', visibility: 'inherit' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('verticalStepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        // Transition to `inherit`, rather than `visible`,\n        // because visibility on a child element the one from the parent,\n        // making this element focusable inside of a `hidden` element.\n        state('current', style({ height: '*', visibility: 'inherit' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperIcon, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatStepperIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatStepperIcon, selector: \"ng-template[matStepperIcon]\", inputs: { name: [\"matStepperIcon\", \"name\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepperIcon]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['matStepperIcon']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Content for a `mat-step` that will be rendered lazily.\n */\nclass MatStepContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatStepContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatStepContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatStepContent, selector: \"ng-template[matStepContent]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matStepContent]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStep extends CdkStep {\n    constructor(stepper, _errorStateMatcher, _viewContainerRef, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._isSelected = Subscription.EMPTY;\n    }\n    ngAfterContentInit() {\n        this._isSelected = this._stepper.steps.changes\n            .pipe(switchMap(() => {\n            return this._stepper.selectionChange.pipe(map(event => event.selectedStep === this), startWith(this._stepper.selected === this));\n        }))\n            .subscribe(isSelected => {\n            if (isSelected && this._lazyContent && !this._portal) {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._isSelected.unsubscribe();\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStep, deps: [{ token: forwardRef(() => MatStepper) }, { token: i1.ErrorStateMatcher, skipSelf: true }, { token: i0.ViewContainerRef }, { token: STEPPER_GLOBAL_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatStep.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatStep, selector: \"mat-step\", inputs: { color: \"color\" }, providers: [\n        { provide: ErrorStateMatcher, useExisting: MatStep },\n        { provide: CdkStep, useExisting: MatStep },\n    ], queries: [{ propertyName: \"stepLabel\", first: true, predicate: MatStepLabel, descendants: true }, { propertyName: \"_lazyContent\", first: true, predicate: MatStepContent, descendants: true }], exportAs: [\"matStep\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\", directives: [{ type: i2$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStep, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-step', providers: [\n                        { provide: ErrorStateMatcher, useExisting: MatStep },\n                        { provide: CdkStep, useExisting: MatStep },\n                    ], encapsulation: ViewEncapsulation.None, exportAs: 'matStep', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-template>\\n  <ng-content></ng-content>\\n  <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n</ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: MatStepper, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatStepper)]\n                }] }, { type: i1.ErrorStateMatcher, decorators: [{\n                    type: SkipSelf\n                }] }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [STEPPER_GLOBAL_OPTIONS]\n                }] }]; }, propDecorators: { stepLabel: [{\n                type: ContentChild,\n                args: [MatStepLabel]\n            }], color: [{\n                type: Input\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatStepContent, { static: false }]\n            }] } });\n/**\n * Proxies the public APIs from `MatStepper` to the deprecated `MatHorizontalStepper` and\n * `MatVerticalStepper`.\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n * @docs-private\n */\nclass _MatProxyStepperBase extends CdkStepper {\n}\n_MatProxyStepperBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatProxyStepperBase, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n_MatProxyStepperBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: _MatProxyStepperBase, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: _MatProxyStepperBase, decorators: [{\n            type: Directive\n        }] });\n/**\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n */\nclass MatHorizontalStepper extends _MatProxyStepperBase {\n}\nMatHorizontalStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatHorizontalStepper, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHorizontalStepper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatHorizontalStepper, selector: \"mat-horizontal-stepper\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatHorizontalStepper, decorators: [{\n            type: Directive,\n            args: [{ selector: 'mat-horizontal-stepper' }]\n        }] });\n/**\n * @deprecated Use `MatStepper` instead.\n * @breaking-change 13.0.0\n */\nclass MatVerticalStepper extends _MatProxyStepperBase {\n}\nMatVerticalStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatVerticalStepper, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatVerticalStepper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatVerticalStepper, selector: \"mat-vertical-stepper\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatVerticalStepper, decorators: [{\n            type: Directive,\n            args: [{ selector: 'mat-vertical-stepper' }]\n        }] });\nclass MatStepper extends CdkStepper {\n    constructor(dir, changeDetectorRef, elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n        this.steps = new QueryList();\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /**\n         * Whether the label should display in bottom or end position.\n         * Only applies in the `horizontal` orientation.\n         */\n        this.labelPosition = 'end';\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n        const nodeName = elementRef.nativeElement.nodeName.toLowerCase();\n        this.orientation = nodeName === 'mat-vertical-stepper' ? 'vertical' : 'horizontal';\n    }\n    ngAfterContentInit() {\n        super.ngAfterContentInit();\n        this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone\n            .pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n    _stepIsNavigable(index, step) {\n        return step.completed || this.selectedIndex === index || !this.linear;\n    }\n}\nMatStepper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepper, deps: [{ token: i3$1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\nMatStepper.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatStepper, selector: \"mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]\", inputs: { selectedIndex: \"selectedIndex\", disableRipple: \"disableRipple\", color: \"color\", labelPosition: \"labelPosition\" }, outputs: { animationDone: \"animationDone\" }, host: { attributes: { \"role\": \"tablist\" }, properties: { \"class.mat-stepper-horizontal\": \"orientation === \\\"horizontal\\\"\", \"class.mat-stepper-vertical\": \"orientation === \\\"vertical\\\"\", \"class.mat-stepper-label-position-end\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"end\\\"\", \"class.mat-stepper-label-position-bottom\": \"orientation === \\\"horizontal\\\" && labelPosition == \\\"bottom\\\"\", \"attr.aria-orientation\": \"orientation\" } }, providers: [\n        { provide: CdkStepper, useExisting: MatStepper },\n        { provide: MatHorizontalStepper, useExisting: MatStepper },\n        { provide: MatVerticalStepper, useExisting: MatStepper },\n    ], queries: [{ propertyName: \"_steps\", predicate: MatStep, descendants: true }, { propertyName: \"_icons\", predicate: MatStepperIcon, descendants: true }], viewQueries: [{ propertyName: \"_stepHeader\", predicate: MatStepHeader, descendants: true }], exportAs: [\"matStepper\", \"matVerticalStepper\", \"matHorizontalStepper\"], usesInheritance: true, ngImport: i0, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <ng-container *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], components: [{ type: MatStepHeader, selector: \"mat-step-header\", inputs: [\"color\", \"state\", \"label\", \"errorMessage\", \"iconOverrides\", \"index\", \"selected\", \"active\", \"optional\", \"disableRipple\"] }], directives: [{ type: i5.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i5.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i5.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i5.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i5.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        matStepperAnimations.horizontalStepTransition,\n        matStepperAnimations.verticalStepTransition,\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepper, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-stepper, mat-vertical-stepper, mat-horizontal-stepper, [matStepper]', exportAs: 'matStepper, matVerticalStepper, matHorizontalStepper', inputs: ['selectedIndex'], host: {\n                        '[class.mat-stepper-horizontal]': 'orientation === \"horizontal\"',\n                        '[class.mat-stepper-vertical]': 'orientation === \"vertical\"',\n                        '[class.mat-stepper-label-position-end]': 'orientation === \"horizontal\" && labelPosition == \"end\"',\n                        '[class.mat-stepper-label-position-bottom]': 'orientation === \"horizontal\" && labelPosition == \"bottom\"',\n                        '[attr.aria-orientation]': 'orientation',\n                        'role': 'tablist',\n                    }, animations: [\n                        matStepperAnimations.horizontalStepTransition,\n                        matStepperAnimations.verticalStepTransition,\n                    ], providers: [\n                        { provide: CdkStepper, useExisting: MatStepper },\n                        { provide: MatHorizontalStepper, useExisting: MatStepper },\n                        { provide: MatVerticalStepper, useExisting: MatStepper },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container [ngSwitch]=\\\"orientation\\\">\\n  <!-- Horizontal stepper -->\\n  <ng-container *ngSwitchCase=\\\"'horizontal'\\\">\\n    <div class=\\\"mat-horizontal-stepper-header-container\\\">\\n      <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n        <ng-container\\n          [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n          [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n        <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n      </ng-container>\\n    </div>\\n\\n    <div class=\\\"mat-horizontal-content-container\\\">\\n      <div *ngFor=\\\"let step of steps; let i = index\\\"\\n           class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n           [@horizontalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n           (@horizontalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n           [id]=\\\"_getStepContentId(i)\\\"\\n           [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n           [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n  <!-- Vertical stepper -->\\n  <ng-container *ngSwitchCase=\\\"'vertical'\\\">\\n    <div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n      <ng-container\\n        [ngTemplateOutlet]=\\\"stepTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{step: step, i: i}\\\"></ng-container>\\n      <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n        <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n             [@verticalStepTransition]=\\\"_getAnimationDirection(i)\\\"\\n             (@verticalStepTransition.done)=\\\"_animationDone.next($event)\\\"\\n             [id]=\\\"_getStepContentId(i)\\\"\\n             [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n             [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n          <div class=\\\"mat-vertical-content\\\">\\n            <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </ng-container>\\n\\n</ng-container>\\n\\n<!-- Common step templating -->\\n<ng-template let-step=\\\"step\\\" let-i=\\\"i\\\" #stepTemplate>\\n  <mat-step-header\\n    [class.mat-horizontal-stepper-header]=\\\"orientation === 'horizontal'\\\"\\n    [class.mat-vertical-stepper-header]=\\\"orientation === 'vertical'\\\"\\n    (click)=\\\"step.select()\\\"\\n    (keydown)=\\\"_onKeydown($event)\\\"\\n    [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n    [id]=\\\"_getStepLabelId(i)\\\"\\n    [attr.aria-posinset]=\\\"i + 1\\\"\\n    [attr.aria-setsize]=\\\"steps.length\\\"\\n    [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n    [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n    [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n    [attr.aria-disabled]=\\\"_stepIsNavigable(i, step) ? null : true\\\"\\n    [index]=\\\"i\\\"\\n    [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n    [label]=\\\"step.stepLabel || step.label\\\"\\n    [selected]=\\\"selectedIndex === i\\\"\\n    [active]=\\\"_stepIsNavigable(i, step)\\\"\\n    [optional]=\\\"step.optional\\\"\\n    [errorMessage]=\\\"step.errorMessage\\\"\\n    [iconOverrides]=\\\"_iconOverrides\\\"\\n    [disableRipple]=\\\"disableRipple || !_stepIsNavigable(i, step)\\\"\\n    [color]=\\\"step.color || color\\\"></mat-step-header>\\n</ng-template>\\n\", styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.cdk-high-contrast-active .mat-horizontal-content-container{outline:solid 1px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}.cdk-high-contrast-active .mat-vertical-content-container{outline:solid 1px}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i3$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _stepHeader: [{\n                type: ViewChildren,\n                args: [MatStepHeader]\n            }], _steps: [{\n                type: ContentChildren,\n                args: [MatStep, { descendants: true }]\n            }], _icons: [{\n                type: ContentChildren,\n                args: [MatStepperIcon, { descendants: true }]\n            }], animationDone: [{\n                type: Output\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperNext, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatStepperNext.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatStepperNext, selector: \"button[matStepperNext]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-next\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperNext, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperNext]',\n                    host: {\n                        'class': 'mat-stepper-next',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperPrevious, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatStepperPrevious.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.0\", type: MatStepperPrevious, selector: \"button[matStepperPrevious]\", inputs: { type: \"type\" }, host: { properties: { \"type\": \"type\" }, classAttribute: \"mat-stepper-previous\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperPrevious, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'button[matStepperPrevious]',\n                    host: {\n                        'class': 'mat-stepper-previous',\n                        '[type]': 'type',\n                    },\n                    inputs: ['type'],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatStepperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperModule, declarations: [MatHorizontalStepper,\n        MatVerticalStepper,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon,\n        MatStepContent], imports: [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule], exports: [MatCommonModule,\n        MatStep,\n        MatStepLabel,\n        MatStepper,\n        MatStepperNext,\n        MatStepperPrevious,\n        MatStepHeader,\n        MatStepperIcon,\n        MatStepContent] });\nMatStepperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperModule, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.0\", ngImport: i0, type: MatStepperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CommonModule,\n                        PortalModule,\n                        MatButtonModule,\n                        CdkStepperModule,\n                        MatIconModule,\n                        MatRippleModule,\n                    ],\n                    exports: [\n                        MatCommonModule,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    declarations: [\n                        MatHorizontalStepper,\n                        MatVerticalStepper,\n                        MatStep,\n                        MatStepLabel,\n                        MatStepper,\n                        MatStepperNext,\n                        MatStepperPrevious,\n                        MatStepHeader,\n                        MatStepperIcon,\n                        MatStepContent,\n                    ],\n                    providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepContent, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n","import { TextSelection } from 'prosemirror-state';\nimport { markApplies } from 'ngx-editor/helpers';\n\nconst removeLink = () => {\n    return (state, dispatch) => {\n        const { doc, selection, tr } = state;\n        const { $head: { pos }, from, to } = selection;\n        // if the cursor is on the link without any selection\n        if (from === to) {\n            const $pos = doc.resolve(pos);\n            const linkStart = pos - $pos.textOffset;\n            const linkEnd = linkStart + $pos.parent.child($pos.index()).nodeSize;\n            tr.removeMark(linkStart, linkEnd);\n        }\n        else {\n            tr.removeMark(from, to);\n        }\n        if (!tr.docChanged) {\n            return false;\n        }\n        dispatch?.(tr);\n        return true;\n    };\n};\n\n// Ref: https://github.com/ProseMirror/prosemirror-commands/blob/master/src/commands.js\nconst applyMark = (type, attrs = {}) => {\n    return (state, dispatch) => {\n        const { tr, selection } = state;\n        const { empty, ranges, $from, $to } = selection;\n        if (empty && selection instanceof TextSelection) {\n            const { $cursor } = selection;\n            if (!$cursor || !markApplies(state.doc, ranges, type)) {\n                return false;\n            }\n            tr.addStoredMark(type.create(attrs));\n            if (!tr.storedMarksSet) {\n                return false;\n            }\n            dispatch?.(tr);\n        }\n        else {\n            tr.addMark($from.pos, $to.pos, type.create(attrs));\n            if (!tr.docChanged) {\n                return false;\n            }\n            dispatch?.(tr.scrollIntoView());\n        }\n        return true;\n    };\n};\n\nconst removeMark = (type) => {\n    return (state, dispatch) => {\n        const { tr, selection, storedMarks, doc } = state;\n        const { empty, ranges } = selection;\n        if (empty && selection instanceof TextSelection) {\n            const { $cursor } = selection;\n            if (!$cursor || !markApplies(state.doc, ranges, type)) {\n                return false;\n            }\n            if (type.isInSet(storedMarks || $cursor.marks())) {\n                tr.removeStoredMark(type);\n                dispatch?.(tr);\n                return true;\n            }\n        }\n        else {\n            for (const range of ranges) {\n                const { $from, $to } = range;\n                const hasMark = doc.rangeHasMark($from.pos, $to.pos, type);\n                if (hasMark) {\n                    tr.removeMark($from.pos, $to.pos, type);\n                }\n            }\n            if (!tr.docChanged) {\n                return false;\n            }\n            dispatch?.(tr.scrollIntoView());\n        }\n        return false;\n    };\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { applyMark, removeLink, removeMark };\n","import { InputRule } from 'prosemirror-inputrules';\n\nconst isMarkActive = (state, type) => {\n    const { from, $from, to, empty } = state.selection;\n    if (empty) {\n        return Boolean(type.isInSet(state.storedMarks || $from.marks()));\n    }\n    return state.doc.rangeHasMark(from, to, type);\n};\n\nconst findNodeType = (type, $from) => {\n    for (let i = $from.depth; i > 0; i -= 1) {\n        if ($from.node(i).type === type) {\n            return $from.node(i).type;\n        }\n    }\n    return null;\n};\nconst isNodeActive = (state, type, attrs = {}) => {\n    const { selection } = state;\n    const { $from, to } = selection;\n    const node = findNodeType(type, $from);\n    if (!Object.entries(attrs).length || !node) {\n        return Boolean(node);\n    }\n    return to <= $from.end() && $from.parent.hasMarkup(type, attrs);\n};\n\nconst getSelectionMarks = (state) => {\n    let marks = [];\n    const { selection, storedMarks } = state;\n    const { from, to, empty, $from } = selection;\n    if (empty) {\n        marks = storedMarks || $from.marks();\n    }\n    else {\n        state.doc.nodesBetween(from, to, (node) => {\n            marks = [...marks, ...node.marks];\n        });\n    }\n    return marks;\n};\n\nconst getSelectionNodes = (state) => {\n    const nodes = [];\n    const { selection: { from, to } } = state;\n    state.doc.nodesBetween(from, to, (node) => {\n        nodes.push(node);\n    });\n    return nodes;\n};\n\n// Ref: https://github.com/ProseMirror/prosemirror-commands/blob/master/src/commands.js\nconst markApplies = (doc, ranges, type) => {\n    for (const range of ranges) {\n        const { $from, $to } = range;\n        let canApply = $from.depth === 0 ? doc.type.allowsMarkType(type) : false;\n        doc.nodesBetween($from.pos, $to.pos, (node) => {\n            if (canApply) {\n                return false;\n            }\n            canApply = node.inlineContent && node.type.allowsMarkType(type);\n            return true;\n        });\n        if (canApply) {\n            return true;\n        }\n    }\n    return false;\n};\n\nconst markInputRule = (regexp, markType, attrs) => {\n    return new InputRule(regexp, (state, match, start, end) => {\n        const { tr } = state;\n        const from = start;\n        let to = end;\n        if (match[2]) {\n            const textStart = start + match[0].indexOf(match[2]);\n            const textEnd = textStart + match[2].length;\n            if (textEnd < end) {\n                tr.delete(textEnd, end);\n            }\n            if (textStart > start) {\n                tr.delete(start, textStart);\n            }\n            to = start + match[2].length;\n        }\n        return tr.addMark(from, to, markType.create(attrs));\n    });\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { getSelectionMarks, getSelectionNodes, isMarkActive, isNodeActive, markApplies, markInputRule };\n","import * as sl from 'prosemirror-schema-list';\nimport { toStyleString } from 'ngx-editor/utils';\nimport { Schema } from 'prosemirror-model';\n\n// :: MarkSpec A link. Has `href` and `title` attributes. `title`\n// defaults to the empty string. Rendered and parsed as an `<a>`\n// element.\nconst link = {\n    attrs: {\n        href: {},\n        title: { default: null },\n        target: { default: '_blank' },\n    },\n    inclusive: false,\n    parseDOM: [\n        {\n            tag: 'a[href]',\n            getAttrs(dom) {\n                return {\n                    href: dom.getAttribute('href'),\n                    title: dom.getAttribute('title'),\n                    target: dom.getAttribute('target'),\n                };\n            },\n        },\n    ],\n    toDOM(node) {\n        const { href, title, target } = node.attrs;\n        return ['a', { href, title, target }, 0];\n    },\n};\n// :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n// Has parse rules that also match `<i>` and `font-style: italic`.\nconst em = {\n    parseDOM: [\n        { tag: 'i' },\n        { tag: 'em' },\n        { style: 'font-style=italic' },\n    ],\n    toDOM() {\n        return ['em', 0];\n    },\n};\n// :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n// also match `<b>` and `font-weight: bold`.\nconst strong = {\n    parseDOM: [\n        { tag: 'strong' },\n        // This works around a Google Docs misbehavior where\n        // pasted content will be inexplicably wrapped in `<b>`\n        // tags with a font-weight normal.\n        {\n            tag: 'b',\n            getAttrs: (dom) => {\n                return dom.style.fontWeight !== 'normal' && null;\n            },\n        },\n        {\n            style: 'font-weight',\n            getAttrs: (value) => {\n                return (/^(?:bold(?:er)?|[5-9]\\d{2,})$/).test(value) && null;\n            },\n        },\n    ],\n    toDOM() {\n        return ['strong', 0];\n    },\n};\n// :: MarkSpec Code font mark. Represented as a `<code>` element.\nconst code = {\n    parseDOM: [\n        { tag: 'code' },\n    ],\n    toDOM() {\n        return ['code', 0];\n    },\n};\n// :: MarkSpec An underline mark. Rendered as an `<u>` element.\n// Has parse rules that also match `text-decoration: underline`.\nconst u = {\n    parseDOM: [\n        { tag: 'u' },\n        {\n            style: 'text-decoration=underline',\n            consuming: false,\n        },\n    ],\n    toDOM() {\n        return ['u', 0];\n    },\n};\n// :: MarkSpec An underline mark. Rendered as an `<s>` element.\n// Has parse rules that also match `strike`, `del` tag and css property `text-decoration: line-through`.\nconst s = {\n    parseDOM: [\n        { tag: 's' },\n        { tag: 'strike' },\n        { style: 'text-decoration=line-through' },\n    ],\n    toDOM() {\n        return ['s', 0];\n    },\n};\nconst textColor = {\n    attrs: {\n        color: {\n            default: null,\n        },\n    },\n    parseDOM: [\n        {\n            style: 'color',\n            getAttrs: (value) => {\n                return { color: value };\n            },\n        },\n    ],\n    toDOM(mark) {\n        const { color } = mark.attrs;\n        return ['span', { style: `color:${color};` }, 0];\n    },\n};\nconst textBackgroundColor = {\n    attrs: {\n        backgroundColor: {\n            default: null,\n        },\n    },\n    parseDOM: [\n        {\n            style: 'background-color',\n            getAttrs: (value) => {\n                return { backgroundColor: value };\n            },\n        },\n    ],\n    toDOM(mark) {\n        const { backgroundColor } = mark.attrs;\n        return ['span', { style: `background-color:${backgroundColor};` }, 0];\n    },\n};\nconst marks = {\n    link,\n    em,\n    strong,\n    code,\n    u,\n    s,\n    text_color: textColor,\n    text_background_color: textBackgroundColor,\n};\n\nconst doc = {\n    content: 'block+',\n};\n// :: NodeSpec The text node.\nconst text = {\n    group: 'inline',\n};\n// :: NodeSpec A plain paragraph textblock. Represented in the DOM\n// as a `<p>` element.\nconst paragraph = {\n    content: 'inline*',\n    group: 'block',\n    attrs: {\n        align: {\n            default: null,\n        },\n    },\n    parseDOM: [\n        {\n            tag: 'p',\n            getAttrs(dom) {\n                const { textAlign } = dom.style;\n                const align = dom.getAttribute('align') || textAlign || null;\n                return {\n                    align,\n                };\n            },\n        },\n    ],\n    toDOM(node) {\n        const { align } = node.attrs;\n        const styles = {\n            textAlign: align !== 'left' ? align : null,\n        };\n        const style = toStyleString(styles) || null;\n        return ['p', { style }, 0];\n    },\n};\n// :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\nconst blockquote = {\n    content: 'block+',\n    group: 'block',\n    defining: true,\n    parseDOM: [{ tag: 'blockquote' }],\n    toDOM() {\n        return ['blockquote', 0];\n    },\n};\n// :: NodeSpec A horizontal rule (`<hr>`).\nconst horizontalRule = {\n    group: 'block',\n    parseDOM: [{ tag: 'hr' }],\n    toDOM() {\n        return ['hr'];\n    },\n};\n// :: NodeSpec A heading textblock, with a `level` attribute that\n// should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n// `<h6>` elements.\nconst heading = {\n    attrs: {\n        level: {\n            default: 1,\n        },\n        align: {\n            default: null,\n        },\n    },\n    content: 'inline*',\n    group: 'block',\n    defining: true,\n    parseDOM: [\n        {\n            tag: 'h1',\n            getAttrs(dom) {\n                const { textAlign } = dom.style;\n                const align = dom.getAttribute('align') || textAlign || null;\n                return {\n                    level: 1,\n                    align,\n                };\n            },\n        },\n        {\n            tag: 'h2',\n            getAttrs(dom) {\n                const { textAlign } = dom.style;\n                const align = dom.getAttribute('align') || textAlign || null;\n                return {\n                    level: 2,\n                    align,\n                };\n            },\n        },\n        {\n            tag: 'h3',\n            getAttrs(dom) {\n                const { textAlign } = dom.style;\n                const align = dom.getAttribute('align') || textAlign || null;\n                return {\n                    level: 3,\n                    align,\n                };\n            },\n        },\n        {\n            tag: 'h4',\n            getAttrs(dom) {\n                const { textAlign } = dom.style;\n                const align = dom.getAttribute('align') || textAlign || null;\n                return {\n                    level: 4,\n                    align,\n                };\n            },\n        },\n        {\n            tag: 'h5',\n            getAttrs(dom) {\n                const { textAlign } = dom.style;\n                const align = dom.getAttribute('align') || textAlign || null;\n                return {\n                    level: 5,\n                    align,\n                };\n            },\n        },\n        {\n            tag: 'h6',\n            getAttrs(dom) {\n                const { textAlign } = dom.style;\n                const align = dom.getAttribute('align') || textAlign || null;\n                return {\n                    level: 6,\n                    align,\n                };\n            },\n        },\n    ],\n    toDOM(node) {\n        const { level, align } = node.attrs;\n        const styles = {\n            textAlign: align !== 'left' ? align : null,\n        };\n        const style = toStyleString(styles) || null;\n        return [`h${level}`, { style }, 0];\n    },\n};\n// :: NodeSpec A code listing. Disallows marks or non-text inline\n// nodes by default. Represented as a `<pre>` element with a\n// `<code>` element inside of it.\nconst codeBlock = {\n    content: 'text*',\n    marks: '',\n    group: 'block',\n    code: true,\n    defining: true,\n    parseDOM: [\n        {\n            tag: 'pre',\n            preserveWhitespace: 'full',\n        },\n    ],\n    toDOM() {\n        return ['pre', ['code', 0]];\n    },\n};\n// :: NodeSpec A hard line break, represented in the DOM as `<br>`.\nconst hardBreak = {\n    inline: true,\n    group: 'inline',\n    selectable: false,\n    parseDOM: [{ tag: 'br' }],\n    toDOM() {\n        return ['br'];\n    },\n};\n// :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n// `alt`, and `href` attributes. The latter two default to the empty\n// string.\nconst image = {\n    inline: true,\n    attrs: {\n        src: {},\n        alt: { default: null },\n        title: { default: null },\n        width: { default: null },\n    },\n    group: 'inline',\n    draggable: true,\n    parseDOM: [\n        {\n            tag: 'img[src]',\n            getAttrs(dom) {\n                return {\n                    src: dom.getAttribute('src'),\n                    title: dom.getAttribute('title'),\n                    alt: dom.getAttribute('alt'),\n                    width: dom.getAttribute('width'),\n                };\n            },\n        },\n    ],\n    toDOM(node) {\n        const { src, alt, title, width } = node.attrs;\n        return ['img', { src, alt, title, width }];\n    },\n};\nconst listItem = {\n    ...sl.listItem,\n    content: 'paragraph block*',\n};\nconst orderedList = {\n    ...sl.orderedList,\n    content: 'list_item+',\n    group: 'block',\n};\nconst bulletList = {\n    ...sl.bulletList,\n    content: 'list_item+',\n    group: 'block',\n};\nconst nodes = {\n    doc,\n    text,\n    paragraph,\n    blockquote,\n    horizontal_rule: horizontalRule,\n    heading,\n    hard_break: hardBreak,\n    code_block: codeBlock,\n    image,\n    list_item: listItem,\n    ordered_list: orderedList,\n    bullet_list: bulletList,\n};\n\nconst schema = new Schema({\n    marks,\n    nodes,\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { marks, nodes, schema };\n","const isNil = (val) => {\n    return typeof val === 'undefined' || val === null;\n};\n\nconst camelToDashed = (str) => {\n    return str.replace(/[A-Z]/g, (m) => `-${m.toLowerCase()}`);\n};\nconst cleanObject = (obj) => {\n    const cleanObj = {};\n    Object.keys(obj).forEach((prop) => {\n        if (obj[prop]) {\n            cleanObj[prop] = obj[prop];\n        }\n    });\n    return cleanObj;\n};\nconst toStyleString = (obj) => {\n    const styles = cleanObject(obj);\n    return Object.entries(styles).map(([k, v]) => `${camelToDashed(k)}:${v}`).join(';');\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { isNil, toStyleString };\n","import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, ComponentFactoryResolver, ApplicationRef, forwardRef, ViewEncapsulation, Injectable, Optional, Pipe, HostBinding, HostListener, NgModule, InjectionToken } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormGroup, FormControl, Validators as Validators$1, ReactiveFormsModule } from '@angular/forms';\nimport { Plugin, PluginKey, NodeSelection, EditorState } from 'prosemirror-state';\nimport { DecorationSet, Decoration, EditorView } from 'prosemirror-view';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Fragment, Slice, DOMSerializer, DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor/schema';\nexport { marks, nodes, schema } from 'ngx-editor/schema';\nimport { Subject, fromEvent, asyncScheduler } from 'rxjs';\nimport { toggleMark, lift, wrapIn, setBlockType, newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock, chainCommands, exitCode, baseKeymap } from 'prosemirror-commands';\nimport { applyMark, removeLink, removeMark } from 'ngx-editor/commands';\nimport { isMarkActive, isNodeActive, getSelectionNodes, getSelectionMarks, markInputRule } from 'ngx-editor/helpers';\nimport { liftListItem, wrapInList, splitListItem, sinkListItem } from 'prosemirror-schema-list';\nimport * as i1 from '@angular/platform-browser';\nimport { throttleTime } from 'rxjs/operators';\nimport { computePosition, offset, autoPlacement, detectOverflow } from '@floating-ui/dom';\nimport { isNil } from 'ngx-editor/utils';\nimport { keymap } from 'prosemirror-keymap';\nimport { undo, redo, history } from 'prosemirror-history';\nimport { wrappingInputRule, textblockTypeInputRule, smartQuotes, ellipsis, emDash, inputRules } from 'prosemirror-inputrules';\n\nconst editablePlugin = (editable = true) => {\n    return new Plugin({\n        key: new PluginKey('editable'),\n        state: {\n            init() {\n                return editable;\n            },\n            apply(tr, previousVal) {\n                return tr.getMeta('UPDATE_EDITABLE') ?? previousVal;\n            },\n        },\n        props: {\n            editable(state) {\n                return this.getState(state);\n            },\n            attributes(state) {\n                const isEnabled = this.getState(state);\n                if (isEnabled) {\n                    return null;\n                }\n                return {\n                    class: 'NgxEditor__Content--Disabled',\n                };\n            },\n        },\n    });\n};\n\nconst PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';\nconst placeholderPlugin = (text) => {\n    return new Plugin({\n        key: new PluginKey('placeholder'),\n        state: {\n            init() {\n                return text ?? '';\n            },\n            apply(tr, previousVal) {\n                const placeholder = tr.getMeta('UPDATE_PLACEHOLDER') ?? previousVal;\n                return placeholder;\n            },\n        },\n        props: {\n            decorations(state) {\n                const { doc } = state;\n                const { textContent, childCount } = doc;\n                const placeholder = this.getState(state);\n                if (!placeholder || childCount > 1) {\n                    return DecorationSet.empty;\n                }\n                const decorations = [];\n                const decorate = (node, pos) => {\n                    if (node.type.isBlock && node.childCount === 0 && textContent.length === 0) {\n                        const from = pos;\n                        const to = pos + node.nodeSize;\n                        const placeholderNode = Decoration.node(from, to, {\n                            'class': PLACEHOLDER_CLASSNAME,\n                            'data-placeholder': placeholder,\n                            'data-align': node.attrs['align'] ?? null,\n                        });\n                        decorations.push(placeholderNode);\n                    }\n                    return false;\n                };\n                doc.descendants(decorate);\n                return DecorationSet.create(doc, decorations);\n            },\n        },\n    });\n};\n\nconst attributesPlugin = (attributes = {}) => {\n    return new Plugin({\n        key: new PluginKey('attributes'),\n        props: {\n            attributes,\n        },\n    });\n};\n\nconst focusPlugin = (cb) => {\n    return new Plugin({\n        key: new PluginKey('focus'),\n        props: {\n            handleDOMEvents: {\n                focus: () => {\n                    cb();\n                    return false;\n                },\n            },\n        },\n    });\n};\n\nconst blurPlugin = (cb) => {\n    return new Plugin({\n        key: new PluginKey('blur'),\n        props: {\n            handleDOMEvents: {\n                blur: () => {\n                    cb();\n                    return false;\n                },\n            },\n        },\n    });\n};\n\nclass ImageViewComponent {\n    constructor() {\n        this.alt = '';\n        this.title = '';\n        this.outerWidth = '';\n        this.selected = false;\n        this.imageResize = new EventEmitter();\n    }\n    startResizing(e, direction) {\n        e.preventDefault();\n        this.resizeImage(e, direction);\n    }\n    resizeImage(evt, direction) {\n        const startX = evt.pageX;\n        const startWidth = this.imgEl.nativeElement.clientWidth;\n        const isLeftResize = direction === 'left';\n        const { width } = window.getComputedStyle(this.view.dom);\n        const editorWidth = parseInt(width, 10);\n        const onMouseMove = (e) => {\n            const currentX = e.pageX;\n            const diffInPx = currentX - startX;\n            const computedWidth = isLeftResize ? startWidth - diffInPx : startWidth + diffInPx;\n            // prevent image overflow the editor\n            // prevent resizng below 20px\n            if (computedWidth > editorWidth || computedWidth < 20) {\n                return;\n            }\n            this.outerWidth = `${computedWidth}px`;\n        };\n        const onMouseUp = (e) => {\n            e.preventDefault();\n            document.removeEventListener('mousemove', onMouseMove);\n            document.removeEventListener('mouseup', onMouseUp);\n            this.imageResize.emit();\n        };\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n    }\n}\nImageViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ImageViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nImageViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ImageViewComponent, selector: \"ngx-image-view\", inputs: { src: \"src\", alt: \"alt\", title: \"title\", outerWidth: \"outerWidth\", selected: \"selected\", view: \"view\" }, outputs: { imageResize: \"imageResize\" }, viewQueries: [{ propertyName: \"imgEl\", first: true, predicate: [\"imgEl\"], descendants: true, static: true }], ngImport: i0, template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ImageViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-image-view', template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"] }]\n        }], propDecorators: { src: [{\n                type: Input\n            }], alt: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], outerWidth: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], imageResize: [{\n                type: Output\n            }], imgEl: [{\n                type: ViewChild,\n                args: ['imgEl', { static: true }]\n            }] } });\n\nclass ImageRezieView {\n    constructor(node, view, getPos, injector) {\n        this.updating = false;\n        this.handleResize = () => {\n            if (this.updating) {\n                return;\n            }\n            const { state, dispatch } = this.view;\n            const { tr } = state;\n            const transaction = tr.setNodeMarkup(this.getPos(), undefined, {\n                ...this.node.attrs,\n                width: this.imageComponentRef.instance.outerWidth,\n            });\n            const resolvedPos = transaction.doc.resolve(this.getPos());\n            const newSelection = new NodeSelection(resolvedPos);\n            transaction.setSelection(newSelection);\n            dispatch(transaction);\n        };\n        const componentFactoryResolver = injector.get(ComponentFactoryResolver);\n        this.applicationRef = injector.get(ApplicationRef);\n        // Create the component and wire it up with the element\n        const factory = componentFactoryResolver.resolveComponentFactory(ImageViewComponent);\n        this.imageComponentRef = factory.create(injector, []);\n        // Attach to the view so that the change detector knows to run\n        this.applicationRef.attachView(this.imageComponentRef.hostView);\n        // Possible alternate for deprecated ComponentFactoryResolver\n        // const viewContainerRef = injector.get(ViewContainerRef);\n        // this.imageComponentRef = viewContainerRef.createComponent(ImageViewComponent, { injector });\n        this.setNodeAttributes(node.attrs);\n        this.imageComponentRef.instance.view = view;\n        this.dom = this.imageComponentRef.location.nativeElement;\n        this.view = view;\n        this.node = node;\n        this.getPos = getPos;\n        this.resizeSubscription = this.imageComponentRef.instance.imageResize.subscribe(() => {\n            this.handleResize();\n        });\n    }\n    computeChanges(prevAttrs, newAttrs) {\n        return JSON.stringify(prevAttrs) === JSON.stringify(newAttrs);\n    }\n    setNodeAttributes(attrs) {\n        this.imageComponentRef.instance.src = attrs['src'];\n        this.imageComponentRef.instance.alt = attrs['alt'];\n        this.imageComponentRef.instance.title = attrs['title'];\n        this.imageComponentRef.instance.outerWidth = attrs['width'];\n    }\n    update(node) {\n        if (node.type !== this.node.type) {\n            return false;\n        }\n        this.node = node;\n        const changed = this.computeChanges(this.node.attrs, node.attrs);\n        if (changed) {\n            this.updating = true;\n            this.setNodeAttributes(node.attrs);\n            this.updating = false;\n        }\n        return true;\n    }\n    ignoreMutation() {\n        return true;\n    }\n    selectNode() {\n        this.imageComponentRef.instance.selected = true;\n    }\n    deselectNode() {\n        this.imageComponentRef.instance.selected = false;\n    }\n    destroy() {\n        this.resizeSubscription.unsubscribe();\n        this.applicationRef.detachView(this.imageComponentRef.hostView);\n    }\n}\nconst imageResizePlugin = (injector) => {\n    return new Plugin({\n        key: new PluginKey('image-resize'),\n        props: {\n            nodeViews: {\n                image: (node, view, getPos) => {\n                    return new ImageRezieView(node, view, getPos, injector);\n                },\n            },\n        },\n    });\n};\n\nconst HTTP_LINK_REGEX = /(?:https?:\\/\\/)?[\\w-]+(?:\\.[\\w-]+)+\\.?(?:\\d+)?(?:\\/\\S*)?$/;\nconst linkify = (fragment) => {\n    const linkified = [];\n    fragment.forEach((child) => {\n        if (child.isText) {\n            const text = child.text;\n            let pos = 0;\n            const match = HTTP_LINK_REGEX.exec(text);\n            if (match) {\n                const start = match.index;\n                const end = start + match[0].length;\n                const { link } = child.type.schema.marks;\n                if (start > 0) {\n                    linkified.push(child.cut(pos, start));\n                }\n                const urlText = text.slice(start, end);\n                linkified.push(child.cut(start, end).mark(link.create({ href: urlText }).addToSet(child.marks)));\n                pos = end;\n            }\n            if (pos < text.length) {\n                linkified.push(child.cut(pos));\n            }\n        }\n        else {\n            linkified.push(child.copy(linkify(child.content)));\n        }\n    });\n    return Fragment.fromArray(linkified);\n};\nconst linkifyPlugin = () => {\n    return new Plugin({\n        key: new PluginKey('linkify'),\n        props: {\n            transformPasted: (slice) => {\n                return new Slice(linkify(slice.content), slice.openStart, slice.openEnd);\n            },\n        },\n    });\n};\n\nconst emptyDoc = {\n    type: 'doc',\n    content: [\n        {\n            type: 'paragraph',\n        },\n    ],\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst toHTML = (json, inputSchema) => {\n    const schema$1 = inputSchema ?? schema;\n    const contentNode = schema$1.nodeFromJSON(json);\n    const html = DOMSerializer.fromSchema(schema$1).serializeFragment(contentNode.content);\n    const div = document.createElement('div');\n    div.appendChild(html);\n    return div.innerHTML;\n};\nconst toDoc = (html, inputSchema) => {\n    const schema$1 = inputSchema ?? schema;\n    const el = document.createElement('div');\n    el.innerHTML = html;\n    return DOMParser.fromSchema(schema$1).parse(el).toJSON();\n};\nconst parseContent = (value, schema) => {\n    if (!value) {\n        return schema.nodeFromJSON(emptyDoc);\n    }\n    if (typeof value !== 'string') {\n        return schema.nodeFromJSON(value);\n    }\n    const docJson = toDoc(value, schema);\n    return schema.nodeFromJSON(docJson);\n};\n\nclass NgxEditorComponent {\n    constructor(renderer, injector, elementRef) {\n        this.renderer = renderer;\n        this.injector = injector;\n        this.elementRef = elementRef;\n        this.placeholder = 'Type Here...';\n        this.focusOut = new EventEmitter();\n        this.focusIn = new EventEmitter();\n        this.subscriptions = [];\n        this.onChange = () => { };\n        this.onTouched = () => { };\n    }\n    writeValue(value) {\n        if (!this.outputFormat && typeof value === 'string') {\n            this.outputFormat = 'html';\n        }\n        this.editor.setContent(value ?? '');\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.setMeta('UPDATE_EDITABLE', !isDisabled);\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    handleChange(jsonDoc) {\n        if (this.outputFormat === 'html') {\n            const html = toHTML(jsonDoc, this.editor.schema);\n            this.onChange(html);\n            return;\n        }\n        this.onChange(jsonDoc);\n    }\n    setMeta(key, value) {\n        const { dispatch, state: { tr } } = this.editor.view;\n        dispatch(tr.setMeta(key, value));\n    }\n    setPlaceholder(placeholder) {\n        this.setMeta('UPDATE_PLACEHOLDER', placeholder);\n    }\n    registerPlugins() {\n        this.editor.registerPlugin(editablePlugin());\n        this.editor.registerPlugin(placeholderPlugin(this.placeholder));\n        this.editor.registerPlugin(attributesPlugin({\n            class: 'NgxEditor__Content',\n        }));\n        this.editor.registerPlugin(focusPlugin(() => {\n            this.focusIn.emit();\n        }));\n        this.editor.registerPlugin(focusPlugin(() => {\n            this.focusIn.emit();\n        }));\n        this.editor.registerPlugin(blurPlugin(() => {\n            this.focusOut.emit();\n            this.onTouched();\n        }));\n        if (this.editor.features.resizeImage) {\n            this.editor.registerPlugin(imageResizePlugin(this.injector));\n        }\n        if (this.editor.features.linkOnPaste) {\n            this.editor.registerPlugin(linkifyPlugin());\n        }\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new Error('NgxEditor: Required editor instance');\n        }\n        this.registerPlugins();\n        this.renderer.appendChild(this.ngxEditor.nativeElement, this.editor.view.dom);\n        const contentChangeSubscription = this.editor.valueChanges.subscribe((jsonDoc) => {\n            this.handleChange(jsonDoc);\n        });\n        this.subscriptions.push(contentChangeSubscription);\n    }\n    ngOnChanges(changes) {\n        if (changes?.['placeholder'] && !changes['placeholder'].isFirstChange()) {\n            this.setPlaceholder(changes['placeholder'].currentValue);\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach((subscription) => {\n            subscription.unsubscribe();\n        });\n    }\n}\nNgxEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorComponent, deps: [{ token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: NgxEditorComponent, selector: \"ngx-editor\", inputs: { editor: \"editor\", outputFormat: \"outputFormat\", placeholder: \"placeholder\" }, outputs: { focusOut: \"focusOut\", focusIn: \"focusIn\" }, providers: [{\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxEditorComponent),\n            multi: true,\n        }], viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open{background-color:#e8f0fe}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected .NgxEditor__Dropdown--Text,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open .NgxEditor__Dropdown--Text{color:#1a73e8}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor', providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NgxEditorComponent),\n                            multi: true,\n                        }], encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open{background-color:#e8f0fe}.NgxEditor__Dropdown.NgxEditor__Dropdown--Selected .NgxEditor__Dropdown--Text,.NgxEditor__Dropdown.NgxEditor__Dropdown--Open .NgxEditor__Dropdown--Text{color:#1a73e8}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ElementRef }]; }, propDecorators: { ngxEditor: [{\n                type: ViewChild,\n                args: ['ngxEditor', { static: true }]\n            }], editor: [{\n                type: Input\n            }], outputFormat: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], focusOut: [{\n                type: Output\n            }], focusIn: [{\n                type: Output\n            }] } });\n\nclass MenuService {\n    constructor() {\n        this.customMenuRefChange = new Subject();\n    }\n    setCustomMenuRef(c) {\n        this.customMenuRefChange.next(c);\n    }\n}\nMenuService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: MenuService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMenuService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: MenuService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: MenuService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nvar bold = `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n`;\n\nvar italic = `\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\n\nvar code = `\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\n\nvar underline = `\n<path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n`;\n\nvar strike = `\n<path d=\"M6.85,7.08C6.85,4.37,9.45,3,12.24,3c1.64,0,3,0.49,3.9,1.28c0.77,0.65,1.46,1.73,1.46,3.24h-3.01 c0-0.31-0.05-0.59-0.15-0.85c-0.29-0.86-1.2-1.28-2.25-1.28c-1.86,0-2.34,1.02-2.34,1.7c0,0.48,0.25,0.88,0.74,1.21 C10.97,8.55,11.36,8.78,12,9H7.39C7.18,8.66,6.85,8.11,6.85,7.08z M21,12v-2H3v2h9.62c1.15,0.45,1.96,0.75,1.96,1.97 c0,1-0.81,1.67-2.28,1.67c-1.54,0-2.93-0.54-2.93-2.51H6.4c0,0.55,0.08,1.13,0.24,1.58c0.81,2.29,3.29,3.3,5.67,3.3 c2.27,0,5.3-0.89,5.3-4.05c0-0.3-0.01-1.16-0.48-1.94H21V12z\"/>\n`;\n\nvar orderedList = `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n`;\n\nvar bulletList = `\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\n\nvar quote = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\n\nvar link = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n`;\n\nvar unlink = `\n<path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/>\n`;\n\nvar image = `\n<path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/>\n`;\n\nvar alignLeft = `\n<path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignCenter = `\n<path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignRight = `\n<path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignJustify = `\n<path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"/>\n`;\n\nvar textColor = `\n<path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/>\n`;\n\nvar colorFill = `\n<path d=\"M16.56,8.94L7.62,0L6.21,1.41l2.38,2.38L3.44,8.94c-0.59,0.59-0.59,1.54,0,2.12l5.5,5.5C9.23,16.85,9.62,17,10,17 s0.77-0.15,1.06-0.44l5.5-5.5C17.15,10.48,17.15,9.53,16.56,8.94z M5.21,10L10,5.21L14.79,10H5.21z M19,11.5c0,0-2,2.17-2,3.5 c0,1.1,0.9,2,2,2s2-0.9,2-2C21,13.67,19,11.5,19,11.5z M2,20h20v4H2V20z\"/>\n`;\n\n// Icons source: https://material.io/\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\nconst DEFAULT_ICON_FILL = 'currentColor';\nconst icons = {\n    bold,\n    italic,\n    code,\n    underline,\n    strike,\n    ordered_list: orderedList,\n    bullet_list: bulletList,\n    blockquote: quote,\n    link,\n    unlink,\n    image,\n    align_left: alignLeft,\n    align_center: alignCenter,\n    align_right: alignRight,\n    align_justify: alignJustify,\n    text_color: textColor,\n    color_fill: colorFill,\n};\nclass Icon {\n    static get(name, fill = DEFAULT_ICON_FILL) {\n        const path = icons[name] || '<path></path>';\n        return `\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=${fill}\n        height=${DEFAULT_ICON_HEIGHT}\n        width=${DEFAULT_ICON_WIDTH}\n      >\n        ${path}\n      </svg>\n    `;\n    }\n}\n\nclass Mark {\n    constructor(name) {\n        this.name = name;\n    }\n    apply() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return applyMark(type)(state, dispatch);\n        };\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return toggleMark(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.marks[this.name];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass Blockqote {\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.nodes.blockquote;\n            if (!type) {\n                return false;\n            }\n            if (this.isActive(state)) {\n                return lift(state, dispatch);\n            }\n            return wrapIn(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.nodes.blockquote;\n        if (!type) {\n            return false;\n        }\n        return isNodeActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass ListItem {\n    constructor(isBulletList = false) {\n        this.isBulletList = false;\n        this.isBulletList = isBulletList;\n    }\n    getType(schema) {\n        return this.isBulletList ? schema.nodes['bullet_list'] : schema.nodes['ordered_list'];\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = this.getType(schema);\n            if (!type) {\n                return false;\n            }\n            if (this.isActive(state)) {\n                return liftListItem(schema.nodes.list_item)(state, dispatch);\n            }\n            return wrapInList(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = this.getType(schema);\n        if (!type) {\n            return false;\n        }\n        return isNodeActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass Heading {\n    constructor(level) {\n        this.level = level;\n    }\n    apply() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.nodes.heading;\n            if (!type) {\n                return false;\n            }\n            return setBlockType(type)(state, dispatch);\n        };\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema, selection, doc } = state;\n            const type = schema.nodes.heading;\n            if (!type) {\n                return false;\n            }\n            const nodePos = selection.$from.before(1);\n            const node = doc.nodeAt(nodePos);\n            const attrs = node?.attrs ?? {};\n            if (this.isActive(state)) {\n                return setBlockType(schema.nodes.paragraph, attrs)(state, dispatch);\n            }\n            return setBlockType(type, { ...attrs, level: this.level })(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const nodesInSelection = getSelectionNodes(state);\n        const type = schema.nodes.heading;\n        if (!type) {\n            return false;\n        }\n        const supportedNodes = [\n            type,\n            schema.nodes.text,\n            schema.nodes.blockquote,\n        ];\n        // heading is a text node\n        // don't mark as active when it has more nodes\n        const nodes = nodesInSelection.filter((node) => {\n            return supportedNodes.includes(node.type);\n        });\n        const acitveNode = nodes.find((node) => {\n            return node.attrs['level'] === this.level;\n        });\n        return Boolean(acitveNode);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass TextAlign {\n    constructor(align) {\n        this.align = align;\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { doc, selection, tr, schema } = state;\n            const { from, to } = selection;\n            let applicable = false;\n            doc.nodesBetween(from, to, (node, pos) => {\n                const nodeType = node.type;\n                if ([schema.nodes.paragraph, schema.nodes.heading].includes(nodeType)) {\n                    applicable = true;\n                    tr.setNodeMarkup(pos, nodeType, { ...node.attrs, align: this.align });\n                }\n                return true;\n            });\n            if (!applicable) {\n                return false;\n            }\n            if (tr.docChanged) {\n                dispatch?.(tr);\n            }\n            return true;\n        };\n    }\n    isActive(state) {\n        const nodes = getSelectionNodes(state);\n        const active = nodes.find((node) => {\n            return node.attrs['align'] === this.align;\n        });\n        return Boolean(active);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nconst defaultOptions = {\n    strict: true,\n};\nclass Link$1 {\n    update(attrs) {\n        return (state, dispatch) => {\n            const { schema, selection } = state;\n            const type = schema.marks.link;\n            if (!type) {\n                return false;\n            }\n            if (selection.empty) {\n                return false;\n            }\n            return toggleMark(type, attrs)(state, dispatch);\n        };\n    }\n    insert(text, attrs) {\n        return (state, dispatch) => {\n            const { schema, tr } = state;\n            const type = schema.marks.link;\n            if (!type) {\n                return false;\n            }\n            const linkAttrs = {\n                href: attrs.href,\n                title: attrs.title ?? text,\n                target: attrs.target ?? '_blank',\n            };\n            const node = schema.text(text, [schema.marks.link.create(linkAttrs)]);\n            tr.replaceSelectionWith(node, false)\n                .scrollIntoView();\n            if (tr.docChanged) {\n                dispatch?.(tr);\n                return true;\n            }\n            return false;\n        };\n    }\n    isActive(state, options = defaultOptions) {\n        if (options.strict) {\n            return true;\n        }\n        const { schema } = state;\n        const type = schema.marks.link;\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    remove(state, dispatch) {\n        return removeLink()(state, dispatch);\n    }\n    canExecute(state) {\n        const testAttrs = {\n            href: '',\n        };\n        return this.insert('Exec', testAttrs)(state) || this.update(testAttrs)(state);\n    }\n}\n\nclass Image$1 {\n    insert(src, attrs) {\n        return (state, dispatch) => {\n            const { schema, tr, selection } = state;\n            const type = schema.nodes.image;\n            if (!type) {\n                return false;\n            }\n            const imageAttrs = {\n                width: null,\n                src,\n                ...attrs,\n            };\n            if (!imageAttrs.width && selection instanceof NodeSelection && selection.node.type === type) {\n                imageAttrs.width = selection.node.attrs['width'];\n            }\n            tr.replaceSelectionWith(type.createAndFill(imageAttrs));\n            const resolvedPos = tr.doc.resolve(tr.selection.anchor - tr.selection.$anchor.nodeBefore.nodeSize);\n            tr\n                .setSelection(new NodeSelection(resolvedPos))\n                .scrollIntoView();\n            if (tr.docChanged) {\n                dispatch?.(tr);\n                return true;\n            }\n            return false;\n        };\n    }\n    isActive(state) {\n        const { selection } = state;\n        if (selection instanceof NodeSelection) {\n            return selection.node.type.name === 'image';\n        }\n        return false;\n    }\n}\n\nclass TextColor$1 {\n    constructor(name, attrName = 'color') {\n        this.name = name;\n        this.attrName = attrName;\n    }\n    apply(attrs) {\n        return (state, dispatch) => {\n            const { schema, selection, doc } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            const { from, to, empty } = selection;\n            if (!empty && (from + 1 === to)) {\n                const node = doc.nodeAt(from);\n                if (node?.isAtom && !node.isText && node.isLeaf) {\n                    // An atomic node (e.g. Image) is selected.\n                    return false;\n                }\n            }\n            return applyMark(type, attrs)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.marks[this.name];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    getActiveColors(state) {\n        if (!this.isActive(state)) {\n            return [];\n        }\n        const { schema } = state;\n        const marks = getSelectionMarks(state);\n        const colors = marks\n            .filter((mark) => mark.type === schema.marks[this.name])\n            .map((mark) => {\n            return mark.attrs[this.attrName];\n        })\n            .filter(Boolean);\n        return colors;\n    }\n    remove() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return removeMark(type)(state, dispatch);\n        };\n    }\n    canExecute(state) {\n        const attrs = this.name === 'text_color' ? { color: '' } : { backgroundColor: '' };\n        return this.apply(attrs)(state);\n    }\n}\n\nconst STRONG = new Mark('strong');\nconst EM = new Mark('em');\nconst CODE = new Mark('code');\nconst UNDERLINE = new Mark('u');\nconst STRIKE = new Mark('s');\nconst BLOCKQUOTE = new Blockqote();\nconst UL = new ListItem(true);\nconst OL = new ListItem(false);\nconst H1 = new Heading(1);\nconst H2 = new Heading(2);\nconst H3 = new Heading(3);\nconst H4 = new Heading(4);\nconst H5 = new Heading(5);\nconst H6 = new Heading(6);\nconst ALIGN_LEFT = new TextAlign('left');\nconst ALIGN_CENTER = new TextAlign('center');\nconst ALIGN_RIGHT = new TextAlign('right');\nconst ALIGN_JUSTIFY = new TextAlign('justify');\nconst LINK = new Link$1();\nconst IMAGE = new Image$1();\nconst TEXT_COLOR = new TextColor$1('text_color', 'color');\nconst TEXT_BACKGROUND_COLOR = new TextColor$1('text_background_color', 'backgroundColor');\n\nconst ToggleCommands = {\n    bold: STRONG,\n    italic: EM,\n    code: CODE,\n    underline: UNDERLINE,\n    strike: STRIKE,\n    blockquote: BLOCKQUOTE,\n    bullet_list: UL,\n    ordered_list: OL,\n    h1: H1,\n    h2: H2,\n    h3: H3,\n    h4: H4,\n    h5: H5,\n    h6: H6,\n    align_left: ALIGN_LEFT,\n    align_center: ALIGN_CENTER,\n    align_right: ALIGN_RIGHT,\n    align_justify: ALIGN_JUSTIFY,\n};\nconst Link = LINK;\nconst Image = IMAGE;\nconst TextColor = TEXT_COLOR;\nconst TextBackgroundColor = TEXT_BACKGROUND_COLOR;\n\nconst defaults = {\n    // menu\n    bold: 'Bold',\n    italic: 'Italic',\n    code: 'Code',\n    underline: 'Underline',\n    strike: 'Strike',\n    blockquote: 'Blockquote',\n    bullet_list: 'Bullet List',\n    ordered_list: 'Ordered List',\n    heading: 'Heading',\n    h1: 'Header 1',\n    h2: 'Header 2',\n    h3: 'Header 3',\n    h4: 'Header 4',\n    h5: 'Header 5',\n    h6: 'Header 6',\n    align_left: 'Left Align',\n    align_center: 'Center Align',\n    align_right: 'Right Align',\n    align_justify: 'Justify',\n    text_color: 'Text Color',\n    background_color: 'Background Color',\n    insertLink: 'Insert Link',\n    removeLink: 'Remove Link',\n    insertImage: 'Insert Image',\n    // pupups, forms, others...\n    url: 'URL',\n    text: 'Text',\n    openInNewTab: 'Open in new tab',\n    insert: 'Insert',\n    altText: 'Alt Text',\n    title: 'Title',\n    remove: 'Remove',\n};\nclass Locals {\n    constructor(newLocals = {}) {\n        this.locals = defaults;\n        this.get = (key) => {\n            return this.locals[key] ?? '';\n        };\n        this.locals = { ...defaults, ...newLocals };\n    }\n}\n\nclass NgxEditorServiceConfig {\n    constructor() {\n        this.locals = {};\n    }\n}\nNgxEditorServiceConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorServiceConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxEditorServiceConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorServiceConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorServiceConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorService {\n    constructor(config) {\n        this.config = config;\n    }\n    get locals() {\n        return new Locals(this.config.locals);\n    }\n}\nNgxEditorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorService, deps: [{ token: NgxEditorServiceConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nNgxEditorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: NgxEditorServiceConfig, decorators: [{\n                    type: Optional\n                }] }]; } });\nconst provideMyServiceOptions = (config) => {\n    return {\n        locals: config.locals ?? {},\n    };\n};\n\nclass SanitizeHtmlPipe {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    transform(value) {\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n    }\n}\nSanitizeHtmlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: SanitizeHtmlPipe, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSanitizeHtmlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: SanitizeHtmlPipe, name: \"sanitizeHtml\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: SanitizeHtmlPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'sanitizeHtml',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }]; } });\n\nclass ToggleCommandComponent {\n    constructor(ngxeService, menuService) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.isActive = false;\n        this.disabled = false;\n        this.update = (view) => {\n            const { state } = view;\n            const command = ToggleCommands[this.name];\n            this.isActive = command.isActive(state);\n            this.disabled = !command.canExecute(state);\n        };\n    }\n    get name() {\n        return this.toolbarItem;\n    }\n    toggle(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        const command = ToggleCommands[this.name];\n        command.toggle()(state, dispatch);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    ngOnInit() {\n        this.html = Icon.get(this.name);\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nToggleCommandComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ToggleCommandComponent, deps: [{ token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nToggleCommandComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ToggleCommandComponent, selector: \"ngx-toggle-command\", inputs: { toolbarItem: \"toolbarItem\" }, host: { properties: { \"class.NgxEditor__MenuItem--Active\": \"this.isActive\", \"class.NgxEditor--Disabled\": \"this.disabled\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\", styles: [\"\"], pipes: { \"sanitizeHtml\": SanitizeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ToggleCommandComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-toggle-command', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { toolbarItem: [{\n                type: Input\n            }], isActive: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__MenuItem--Active']\n            }], disabled: [{\n                type: HostBinding,\n                args: ['class.NgxEditor--Disabled']\n            }] } });\n\nclass LinkComponent {\n    constructor(el, ngxeService, menuService) {\n        this.el = el;\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.canExecute = true;\n        this.form = new FormGroup({\n            href: new FormControl('', [\n                Validators$1.required,\n                Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)'),\n            ]),\n            text: new FormControl('', [Validators$1.required]),\n            openInNewTab: new FormControl(true),\n        });\n        this.setText = () => {\n            const { state: { selection, doc } } = this.editorView;\n            const { empty, from, to } = selection;\n            const selectedText = !empty ? doc.textBetween(from, to) : '';\n            if (selectedText) {\n                this.text.patchValue(selectedText);\n                this.text.disable();\n            }\n        };\n        this.update = (view) => {\n            const { state } = view;\n            this.isActive = Link.isActive(state, { strict: false });\n            this.canExecute = Link.canExecute(state);\n        };\n    }\n    get valid() {\n        return this.isActive || this.showPopup;\n    }\n    get disabled() {\n        return !this.canExecute;\n    }\n    get icon() {\n        return Icon.get(this.isActive ? 'unlink' : 'link');\n    }\n    get title() {\n        return this.ngxeService.locals.get(this.isActive ? 'removeLink' : 'insertLink');\n    }\n    get href() {\n        return this.form.get('href');\n    }\n    get text() {\n        return this.form.get('text');\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hideForm();\n        }\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    hideForm() {\n        this.showPopup = false;\n        this.form.reset({\n            href: '',\n            text: '',\n            openInNewTab: true,\n        });\n        this.text.enable();\n    }\n    onMouseDown(e) {\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        if (this.isActive) {\n            Link.remove(state, dispatch);\n            return;\n        }\n        this.showPopup = !this.showPopup;\n        if (this.showPopup) {\n            this.setText();\n        }\n    }\n    insertLink(e) {\n        e.preventDefault();\n        const { text, href, openInNewTab } = this.form.getRawValue();\n        const { dispatch, state } = this.editorView;\n        const { selection } = state;\n        const attrs = {\n            title: href,\n            href,\n            target: openInNewTab ? '_blank' : '_self',\n        };\n        if (selection.empty) {\n            Link.insert(text, attrs)(state, dispatch);\n            this.editorView.focus();\n        }\n        else {\n            Link.update(attrs)(state, dispatch);\n        }\n        this.hideForm();\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nLinkComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LinkComponent, deps: [{ token: i0.ElementRef }, { token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nLinkComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: LinkComponent, selector: \"ngx-link\", host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" }, properties: { \"class.NgxEditor__MenuItem--Active\": \"this.valid\", \"class.NgxEditor--Disabled\": \"this.disabled\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab')}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i4.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }], pipes: { \"sanitizeHtml\": SanitizeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: LinkComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-link', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab')}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { valid: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__MenuItem--Active']\n            }], disabled: [{\n                type: HostBinding,\n                args: ['class.NgxEditor--Disabled']\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nclass ImageComponent {\n    constructor(el, ngxeService, menuService) {\n        this.el = el;\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.form = new FormGroup({\n            src: new FormControl('', [\n                Validators$1.required,\n                Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)'),\n            ]),\n            alt: new FormControl(''),\n            title: new FormControl(''),\n        });\n        this.update = (view) => {\n            const { state } = view;\n            this.isActive = Image.isActive(state);\n        };\n    }\n    get valid() {\n        return this.isActive || this.showPopup;\n    }\n    get icon() {\n        return Icon.get('image');\n    }\n    get src() {\n        return this.form.get('src');\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hideForm();\n        }\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    hideForm() {\n        this.showPopup = false;\n        this.form.reset({\n            src: '',\n            alt: '',\n            title: '',\n        });\n    }\n    onMouseDown(e) {\n        if (e.button !== 0) {\n            return;\n        }\n        this.showPopup = !this.showPopup;\n        if (this.showPopup) {\n            this.fillForm();\n        }\n    }\n    fillForm() {\n        const { state } = this.editorView;\n        const { selection } = state;\n        if (selection instanceof NodeSelection && this.isActive) {\n            const { src, alt = '', title = '' } = selection.node.attrs;\n            this.form.setValue({\n                src,\n                alt,\n                title,\n            });\n        }\n    }\n    insertLink(e) {\n        e.preventDefault();\n        const { src, alt, title } = this.form.getRawValue();\n        const { dispatch, state } = this.editorView;\n        const attrs = {\n            alt,\n            title,\n        };\n        Image.insert(src, attrs)(state, dispatch);\n        this.editorView.focus();\n        this.hideForm();\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nImageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ImageComponent, deps: [{ token: i0.ElementRef }, { token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nImageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ImageComponent, selector: \"ngx-image\", host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" }, properties: { \"class.NgxEditor__MenuItem--Active\": \"this.valid\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"getLabel('insertImage')\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }], pipes: { \"sanitizeHtml\": SanitizeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ImageComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-image', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"getLabel('insertImage')\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { valid: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__MenuItem--Active']\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nclass DropdownComponent {\n    constructor(ngxeService, menuService, el) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.el = el;\n        this.isDropdownOpen = false;\n        this.disabledItems = [];\n        this.update = (view) => {\n            const { state } = view;\n            this.disabledItems = [];\n            const activeItems = [];\n            this.items.forEach((item) => {\n                const command = ToggleCommands[item];\n                const isActive = command.isActive(state);\n                if (isActive) {\n                    activeItems.push(item);\n                }\n                if (!command.canExecute(state)) {\n                    this.disabledItems.push(item);\n                }\n            });\n            if (activeItems.length === 1) {\n                [this.activeItem] = activeItems;\n            }\n            else {\n                this.activeItem = null;\n            }\n        };\n    }\n    get isSelected() {\n        return Boolean(this.activeItem || this.isDropdownOpen);\n    }\n    get isDropdownDisabled() {\n        return this.disabledItems.length === this.items.length;\n    }\n    onDocumentClick(target) {\n        if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {\n            this.isDropdownOpen = false;\n        }\n    }\n    getName(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    toggleDropdown(e) {\n        e.preventDefault();\n        this.isDropdownOpen = !this.isDropdownOpen;\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onClick(e, item) {\n        e.preventDefault();\n        // consider only left click\n        if (e.button !== 0) {\n            return;\n        }\n        const command = ToggleCommands[item];\n        const { state, dispatch } = this.editorView;\n        command.toggle()(state, dispatch);\n        this.isDropdownOpen = false;\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: DropdownComponent, deps: [{ token: NgxEditorService }, { token: MenuService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: DropdownComponent, selector: \"ngx-dropdown\", inputs: { group: \"group\", items: \"items\" }, host: { listeners: { \"document:mousedown\": \"onDocumentClick($event.target)\" }, properties: { \"class.NgxEditor__Dropdown--Selected\": \"this.isSelected\", \"class.NgxEditor--Disabled\": \"this.isDropdownDisabled\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group)}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item)}}\\n  </div>\\n</div>\\n\", styles: [\"\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: DropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-dropdown', template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group)}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item)}}\\n  </div>\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }, { type: i0.ElementRef }]; }, propDecorators: { group: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], isSelected: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__Dropdown--Selected']\n            }], isDropdownDisabled: [{\n                type: HostBinding,\n                args: ['class.NgxEditor--Disabled']\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event.target']]\n            }] } });\n\nclass ColorPickerComponent {\n    constructor(el, menuService, ngxeService) {\n        this.el = el;\n        this.menuService = menuService;\n        this.ngxeService = ngxeService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.activeColors = [];\n        this.canExecute = true;\n        this.update = (view) => {\n            const { state } = view;\n            this.canExecute = this.command.canExecute(state);\n            this.isActive = this.command.isActive(state);\n            this.activeColors = [];\n            if (this.isActive) {\n                this.activeColors = this.command.getActiveColors(state);\n            }\n        };\n    }\n    get valid() {\n        return this.isActive || this.showPopup;\n    }\n    get disabled() {\n        return !this.canExecute;\n    }\n    get title() {\n        return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');\n    }\n    get icon() {\n        return Icon.get(this.type === 'text_color' ? 'text_color' : 'color_fill');\n    }\n    get command() {\n        return this.type === 'text_color' ? TextColor : TextBackgroundColor;\n    }\n    getContrastYIQ(hexcolor) {\n        const color = hexcolor.replace('#', '');\n        const r = parseInt(color.substring(0, 2), 16);\n        const g = parseInt(color.substring(2, 4), 16);\n        const b = parseInt(color.substring(4, 6), 16);\n        const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n        return yiq >= 128 ? 'black' : 'white';\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hidePopup();\n        }\n    }\n    hidePopup() {\n        this.showPopup = false;\n    }\n    togglePopup(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        this.showPopup = !this.showPopup;\n    }\n    remove(e) {\n        e.preventDefault();\n        const { state, dispatch } = this.editorView;\n        this.command.remove()(state, dispatch);\n        this.hidePopup();\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onColorSelect(e, color) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        if (this.type === 'text_color') {\n            const attrs = { color };\n            this.command.apply(attrs)(state, dispatch);\n        }\n        else {\n            const attrs = { backgroundColor: color };\n            this.command.apply(attrs)(state, dispatch);\n        }\n        if (!this.editorView.hasFocus()) {\n            this.editorView.focus();\n        }\n        this.hidePopup();\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nColorPickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ColorPickerComponent, deps: [{ token: i0.ElementRef }, { token: MenuService }, { token: NgxEditorService }], target: i0.ɵɵFactoryTarget.Component });\nColorPickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ColorPickerComponent, selector: \"ngx-color-picker\", inputs: { presets: \"presets\", type: \"type\" }, host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" }, properties: { \"class.NgxEditor__MenuItem--Active\": \"this.valid\", \"class.NgxEditor--Disabled\": \"this.disabled\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove')}}\\n  </button>\\n</div>\\n\", styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"sanitizeHtml\": SanitizeHtmlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-color-picker', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove')}}\\n  </button>\\n</div>\\n\", styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MenuService }, { type: NgxEditorService }]; }, propDecorators: { presets: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], valid: [{\n                type: HostBinding,\n                args: ['class.NgxEditor__MenuItem--Active']\n            }], disabled: [{\n                type: HostBinding,\n                args: ['class.NgxEditor--Disabled']\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nconst DEFAULT_TOOLBAR = [\n    ['bold', 'italic'],\n    ['code', 'blockquote'],\n    ['underline', 'strike'],\n    ['ordered_list', 'bullet_list'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n    ['align_left', 'align_center', 'align_right', 'align_justify'],\n];\nconst TOOLBAR_MINIMAL = [\n    ['bold', 'italic'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n];\nconst DEFAULT_COLOR_PRESETS = [\n    '#b60205',\n    '#d93f0b',\n    '#fbca04',\n    '#0e8a16',\n    '#006b75',\n    '#1d76db',\n    '#0052cc',\n    '#5319e7',\n    '#e99695',\n    '#f9d0c4',\n    '#fef2c0',\n    '#c2e0c6',\n    '#bfdadc',\n    '#c5def5',\n    '#bfd4f2',\n    '#d4c5f9',\n];\nclass MenuComponent {\n    constructor(menuService) {\n        this.menuService = menuService;\n        this.toolbar = TOOLBAR_MINIMAL;\n        this.colorPresets = DEFAULT_COLOR_PRESETS;\n        this.disabled = false;\n        this.customMenuRef = null;\n        this.dropdownPlacement = 'bottom';\n        this.toggleCommands = [\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'code',\n            'blockquote',\n            'ordered_list',\n            'bullet_list',\n            'align_left',\n            'align_center',\n            'align_right',\n            'align_justify',\n        ];\n        this.iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];\n        this.dropdownContainerClass = ['NgxEditor__Dropdown'];\n        this.seperatorClass = ['NgxEditor__Seperator'];\n    }\n    get presets() {\n        const col = 8;\n        const colors = [];\n        this.colorPresets.forEach((color, index) => {\n            const row = Math.floor(index / col);\n            if (!colors[row]) {\n                colors.push([]);\n            }\n            colors[row].push(color);\n        });\n        return colors;\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    isDropDown(item) {\n        if (item?.heading) {\n            return true;\n        }\n        return false;\n    }\n    getDropdownItems(item) {\n        return item;\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new Error('NgxEditor: Required editor instance');\n        }\n        this.menuService.editor = this.editor;\n    }\n}\nMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: MenuComponent, deps: [{ token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: MenuComponent, selector: \"ngx-editor-menu\", inputs: { toolbar: \"toolbar\", colorPresets: \"colorPresets\", disabled: \"disabled\", editor: \"editor\", customMenuRef: \"customMenuRef\", dropdownPlacement: \"dropdownPlacement\" }, providers: [MenuService], ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\", styles: [\"\"], components: [{ type: ToggleCommandComponent, selector: \"ngx-toggle-command\", inputs: [\"toolbarItem\"] }, { type: LinkComponent, selector: \"ngx-link\" }, { type: ImageComponent, selector: \"ngx-image\" }, { type: DropdownComponent, selector: \"ngx-dropdown\", inputs: [\"group\", \"items\"] }, { type: ColorPickerComponent, selector: \"ngx-color-picker\", inputs: [\"presets\", \"type\"] }], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"keyvalue\": i3.KeyValuePipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: MenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor-menu', providers: [MenuService], template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\", styles: [\"\"] }]\n        }], ctorParameters: function () { return [{ type: MenuService }]; }, propDecorators: { toolbar: [{\n                type: Input\n            }], colorPresets: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], editor: [{\n                type: Input\n            }], customMenuRef: [{\n                type: Input\n            }], dropdownPlacement: [{\n                type: Input\n            }] } });\n\nclass BubbleComponent {\n    constructor(sanitizeHTML, ngxeService) {\n        this.sanitizeHTML = sanitizeHTML;\n        this.ngxeService = ngxeService;\n        this.execulableItems = [];\n        this.activeItems = [];\n        this.toolbar = [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['ordered_list', 'bullet_list', 'blockquote', 'code'],\n            ['align_left', 'align_center', 'align_right', 'align_justify'],\n        ];\n        this.toggleCommands = [\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'ordered_list',\n            'bullet_list',\n            'blockquote',\n            'code',\n            'align_left',\n            'align_center',\n            'align_right',\n            'align_justify',\n        ];\n    }\n    get view() {\n        return this.editor.view;\n    }\n    getIcon(name) {\n        const icon = Icon.get(name);\n        return this.sanitizeHTML.transform(icon);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onClick(e, commandName) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.view;\n        const command = ToggleCommands[commandName];\n        command.toggle()(state, dispatch);\n    }\n    update(view) {\n        this.activeItems = [];\n        this.execulableItems = [];\n        const { state } = view;\n        this.toggleCommands.forEach((toolbarItem) => {\n            const command = ToggleCommands[toolbarItem];\n            const isActive = command.isActive(state);\n            if (isActive) {\n                this.activeItems.push(toolbarItem);\n            }\n            const canExecute = command.canExecute(state);\n            if (canExecute) {\n                this.execulableItems.push(toolbarItem);\n            }\n        });\n    }\n    ngOnInit() {\n        this.updateSubscription = this.editor.update\n            .subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nBubbleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: BubbleComponent, deps: [{ token: SanitizeHtmlPipe }, { token: NgxEditorService }], target: i0.ɵɵFactoryTarget.Component });\nBubbleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: BubbleComponent, selector: \"ngx-bubble\", inputs: { editor: \"editor\" }, ngImport: i0, template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item)\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"], directives: [{ type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: BubbleComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-bubble', template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item)\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: SanitizeHtmlPipe }, { type: NgxEditorService }]; }, propDecorators: { editor: [{\n                type: Input\n            }] } });\n\nclass FloatingMenuComponent {\n    constructor(el, sanitizeHTML) {\n        this.el = el;\n        this.sanitizeHTML = sanitizeHTML;\n        this.autoPlace = false;\n        this.posLeft = 0;\n        this.posTop = 0;\n        this.showMenu = false;\n        this.dragging = false;\n    }\n    get display() {\n        return {\n            visibility: this.showMenu ? 'visible' : 'hidden',\n            opacity: this.showMenu ? '1' : '0',\n            top: `${this.posTop}px`,\n            left: `${this.posLeft}px`,\n        };\n    }\n    get view() {\n        return this.editor.view;\n    }\n    onMouseDown(e) {\n        const target = e.target;\n        if (this.el.nativeElement.contains(target) && target.nodeName !== 'INPUT') {\n            e.preventDefault();\n            return;\n        }\n        this.dragging = true;\n    }\n    onKeyDown(e) {\n        const target = e.target;\n        if (target.nodeName === 'INPUT') {\n            return;\n        }\n        this.dragging = true;\n        this.hide();\n    }\n    onMouseUp(e) {\n        const target = e.target;\n        if (this.el.nativeElement.contains(target) || target.nodeName === 'INPUT') {\n            e.preventDefault();\n            return;\n        }\n        this.dragging = false;\n        this.useUpdate();\n    }\n    onKeyUp(e) {\n        const target = e.target;\n        if (target.nodeName === 'INPUT') {\n            return;\n        }\n        this.dragging = false;\n        this.useUpdate();\n    }\n    useUpdate() {\n        if (!this.view) {\n            return;\n        }\n        this.update(this.view);\n    }\n    hide() {\n        this.showMenu = false;\n    }\n    show() {\n        this.showMenu = true;\n    }\n    async calculateBubblePosition(view) {\n        const { state: { selection } } = view;\n        const { from, to } = selection;\n        const start = view.coordsAtPos(from);\n        const end = view.coordsAtPos(to);\n        const selectionElement = {\n            getBoundingClientRect() {\n                if (selection instanceof NodeSelection) {\n                    const node = view.nodeDOM(from);\n                    return node.getBoundingClientRect();\n                }\n                const { top, left } = start;\n                const { bottom, right } = end;\n                return {\n                    x: left,\n                    y: top,\n                    top,\n                    bottom,\n                    left,\n                    right,\n                    width: right - left,\n                    height: bottom - top,\n                };\n            },\n        };\n        // the floating bubble itself\n        const bubbleEl = this.el.nativeElement;\n        const { x: left, y: top } = await computePosition(selectionElement, bubbleEl, {\n            placement: 'top',\n            middleware: [\n                offset(5),\n                this.autoPlace && autoPlacement({\n                    boundary: view.dom,\n                    padding: 5,\n                    allowedPlacements: ['top', 'bottom'],\n                }),\n                {\n                    // prevent overflow on right and left side\n                    // since only top and bottom placements are allowed\n                    // autoplacement can't handle overflows on the right and left\n                    name: 'overflowMiddleware',\n                    async fn(middlewareArgs) {\n                        const overflow = await detectOverflow(middlewareArgs, {\n                            boundary: view.dom,\n                            padding: 5,\n                        });\n                        // overflows left\n                        if (overflow.left > 0) {\n                            return {\n                                x: middlewareArgs.x + overflow.left,\n                            };\n                        }\n                        // overflows right\n                        if (overflow.right > 0) {\n                            return {\n                                x: middlewareArgs.x - overflow.right,\n                            };\n                        }\n                        return {};\n                    },\n                },\n            ].filter(Boolean),\n        });\n        return {\n            left,\n            top,\n        };\n    }\n    canShowMenu(view) {\n        const { state } = view;\n        const { selection } = state;\n        const { empty } = selection;\n        if (selection instanceof NodeSelection) {\n            if (selection.node.type.name === 'image') {\n                return false;\n            }\n        }\n        const hasFocus = this.view.hasFocus();\n        if (!hasFocus || empty || this.dragging) {\n            this.hide();\n            return false;\n        }\n        return true;\n    }\n    update(view) {\n        const canShowMenu = this.canShowMenu(view);\n        if (!canShowMenu) {\n            this.hide();\n            return;\n        }\n        this.calculateBubblePosition(this.view).then(({ top, left }) => {\n            if (!this.canShowMenu) {\n                this.hide();\n                return;\n            }\n            this.posLeft = left;\n            this.posTop = top;\n            this.show();\n        });\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new Error('NgxEditor: Required editor instance');\n        }\n        this.updateSubscription = this.editor.update\n            .subscribe((view) => {\n            this.update(view);\n        });\n        this.resizeSubscription = fromEvent(window, 'resize').pipe(throttleTime(500, asyncScheduler, { leading: true, trailing: true })).subscribe(() => {\n            this.useUpdate();\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n        this.resizeSubscription.unsubscribe();\n    }\n}\nFloatingMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: FloatingMenuComponent, deps: [{ token: i0.ElementRef }, { token: SanitizeHtmlPipe }], target: i0.ɵɵFactoryTarget.Component });\nFloatingMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: FloatingMenuComponent, selector: \"ngx-editor-floating-menu\", inputs: { editor: \"editor\", autoPlace: \"autoPlace\" }, host: { listeners: { \"document:mousedown\": \"onMouseDown($event)\", \"document:keydown\": \"onKeyDown($event)\", \"document:mouseup\": \"onMouseUp($event)\", \"document:keyup\": \"onKeyUp($event)\" }, properties: { \"style\": \"this.display\" } }, ngImport: i0, template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"], components: [{ type: BubbleComponent, selector: \"ngx-bubble\", inputs: [\"editor\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: FloatingMenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor-floating-menu', template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: SanitizeHtmlPipe }]; }, propDecorators: { display: [{\n                type: HostBinding,\n                args: ['style']\n            }], editor: [{\n                type: Input\n            }], autoPlace: [{\n                type: Input\n            }], onMouseDown: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['document:keydown', ['$event']]\n            }], onMouseUp: [{\n                type: HostListener,\n                args: ['document:mouseup', ['$event']]\n            }], onKeyUp: [{\n                type: HostListener,\n                args: ['document:keyup', ['$event']]\n            }] } });\n\nclass MenuModule {\n}\nMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: MenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: MenuModule, declarations: [\n        // pipes\n        SanitizeHtmlPipe,\n        // components\n        MenuComponent,\n        ToggleCommandComponent,\n        LinkComponent,\n        DropdownComponent,\n        ImageComponent,\n        ColorPickerComponent,\n        FloatingMenuComponent,\n        BubbleComponent], imports: [CommonModule,\n        ReactiveFormsModule], exports: [MenuComponent,\n        FloatingMenuComponent] });\nMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: MenuModule, providers: [\n        SanitizeHtmlPipe,\n    ], imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: MenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                    ],\n                    declarations: [\n                        // pipes\n                        SanitizeHtmlPipe,\n                        // components\n                        MenuComponent,\n                        ToggleCommandComponent,\n                        LinkComponent,\n                        DropdownComponent,\n                        ImageComponent,\n                        ColorPickerComponent,\n                        FloatingMenuComponent,\n                        BubbleComponent,\n                    ],\n                    providers: [\n                        SanitizeHtmlPipe,\n                    ],\n                    exports: [\n                        MenuComponent,\n                        FloatingMenuComponent,\n                    ],\n                }]\n        }] });\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\nclass NgxEditorModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxEditorModule,\n            providers: [\n                {\n                    provide: NGX_EDITOR_CONFIG_TOKEN,\n                    useValue: config,\n                },\n                {\n                    provide: NgxEditorServiceConfig,\n                    useFactory: provideMyServiceOptions,\n                    deps: [NGX_EDITOR_CONFIG_TOKEN],\n                },\n            ],\n        };\n    }\n    static forChild(config) {\n        return {\n            ngModule: NgxEditorModule,\n            providers: [\n                {\n                    provide: NGX_EDITOR_CONFIG_TOKEN,\n                    useValue: config,\n                },\n                {\n                    provide: NgxEditorServiceConfig,\n                    useFactory: provideMyServiceOptions,\n                    deps: [NGX_EDITOR_CONFIG_TOKEN],\n                },\n                NgxEditorService,\n            ],\n        };\n    }\n}\nNgxEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorModule, declarations: [NgxEditorComponent,\n        ImageViewComponent], imports: [CommonModule,\n        MenuModule], exports: [NgxEditorComponent,\n        MenuComponent,\n        FloatingMenuComponent] });\nNgxEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorModule, providers: [], imports: [[\n            CommonModule,\n            MenuModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgxEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MenuModule,\n                    ],\n                    providers: [],\n                    declarations: [\n                        NgxEditorComponent,\n                        ImageViewComponent,\n                    ],\n                    exports: [\n                        NgxEditorComponent,\n                        MenuComponent,\n                        FloatingMenuComponent,\n                    ],\n                }]\n        }] });\n\nconst isEmptyInputValue = (value) => {\n    // we don't check for string here so it also works with arrays\n    return value === null || value.length === 0;\n};\nconst hasValidLength = (value) => {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value !== null && typeof value.length === 'number';\n};\nconst isDocEmpty = (doc) => {\n    if (!doc) {\n        return true;\n    }\n    const { childCount, firstChild } = doc;\n    return Boolean(childCount === 1 && firstChild?.isTextblock && firstChild.content.size === 0);\n};\n// @dynamic\nclass Validators {\n    static required(userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const isEmpty = isDocEmpty(doc);\n            if (!isEmpty) {\n                return null;\n            }\n            return {\n                required: true,\n            };\n        };\n    }\n    static maxLength(maxLength, userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const value = doc.textContent;\n            if (hasValidLength(value) && value.length > maxLength) {\n                return {\n                    maxlength: {\n                        requiredLength: maxLength,\n                        actualLength: value.length,\n                    },\n                };\n            }\n            return null;\n        };\n    }\n    static minLength(minLength, userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const value = doc.textContent;\n            if (isEmptyInputValue(value) || !hasValidLength(value)) {\n                // don't validate empty values to allow optional controls\n                // don't validate values without `length` property\n                return null;\n            }\n            if (value.length < minLength) {\n                return {\n                    minlength: {\n                        requiredLength: minLength, actualLength: value.length,\n                    },\n                };\n            }\n            return null;\n        };\n    }\n}\n\nconst execMark = (name, toggle = false) => {\n    return (state, dispatch) => {\n        const command = new Mark(name);\n        if (!toggle) {\n            return command.apply()(state, dispatch);\n        }\n        return command.toggle()(state, dispatch);\n    };\n};\nclass EditorCommands {\n    constructor(view) {\n        this.applyTrx = (tr) => {\n            this.state = this.state.apply(tr ?? this.tr);\n            this.tr = this.state.tr;\n            this.tr.setMeta('APPLIED_TRX', true);\n        };\n        this.dispatch = (tr) => {\n            this.applyTrx(tr);\n        };\n        if (!view) {\n            throw Error('NgxEditor: Required view to initialize commands.');\n        }\n        this.view = view;\n        this.state = view.state;\n        this.tr = this.view.state.tr;\n    }\n    exec() {\n        // No changes applied\n        if (!this.tr.getMeta('APPLIED_TRX')) {\n            return false;\n        }\n        const forceEmit = !this.view.state.doc.eq(this.state.doc);\n        this.view.updateState(this.state);\n        const tr = this.tr\n            .setMeta('FORCE_EMIT', forceEmit);\n        this.view.dispatch(tr);\n        return true;\n    }\n    focus() {\n        this.view.focus();\n        return this;\n    }\n    scrollIntoView() {\n        this.tr.scrollIntoView();\n        this.applyTrx();\n        return this;\n    }\n    insertText(text) {\n        this.tr.insertText(text);\n        this.applyTrx();\n        return this;\n    }\n    insertNewLine() {\n        const newLineCommands = [newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock];\n        chainCommands(...newLineCommands)(this.state, this.dispatch);\n        return this;\n    }\n    applyMark(name) {\n        execMark(name, false)(this.state, this.dispatch);\n        return this;\n    }\n    toggleMark(name) {\n        execMark(name, true)(this.state, this.dispatch);\n        return this;\n    }\n    bold() {\n        execMark('strong')(this.state, this.dispatch);\n        return this;\n    }\n    toggleBold() {\n        execMark('strong', true)(this.state, this.dispatch);\n        return this;\n    }\n    italics() {\n        execMark('em')(this.state, this.dispatch);\n        return this;\n    }\n    toggleItalics() {\n        execMark('em', true)(this.state, this.dispatch);\n        return this;\n    }\n    underline() {\n        execMark('u')(this.state, this.dispatch);\n        return this;\n    }\n    toggleUnderline() {\n        execMark('u', true)(this.state, this.dispatch);\n        return this;\n    }\n    strike() {\n        execMark('s')(this.state, this.dispatch);\n        return this;\n    }\n    toggleStrike() {\n        execMark('s', true)(this.state, this.dispatch);\n        return this;\n    }\n    code() {\n        execMark('code')(this.state, this.dispatch);\n        return this;\n    }\n    toggleCode() {\n        execMark('code', true)(this.state, this.dispatch);\n        return this;\n    }\n    toggleOrderedList() {\n        const command = new ListItem(false);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    toggleBulletList() {\n        const command = new ListItem(true);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    toggleHeading(level) {\n        const command = new Heading(level);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    insertLink(text, attrs) {\n        const command = new Link$1();\n        command.insert(text, attrs)(this.state, this.dispatch);\n        return this;\n    }\n    updateLink(attrs) {\n        const command = new Link$1();\n        command.update(attrs)(this.state, this.dispatch);\n        return this;\n    }\n    insertImage(src, attrs = {}) {\n        const command = new Image$1();\n        command.insert(src, attrs)(this.state, this.dispatch);\n        return this;\n    }\n    textColor(color) {\n        const command = new TextColor$1('text_color');\n        command.apply({ color })(this.state, this.dispatch);\n        return this;\n    }\n    backgroundColor(color) {\n        const command = new TextColor$1('text_background_color');\n        command.apply({ backgroundColor: color })(this.state, this.dispatch);\n        return this;\n    }\n    removeTextColor() {\n        const command = new TextColor$1('text_color');\n        command.remove()(this.state, this.dispatch);\n        return this;\n    }\n    removeBackgroundColor() {\n        const command = new TextColor$1('text_background_color');\n        command.remove()(this.state, this.dispatch);\n        return this;\n    }\n    align(p) {\n        const command = new TextAlign(p);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    insertHTML(html) {\n        const { selection, schema, tr } = this.state;\n        const { from, to } = selection;\n        const element = document.createElement('div');\n        element.innerHTML = html.trim();\n        const slice = DOMParser.fromSchema(schema).parseSlice(element);\n        const transaction = tr.replaceRange(from, to, slice);\n        this.applyTrx(transaction);\n        return this;\n    }\n}\n\nconst isMacOs = typeof navigator !== 'undefined'\n    ? (/Mac/).test(navigator.platform)\n    : false;\n// Input rules ref: https://github.com/ProseMirror/prosemirror-example-setup/\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nconst blockQuoteRule = (nodeType) => {\n    return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nconst orderedListRule = (nodeType) => {\n    return wrappingInputRule(/^(?:\\d+)\\.\\s$/, nodeType, (match) => ({ order: Number(match[1]) }), (match, node) => node.childCount + node.attrs['order'] === Number(match[1]));\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nconst bulletListRule = (nodeType) => {\n    return wrappingInputRule(/^\\s*(?:[-+*])\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nconst codeBlockRule = (nodeType) => {\n    return textblockTypeInputRule(/^```$/, nodeType);\n};\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nconst headingRule = (nodeType, maxLevel) => {\n    return textblockTypeInputRule(new RegExp(`^(#{1,${maxLevel}})\\\\s$`), nodeType, (match) => ({ level: match[1].length }));\n};\n// : (MarkType) → InputRule\n// Wraps matching text with bold mark\nconst boldRule = (markType) => {\n    return markInputRule(/(?:^|\\s)(?:(?:\\*\\*|__)(?:(?:[^*_]+))(?:\\*\\*|__))$/, markType);\n};\n// : (MarkType) → InputRule\n// Wraps matching text with em mark\nconst emRule = (markType) => {\n    return markInputRule(/(?:^|\\s)(?:(?:\\*|_)(?:(?:[^*_]+))(?:\\*|_))$/, markType);\n};\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nconst buildInputRules = (schema) => {\n    const rules = smartQuotes.concat(ellipsis, emDash);\n    rules.push(boldRule(schema.marks['strong']));\n    rules.push(emRule(schema.marks['em']));\n    rules.push(blockQuoteRule(schema.nodes['blockquote']));\n    rules.push(orderedListRule(schema.nodes['ordered_list']));\n    rules.push(bulletListRule(schema.nodes['bullet_list']));\n    rules.push(codeBlockRule(schema.nodes['code_block']));\n    rules.push(headingRule(schema.nodes['heading'], 6));\n    return inputRules({ rules });\n};\nconst getKeyboardShortcuts = (schema, options) => {\n    const historyKeyMap = {};\n    historyKeyMap['Mod-z'] = undo;\n    if (isMacOs) {\n        historyKeyMap['Shift-Mod-z'] = redo;\n    }\n    else {\n        historyKeyMap['Mod-y'] = redo;\n    }\n    const plugins = [\n        keymap({\n            'Mod-b': toggleMark(schema.marks['strong']),\n            'Mod-i': toggleMark(schema.marks['em']),\n            'Mod-u': toggleMark(schema.marks['u']),\n            'Mod-`': toggleMark(schema.marks['code']),\n        }),\n        keymap({\n            'Enter': splitListItem(schema.nodes['list_item']),\n            'Shift-Enter': chainCommands(exitCode, (state, dispatch) => {\n                const { tr } = state;\n                const br = schema.nodes['hard_break'];\n                dispatch(tr.replaceSelectionWith(br.create()).scrollIntoView());\n                return true;\n            }),\n            'Mod-[': liftListItem(schema.nodes['list_item']),\n            'Mod-]': sinkListItem(schema.nodes['list_item']),\n            'Tab': sinkListItem(schema.nodes['list_item']),\n        }),\n        keymap(baseKeymap),\n    ];\n    if (options.history) {\n        plugins.push(keymap(historyKeyMap));\n    }\n    return plugins;\n};\nconst getDefaultPlugins = (schema, options) => {\n    const plugins = [];\n    if (options.keyboardShortcuts) {\n        plugins.push(...getKeyboardShortcuts(schema, { history: options.history }));\n    }\n    if (options.history) {\n        plugins.push(history());\n    }\n    if (options.inputRules) {\n        plugins.push(buildInputRules(schema));\n    }\n    return plugins;\n};\n\nconst defaultFeatures = {\n    linkOnPaste: true,\n    resizeImage: true,\n};\nconst DEFAULT_OPTIONS = {\n    content: null,\n    history: true,\n    keyboardShortcuts: true,\n    inputRules: true,\n    schema: schema,\n    plugins: [],\n    nodeViews: {},\n    attributes: {},\n    features: defaultFeatures,\n};\nclass Editor {\n    constructor(options = DEFAULT_OPTIONS) {\n        this.valueChangesSubject = new Subject();\n        this.updateSubject = new Subject();\n        this.options = { ...DEFAULT_OPTIONS, ...options };\n        this.createEditor();\n    }\n    get valueChanges() {\n        return this.valueChangesSubject.asObservable();\n    }\n    get update() {\n        return this.updateSubject.asObservable();\n    }\n    get schema() {\n        return this.options.schema || schema;\n    }\n    get commands() {\n        return new EditorCommands(this.view);\n    }\n    get features() {\n        return { ...defaultFeatures, ...this.options.features };\n    }\n    handleTransactions(tr) {\n        const state = this.view.state.apply(tr);\n        this.view.updateState(state);\n        this.updateSubject.next(this.view);\n        if (!tr.docChanged && !tr.getMeta('FORCE_EMIT')) {\n            return;\n        }\n        const json = state.doc.toJSON();\n        this.valueChangesSubject.next(json);\n    }\n    createEditor() {\n        const { options, schema } = this;\n        const { content = null, nodeViews } = options;\n        const { history = true, keyboardShortcuts = true, inputRules = true } = options;\n        const doc = parseContent(content, schema);\n        const plugins = options.plugins ?? [];\n        const attributes = options.attributes ?? {};\n        const defaultPlugins = getDefaultPlugins(schema, {\n            history,\n            keyboardShortcuts,\n            inputRules,\n        });\n        this.view = new EditorView(null, {\n            state: EditorState.create({\n                doc,\n                schema,\n                plugins: [...defaultPlugins, ...plugins],\n            }),\n            nodeViews,\n            dispatchTransaction: this.handleTransactions.bind(this),\n            attributes,\n        });\n    }\n    setContent(content) {\n        if (isNil(content)) {\n            return;\n        }\n        const { state } = this.view;\n        const { tr, doc } = state;\n        const newDoc = parseContent(content, this.schema);\n        tr.replaceWith(0, state.doc.content.size, newDoc);\n        // don't emit if both content is same\n        if (doc.eq(tr.doc)) {\n            return;\n        }\n        if (!tr.docChanged) {\n            return;\n        }\n        this.view.dispatch(tr);\n    }\n    registerPlugin(plugin) {\n        const { state } = this.view;\n        const plugins = [...state.plugins, plugin];\n        const newState = state.reconfigure({ plugins });\n        this.view.updateState(newState);\n    }\n    destroy() {\n        this.view.destroy();\n    }\n}\n\n/*\n * Public API Surface of ngx-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TOOLBAR, Editor, FloatingMenuComponent, MenuComponent, NgxEditorComponent, NgxEditorModule, TOOLBAR_MINIMAL, Validators, emptyDoc, parseContent, toDoc, toHTML };\n"],"names":["getBasePlacement","placement","split","getAlignment","getMainAxisFromPlacement","includes","getLengthFromAxis","axis","computeCoordsFromPlacement","_ref","reference","floating","commonX","x","width","commonY","y","height","coords","mainAxis","length","computePosition","config","strategy","middleware","platform","console","error","join","filter","name","Error","rects","getElementRects","statefulPlacement","middlewareData","_debug_loop_count_","i","fn","nextX","nextY","data","reset","initialPlacement","elements","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","middlewareArguments","options","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingClientRect","isElement","contextElement","getDocumentElement","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","offsetParent","getOffsetParent","min","Math","max","within","min$1","value","max$1","arrow","warn","basePlacement","arrowDimensions","getDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","centerOffset","hash$1","getOppositePlacement","replace","matched","getAlignmentSides","isStart","mainAlignmentSide","main","cross","hash","start","end","getOppositeAlignmentPlacement","basePlacements","allPlacements","reduce","acc","concat","getPlacementList","alignment","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_middlewareData$autoP3","_middlewareData$autoP4","_middlewareData$autoP5","_placementsSortedByLe","detectOverflowOptions","skip","placements","overflow","currentIndex","index","currentPlacement","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByLeastOverflow","slice","sort","a","b","placementThatFitsOnAllSides","find","every","getExpandedPlacements","oppositePlacement","flip","_middlewareData$flip","_middlewareData$flip2","checkMainAxis","crossAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","flipAlignment","isBasePlacement","overflowsData","push","side","_middlewareData$flip$","_middlewareData$flip3","nextIndex","resetPlacement","_overflowsData$slice$","getSideOffsets","isAnySideFullyClipped","some","hide","modifierArguments","referenceOverflow","floatingAltOverflow","referenceHiddenOffsets","escapedOffsets","referenceHidden","escaped","convertValueToCoords","multiplier","rawValue","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","_middlewareData$offse3","_middlewareData$offse4","isOriginSide","size","_middlewareData$size","apply","isEnd","heightSide","widthSide","xMin","xMax","yMin","yMax","dimensions","inline","_middlewareData$inlin","_await$platform$getCl","fallback","clientRects","Array","from","getClientRects","getBoundingClientRect","_clientRects$find","firstRect","lastRect","isTop","isLeftPlacement","maxRight","map","minLeft","measureRects","FocusKeyManager","i1","BidiModule","coerceBooleanProperty","coerceNumberProperty","hasModifierKey","SPACE","ENTER","DOCUMENT","i0","Directive","InjectionToken","EventEmitter","forwardRef","TemplateRef","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","Optional","ContentChild","ViewChild","Input","Output","QueryList","ContentChildren","NgModule","_getFocusedElementPierceShadowDom","Subject","of","startWith","takeUntil","CdkStepHeader","constructor","_elementRef","focus","nativeElement","ɵfac","ElementRef","ɵdir","type","args","selector","host","CdkStepLabel","template","nextId","StepperSelectionEvent","STEP_STATE","NUMBER","EDIT","DONE","ERROR","STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","interactedStream","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","editable","optional","completed","_getDefaultCompleted","stepControl","valid","hasError","_getDefaultError","invalid","select","selected","ngOnChanges","_stateChanged","_markAsInteracted","emit","_showError","showError","CdkStepper","ɵcmp","exportAs","encapsulation","None","changeDetection","OnPush","decorators","undefined","stepLabel","content","static","label","errorMessage","ariaLabel","ariaLabelledby","state","_dir","_changeDetectorRef","_document","_destroyed","steps","_sortedHeaders","_linear","_selectedIndex","selectionChange","_orientation","_groupId","linear","selectedIndex","newIndex","_steps","_isValidIndex","ngDevMode","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","step","indexOf","orientation","_keyManager","withVerticalOrientation","ngAfterContentInit","changes","pipe","subscribe","notifyOnChanges","ngAfterViewInit","_stepHeader","headers","documentPosition","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","withWrap","withHomeAndEnd","change","_layoutDirection","direction","withHorizontalOrientation","updateActiveItem","ngOnDestroy","destroy","next","complete","previous","forEach","_getStepLabelId","_getStepContentId","markForCheck","_getAnimationDirection","position","_getIndicatorType","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","_getFocusIndex","activeItemIndex","stepsArray","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","_onKeydown","event","hasModifier","keyCode","manager","preventDefault","onKeydown","control","isIncomplete","pending","stepperElement","focusedElement","contains","Directionality","ChangeDetectorRef","descendants","CdkStepperNext","CdkStepperPrevious","CdkStepperModule","ɵmod","ɵinj","imports","exports","declarations","i2","mixinColor","mixinDisabled","mixinDisableRipple","MatRipple","MatRippleModule","MatCommonModule","ANIMATION_MODULE_TYPE","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","_MatButtonBase","MatButton","elementRef","_focusMonitor","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","classList","add","color","monitor","stopMonitoring","origin","focusVia","_isRippleDisabled","disableRipple","disabled","attributes","attribute","hasAttribute","FocusMonitor","inputs","styles","ripple","MatAnchor","focusMonitor","animationMode","_ngZone","_haltDisabledEvents","stopImmediatePropagation","runOutsideAngular","addEventListener","removeEventListener","NgZone","tabIndex","MatButtonModule","SecurityContext","Injectable","SkipSelf","ErrorHandler","inject","Attribute","throwError","forkJoin","Subscription","tap","catchError","finalize","share","take","HttpClient","DomSanitizer","policy","getPolicy","window","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","html","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","MatIconRegistry","_httpClient","_sanitizer","document","_errorHandler","_svgIconConfigs","Map","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","className","set","classNameForFontAlias","get","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","getNamedSvgIcon","key","iconKey","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","clear","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","message","handleError","foundIcon","toString","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","cloneNode","removeAttribute","nodeName","toLowerCase","_setSvgAttributes","_toSvgElement","_svgElementFromString","appendChild","str","div","createElement","innerHTML","setAttribute","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","delete","configNamespace","svgElement","result","isSafeUrlWithOptions","ɵprov","providedIn","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","provide","deps","useFactory","_MatIconBase","MAT_ICON_LOCATION","factory","MAT_ICON_LOCATION_FACTORY","_location","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","funcIriPattern","MatIcon","_iconRegistry","ariaHidden","_inline","_currentIconFetch","EMPTY","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","newValue","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_splitIconName","parts","ngOnInit","ngAfterViewChecked","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","unsubscribe","_usingFontIcon","_setSvgElement","styleTags","querySelectorAll","textContent","path","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","remove","elem","fontSetClass","_previousFontSetClass","_previousFontIconClass","trim","attrs","elementsWithFuncIri","elementWithReference","getAttribute","match","rawName","_svgNamespace","_svgName","MatIconModule","i2$1","TemplatePortal","PortalModule","i5","CommonModule","ViewChildren","ErrorStateMatcher","i3","i3$1","switchMap","distinctUntilChanged","trigger","style","transition","animate","MatStepLabel","MatStepperIntl","optionalLabel","completedLabel","editableLabel","MAT_STEPPER_INTL_PROVIDER_FACTORY","parentIntl","MAT_STEPPER_INTL_PROVIDER","_MatStepHeaderBase","MatStepHeaderBase","MatStepHeader","_intl","changeDetectorRef","_intlSubscription","_stringLabel","_templateLabel","_getIconContext","active","_getDefaultTextForState","NgSwitch","NgSwitchCase","NgSwitchDefault","NgIf","NgTemplateOutlet","iconOverrides","matStepperAnimations","horizontalStepTransition","transform","visibility","verticalStepTransition","MatStepperIcon","templateRef","MatStepContent","_template","MatStep","stepper","_errorStateMatcher","_viewContainerRef","_isSelected","isSelected","_lazyContent","_portal","isErrorState","form","originalErrorState","customErrorState","MatStepper","ViewContainerRef","useExisting","CdkPortalOutlet","providers","_MatProxyStepperBase","MatHorizontalStepper","MatVerticalStepper","dir","animationDone","labelPosition","_iconOverrides","_animationDone","_icons","fromState","toState","_stepIsNavigable","NgForOf","animations","MatStepperNext","MatStepperPrevious","MatStepperModule","ComponentFactoryResolver","ApplicationRef","Pipe","HostBinding","HostListener","i4","NG_VALUE_ACCESSOR","FormGroup","FormControl","Validators","Validators$1","ReactiveFormsModule","Plugin","PluginKey","NodeSelection","EditorState","DecorationSet","Decoration","EditorView","Fragment","Slice","DOMSerializer","DOMParser","schema","marks","nodes","fromEvent","asyncScheduler","toggleMark","lift","wrapIn","setBlockType","newlineInCode","createParagraphNear","liftEmptyBlock","splitBlock","chainCommands","exitCode","baseKeymap","applyMark","removeLink","removeMark","isMarkActive","isNodeActive","getSelectionNodes","getSelectionMarks","markInputRule","liftListItem","wrapInList","splitListItem","sinkListItem","throttleTime","isNil","keymap","undo","redo","history","wrappingInputRule","textblockTypeInputRule","smartQuotes","ellipsis","emDash","inputRules","editablePlugin","init","tr","previousVal","getMeta","props","getState","isEnabled","class","PLACEHOLDER_CLASSNAME","placeholderPlugin","text","placeholder","decorations","doc","empty","decorate","node","pos","isBlock","to","nodeSize","placeholderNode","create","attributesPlugin","focusPlugin","cb","handleDOMEvents","blurPlugin","blur","ImageViewComponent","alt","title","outerWidth","imageResize","startResizing","e","resizeImage","evt","startX","pageX","startWidth","imgEl","isLeftResize","getComputedStyle","view","dom","editorWidth","parseInt","onMouseMove","currentX","diffInPx","computedWidth","onMouseUp","NgClass","src","ImageRezieView","getPos","injector","updating","handleResize","dispatch","transaction","setNodeMarkup","imageComponentRef","instance","resolvedPos","resolve","newSelection","setSelection","componentFactoryResolver","applicationRef","resolveComponentFactory","attachView","hostView","setNodeAttributes","resizeSubscription","computeChanges","prevAttrs","newAttrs","JSON","stringify","update","changed","ignoreMutation","selectNode","deselectNode","detachView","imageResizePlugin","nodeViews","image","HTTP_LINK_REGEX","linkify","fragment","linkified","isText","exec","link","cut","urlText","mark","href","addToSet","copy","fromArray","linkifyPlugin","transformPasted","openStart","openEnd","emptyDoc","toHTML","json","inputSchema","schema$1","contentNode","nodeFromJSON","fromSchema","serializeFragment","toDoc","el","parse","toJSON","parseContent","docJson","NgxEditorComponent","renderer","focusOut","focusIn","subscriptions","onChange","onTouched","writeValue","outputFormat","editor","setContent","registerOnChange","registerOnTouched","setDisabledState","isDisabled","setMeta","setProperty","handleChange","jsonDoc","setPlaceholder","registerPlugins","registerPlugin","features","linkOnPaste","ngxEditor","contentChangeSubscription","valueChanges","isFirstChange","currentValue","subscription","Renderer2","Injector","multi","MenuService","customMenuRefChange","setCustomMenuRef","c","bold","italic","code","underline","strike","orderedList","bulletList","quote","unlink","alignLeft","alignCenter","alignRight","alignJustify","textColor","colorFill","DEFAULT_ICON_HEIGHT","DEFAULT_ICON_WIDTH","DEFAULT_ICON_FILL","icons","ordered_list","bullet_list","blockquote","align_left","align_center","align_right","align_justify","text_color","color_fill","Icon","fill","Mark","toggle","isActive","canExecute","Blockqote","ListItem","isBulletList","getType","list_item","Heading","level","heading","selection","nodePos","$from","before","nodeAt","paragraph","nodesInSelection","supportedNodes","acitveNode","Boolean","TextAlign","align","applicable","nodesBetween","docChanged","defaultOptions","strict","Link$1","insert","linkAttrs","target","replaceSelectionWith","scrollIntoView","testAttrs","Image$1","imageAttrs","createAndFill","anchor","$anchor","nodeBefore","TextColor$1","attrName","isAtom","isLeaf","getActiveColors","colors","backgroundColor","STRONG","EM","CODE","UNDERLINE","STRIKE","BLOCKQUOTE","UL","OL","H1","H2","H3","H4","H5","H6","ALIGN_LEFT","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_JUSTIFY","LINK","IMAGE","TEXT_COLOR","TEXT_BACKGROUND_COLOR","ToggleCommands","h1","h2","h3","h4","h5","h6","Link","Image","TextColor","TextBackgroundColor","defaults","background_color","insertLink","insertImage","openInNewTab","altText","Locals","newLocals","locals","NgxEditorServiceConfig","NgxEditorService","provideMyServiceOptions","SanitizeHtmlPipe","bypassSecurityTrustHtml","ɵpipe","ToggleCommandComponent","ngxeService","menuService","command","toolbarItem","button","editorView","getTitle","updateSubscription","LinkComponent","showPopup","required","pattern","setText","selectedText","textBetween","patchValue","disable","icon","onDocumentClick","hideForm","getLabel","enable","onMouseDown","getRawValue","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","NgControlStatus","FormControlName","CheckboxControlValueAccessor","ImageComponent","fillForm","setValue","DropdownComponent","isDropdownOpen","disabledItems","activeItems","items","item","activeItem","isDropdownDisabled","getName","toggleDropdown","trackByIndex","onClick","group","ColorPickerComponent","activeColors","getContrastYIQ","hexcolor","r","substring","g","yiq","hidePopup","togglePopup","onColorSelect","hasFocus","NgStyle","presets","DEFAULT_TOOLBAR","TOOLBAR_MINIMAL","DEFAULT_COLOR_PRESETS","MenuComponent","toolbar","colorPresets","customMenuRef","dropdownPlacement","toggleCommands","iconContainerClass","dropdownContainerClass","seperatorClass","col","row","floor","isDropDown","getDropdownItems","KeyValuePipe","BubbleComponent","sanitizeHTML","execulableItems","getIcon","commandName","stopPropagation","FloatingMenuComponent","autoPlace","posLeft","posTop","showMenu","dragging","display","opacity","onKeyDown","useUpdate","onKeyUp","show","calculateBubblePosition","coordsAtPos","selectionElement","nodeDOM","bubbleEl","middlewareArgs","canShowMenu","then","leading","trailing","MenuModule","NGX_EDITOR_CONFIG_TOKEN","NgxEditorModule","forRoot","ngModule","useValue","forChild","isEmptyInputValue","hasValidLength","isDocEmpty","firstChild","isTextblock","userSchema","isEmpty","maxLength","maxlength","requiredLength","actualLength","minLength","minlength","execMark","EditorCommands","applyTrx","forceEmit","eq","updateState","insertText","insertNewLine","newLineCommands","toggleBold","italics","toggleItalics","toggleUnderline","toggleStrike","toggleCode","toggleOrderedList","toggleBulletList","toggleHeading","updateLink","removeTextColor","removeBackgroundColor","p","insertHTML","parseSlice","replaceRange","isMacOs","navigator","test","blockQuoteRule","orderedListRule","order","Number","bulletListRule","codeBlockRule","headingRule","maxLevel","RegExp","boldRule","markType","emRule","buildInputRules","rules","getKeyboardShortcuts","historyKeyMap","plugins","br","getDefaultPlugins","keyboardShortcuts","defaultFeatures","DEFAULT_OPTIONS","Editor","valueChangesSubject","updateSubject","createEditor","asObservable","commands","handleTransactions","defaultPlugins","dispatchTransaction","bind","newDoc","replaceWith","plugin","newState","reconfigure"],"sourceRoot":"webpack:///"}