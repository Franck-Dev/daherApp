{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/_services/applicationUpdates/update-app.service.ts","./src/app/_services/divers/alert.service.ts","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts","./src/app/pages/login/login.page.html"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Update } from 'src/app/_interface/update';\nimport { AlertService } from '../divers/alert.service';\nimport { RequestService } from '../request.service';\nimport { AuthService } from '../users/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UpdateAppService {\n\n  constructor(\n    private authService: AuthService,\n    private alertService: AlertService,\n    private requestService: RequestService\n\n  ) {\n  }\n\n\n\n  /**\n   *Si la promise retourn true c'est que toutes les updates sont vues\n   *Si la promise return false l'utilisateur reverra les update à sa prochaine connexion\n   *\n   * @return {*}  {Promise<boolean>}\n   * @memberof UpdateAppService\n   */\n  showUpdates(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n      this.getUpdatesToShow()\n        .then((updates: Update[]) => {\n          updates.forEach((update: Update) => {\n            this.alertService.simpleAlert('Info sur la mise à jours', update.title, update.description)\n              .then(() => {\n                resolve(true);\n              });\n          });\n        });\n    });\n  }\n\n  getUpdates(day1?: Date, day2?: Date): Promise<any> {\n    return new Promise((resolve, reject) => {\n      resolve([{\n        id: 1,\n        dateUpdate: new Date(),\n        description: 'Le scan de l\\'outillage de moulage est effectif. Il suffit de le scanner au même endroit qu\\'un kit',\n        title: 'Scan outillage de moulage à la place de la saisie'\n      }]);\n    });\n    // return this.requestService.createGetRequest('');\n  }\n\n  private getUpdatesToShow(): Promise<Update[]> {\n    const day = new Date();\n    const lastConnection = this.authService.authUser.lastCon;\n    return this.getUpdates(lastConnection, day);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(\n    private alertController: AlertController\n  ) { }\n\n  async simpleAlert(header: string, subHeader: string, message: string) {\n    const alert = await this.alertController.create({\n      cssClass: 'simple-alert',\n      header,\n      subHeader,\n      message,\n      buttons: [\n        {\n          text: 'Fermer',\n          role: 'cancel',\n          id: 'cancel-button',\n        }\n      ]\n    });\n    await alert.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n  ],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport { SharedUserHeaderModule } from 'src/app/composants/shared-user-header/shared-user-header.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  declarations: [LoginPage],\r\n})\r\nexport class LoginPageModule { }\r\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, IonInput, LoadingController, NavController } from '@ionic/angular';\r\nimport { UpdateAppService } from 'src/app/_services/applicationUpdates/update-app.service';\r\nimport { AuthService } from 'src/app/_services/users/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit, AfterViewInit {\r\n  @ViewChild('userName') userName: IonInput;\r\n  @ViewChild('password') password: IonInput;\r\n  public loginForm: FormGroup;\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private alertController: AlertController,\r\n    private loadingController: LoadingController,\r\n    private updateService: UpdateAppService,\r\n    private navControler: NavController\r\n  ) {\r\n    this.loginForm = this.formBuilder.group({\r\n      userName: ['', Validators.required],\r\n      password: ['']\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // this.userName.value = '';\r\n    // this.password.value = '';\r\n    // this.onSubmit();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  async onSubmit() {\r\n    const loading = await this.loadingController.create({\r\n      cssClass: 'my-custom-class',\r\n      message: 'Patienter pendant la connexion',\r\n      spinner: 'lines-sharp'\r\n    });\r\n    await loading.present();\r\n    this.authService.authenticate(\r\n      this.loginForm.get('userName').value,\r\n      this.loginForm.get('password').value || this.loginForm.get('userName').value)\r\n      .then(() => {\r\n        this.updateService.showUpdates()\r\n          .then(() => {\r\n            console.log(this.getSpecialRole(this.authService.authUser.roles));\r\n            switch (this.getSpecialRole(this.authService.authUser.roles)) {\r\n              case 'ROLE_MOULEUR':\r\n                this.navControler.navigateForward('molding');\r\n                break;\r\n              case 'ROLE_ADMIN':\r\n                this.navControler.navigateForward('tooling');\r\n                break;\r\n              default:\r\n                this.navControler.navigateForward('home');\r\n                break;\r\n            }\r\n            this.loginForm.reset();\r\n          });\r\n\r\n      },\r\n        () => {\r\n          this.presentAlertLoginError();\r\n        },\r\n      )\r\n      .finally(() => {\r\n        loading.dismiss();\r\n      });\r\n  }\r\n\r\n  async presentAlertLoginError() {\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Erreur d\\'authentification',\r\n      message: 'Le nom d\\'utilisateur ou votre mot de passe n\\'est pas correct',\r\n      buttons: [\r\n        {\r\n          text: 'Fermer',\r\n          role: 'cancel',\r\n          id: 'cancel-button',\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n\r\n  }\r\n\r\n  getSpecialRole(userRoles: any): string {\r\n    return userRoles[0];\r\n  }\r\n}\r\n","export default \"<!-- <ion-header>\\r\\n    <ion-toolbar>\\r\\n        <ion-title>Connection</ion-title>\\r\\n    </ion-toolbar>\\r\\n</ion-header> -->\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n    <ion-grid fixed class=\\\"full-height ion-align-items-center ion-justify-content-center\\\">\\r\\n        <!-- <ion-row>\\r\\n            <ion-col size=\\\"12\\\">\\r\\n                <ion-title color=primary>Application traçabilité</ion-title>\\r\\n            </ion-col>\\r\\n        </ion-row> -->\\r\\n        <ion-row class=\\\"ion-align-items-center\\\">\\r\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\" (keyup.enter)=\\\"onSubmit()\\\">\\r\\n\\r\\n                <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">Nom d'utilisateur\\r\\n                        <ion-text color=\\\"danger\\\">*</ion-text>\\r\\n                    </ion-label>\\r\\n                    <ion-input autocapitalize=\\\"on\\\" #userName required formControlName=\\\"userName\\\" type=\\\"text\\\" autocomplete=off autofocus=\\\"true\\\" inputmode=numeric value=\\\"204292\\\"></ion-input>\\r\\n                    <ion-note>\\r\\n                        Le nom d'utilisateur est le numéro de matricule présent sur le badge\\r\\n                    </ion-note>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-label position=\\\"floating\\\">Password\\r\\n                        <!-- <ion-text color=\\\"danger\\\">*</ion-text> -->\\r\\n                    </ion-label>\\r\\n                    <ion-input #password formControlName=\\\"password\\\" type=\\\"password\\\" value=\\\"\\\"></ion-input>\\r\\n                </ion-item>\\r\\n                <ion-button block color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\">\\r\\n                    Se connecter\\r\\n                </ion-button>\\r\\n                <ion-button fill=\\\"clear\\\" [routerLink]=\\\"['/register']\\\"> Créer un compte\\r\\n                </ion-button>\\r\\n            </form>\\r\\n        </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}